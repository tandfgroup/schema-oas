# this file is auto-generated. do not change.
AboutPage:
  $ref: 'webpage.yaml#/WebPage'
  description: 'Web page type: About page.'
AcceptAction:
  $ref: 'allocateaction.yaml#/AllocateAction'
  description: >
    The act of committing to/adopting an object.<br/><br/>


    Related actions:<br/><br/>


    <ul>

    <li><a class="localLink"
    href="http://schema.org/RejectAction">RejectAction</a>: The antonym of
    AcceptAction.</li>

    </ul>
Accommodation:
  allOf:
    - $ref: 'place.yaml#/Place'
    - properties:
        amenityFeature:
          $ref: 'locationfeaturespecification.yaml#/LocationFeatureSpecification'
          description: >-
            An amenity feature (e.g. a characteristic or service) of the
            Accommodation. This generic property does not make a statement about
            whether the feature is included in an offer for the main
            accommodation or available at extra costs.
        floorSize:
          $ref: 'quantitativevalue.yaml#/QuantitativeValue'
          description: >-
            The size of the accommodation, e.g. in square meter or squarefoot.

            Typical unit code(s): MTK for square meter, FTK for square foot, or
            YDK for square yard
        numberOfRooms:
          description: >-
            The number of rooms (excluding bathrooms and closets) of the
            accommodation or lodging business.

            Typical unit code(s): ROM for room or C62 for no unit. The type of
            room can be put in the unitText property of the QuantitativeValue.
          oneOf:
            - type: number
            - $ref: 'quantitativevalue.yaml#/QuantitativeValue'
        permittedUsage:
          description: Indications regarding the permitted usage of the accommodation.
          type: string
        petsAllowed:
          description: >-
            Indicates whether pets are allowed to enter the accommodation or
            lodging business. More detailed information can be put in a text
            value.
          oneOf:
            - type: boolean
            - type: string
      type: object
  description: >-
    An accommodation is a place that can accommodate human beings, e.g. a hotel
    room, a camping pitch, or a meeting room. Many accommodations are for
    overnight stays, but this is not a mandatory requirement.

    For more specific types of accommodations not defined in schema.org, one can
    use additionalType with external vocabularies.

    <br /><br />

    See also the <a href="/docs/hotels.html">dedicated document on the use of
    schema.org for marking up hotels and other forms of accommodations</a>.
AccountingService:
  $ref: 'financialservice.yaml#/FinancialService'
  description: >-
    Accountancy business.<br/><br/>


    As a <a class="localLink"
    href="http://schema.org/LocalBusiness">LocalBusiness</a> it can be described
    as a <a class="localLink" href="http://schema.org/provider">provider</a> of
    one or more <a class="localLink"
    href="http://schema.org/Service">Service</a>(s).
AchieveAction:
  $ref: 'action.yaml#/Action'
  description: >-
    The act of accomplishing something via previous efforts. It is an
    instantaneous action rather than an ongoing process.
Action:
  allOf:
    - $ref: 'thing.yaml#/Thing'
    - properties:
        actionStatus:
          $ref: 'actionstatustype.yaml#/ActionStatusType'
          description: Indicates the current disposition of the Action.
        agent:
          description: >-
            The direct performer or driver of the action (animate or inanimate).
            e.g. <em>John</em> wrote a book.
          oneOf:
            - $ref: 'person.yaml#/Person'
            - $ref: 'organization.yaml#/Organization'
        endTime:
          description: >-
            The endTime of something. For a reserved event or service (e.g.
            FoodEstablishmentReservation), the time that it is expected to end.
            For actions that span a period of time, when the action was
            performed. e.g. John wrote a book from January to
            <em>December</em>.<br/><br/>


            Note that Event uses startDate/endDate instead of startTime/endTime,
            even when describing dates with times. This situation may be
            clarified in future revisions.
          format: date-time
          type: string
        error:
          $ref: 'thing.yaml#/Thing'
          description: 'For failed actions, more information on the cause of the failure.'
        instrument:
          $ref: 'thing.yaml#/Thing'
          description: >-
            The object that helped the agent perform the action. e.g. John wrote
            a book with <em>a pen</em>.
        location:
          description: >-
            The location of for example where the event is happening, an
            organization is located, or where an action takes place.
          oneOf:
            - type: string
            - $ref: 'postaladdress.yaml#/PostalAddress'
            - $ref: 'place.yaml#/Place'
        object:
          $ref: 'thing.yaml#/Thing'
          description: >-
            The object upon which the action is carried out, whose state is kept
            intact or changed. Also known as the semantic roles patient,
            affected or undergoer (which change their state) or theme (which
            doesn't). e.g. John read <em>a book</em>.
        participant:
          description: >-
            Other co-agents that participated in the action indirectly. e.g.
            John wrote a book with <em>Steve</em>.
          oneOf:
            - $ref: 'person.yaml#/Person'
            - $ref: 'organization.yaml#/Organization'
        result:
          $ref: 'thing.yaml#/Thing'
          description: The result produced in the action. e.g. John wrote <em>a book</em>.
        startTime:
          description: >-
            The startTime of something. For a reserved event or service (e.g.
            FoodEstablishmentReservation), the time that it is expected to
            start. For actions that span a period of time, when the action was
            performed. e.g. John wrote a book from <em>January</em> to
            December.<br/><br/>


            Note that Event uses startDate/endDate instead of startTime/endTime,
            even when describing dates with times. This situation may be
            clarified in future revisions.
          format: date-time
          type: string
        target:
          $ref: 'entrypoint.yaml#/EntryPoint'
          description: Indicates a target EntryPoint for an Action.
      type: object
  description: >-
    An action performed by a direct agent and indirect participants upon a
    direct object. Optionally happens at a location with the help of an
    inanimate instrument. The execution of the action may produce a result.
    Specific action sub-type documentation specifies the exact expectation of
    each argument/role.<br/><br/>


    See also <a
    href="http://blog.schema.org/2014/04/announcing-schemaorg-actions.html">blog
    post</a> and <a href="http://schema.org/docs/actions.html">Actions overview
    document</a>.
ActionStatusType:
  $ref: 'enumeration.yaml#/Enumeration'
  description: The status of an Action.
ActivateAction:
  $ref: 'controlaction.yaml#/ControlAction'
  description: >-
    The act of starting or activating a device or application (e.g. starting a
    timer or turning on a flashlight).
AddAction:
  $ref: 'updateaction.yaml#/UpdateAction'
  description: The act of editing by adding an object to a collection.
AdministrativeArea:
  $ref: 'place.yaml#/Place'
  description: >-
    A geographical region, typically under the jurisdiction of a particular
    government.
AdultEntertainment:
  $ref: 'entertainmentbusiness.yaml#/EntertainmentBusiness'
  description: An adult entertainment establishment.
AggregateOffer:
  allOf:
    - $ref: 'offer.yaml#/Offer'
    - properties:
        highPrice:
          description: The highest price of all offers available.
          oneOf:
            - type: number
            - type: string
        lowPrice:
          description: The lowest price of all offers available.
          oneOf:
            - type: string
            - type: number
        offerCount:
          description: The number of offers for the product.
          type: integer
        offers:
          $ref: 'offer.yaml#/Offer'
          description: >-
            An offer to provide this item&#x2014;for example, an offer to sell a
            product, rent the DVD of a movie, perform a service, or give away
            tickets to an event.
      type: object
  description: >-
    When a single product is associated with multiple offers (for example, the
    same pair of shoes is offered by different merchants), then AggregateOffer
    can be used.
AggregateRating:
  allOf:
    - $ref: 'rating.yaml#/Rating'
    - properties:
        itemReviewed:
          $ref: 'thing.yaml#/Thing'
          description: The item that is being reviewed/rated.
        ratingCount:
          description: The count of total number of ratings.
          type: integer
        reviewCount:
          description: The count of total number of reviews.
          type: integer
      type: object
  description: The average rating based on multiple ratings or reviews.
AgreeAction:
  $ref: 'reactaction.yaml#/ReactAction'
  description: >-
    The act of expressing a consistency of opinion with the object. An agent
    agrees to/about an object (a proposition, topic or theme) with participants.
Airline:
  allOf:
    - $ref: 'organization.yaml#/Organization'
    - properties:
        boardingPolicy:
          $ref: 'boardingpolicytype.yaml#/BoardingPolicyType'
          description: >-
            The type of boarding policy used by the airline (e.g. zone-based or
            group-based).
        iataCode:
          description: IATA identifier for an airline or airport.
          type: string
      type: object
  description: An organization that provides flights for passengers.
Airport:
  allOf:
    - $ref: 'civicstructure.yaml#/CivicStructure'
    - properties:
        iataCode:
          description: IATA identifier for an airline or airport.
          type: string
        icaoCode:
          description: ICAO identifier for an airport.
          type: string
      type: object
  description: An airport.
AlignmentObject:
  allOf:
    - $ref: 'intangible.yaml#/Intangible'
    - properties:
        alignmentType:
          description: >-
            A category of alignment between the learning resource and the
            framework node. Recommended values include: 'assesses', 'teaches',
            'requires', 'textComplexity', 'readingLevel', 'educationalSubject',
            and 'educationalLevel'.
          type: string
        educationalFramework:
          description: The framework to which the resource being described is aligned.
          type: string
        targetDescription:
          description: The description of a node in an established educational framework.
          type: string
        targetName:
          description: The name of a node in an established educational framework.
          type: string
        targetUrl:
          $ref: 'url.yaml#/URL'
          description: The URL of a node in an established educational framework.
      type: object
  description: >-
    An intangible item that describes an alignment between a learning resource
    and a node in an educational framework.
AllocateAction:
  allOf:
    - $ref: 'organizeaction.yaml#/OrganizeAction'
    - properties:
        purpose:
          description: A goal towards an action is taken. Can be concrete or abstract.
          oneOf:
            - $ref: 'thing.yaml#/Thing'
            - description: MedicalDevicePurpose type is not published yet in schema.org.
              type: object
      type: object
  description: The act of organizing tasks/objects/events by associating resources to it.
AmusementPark:
  $ref: 'entertainmentbusiness.yaml#/EntertainmentBusiness'
  description: An amusement park.
AnimalShelter:
  $ref: 'localbusiness.yaml#/LocalBusiness'
  description: Animal shelter.
Answer:
  $ref: 'comment.yaml#/Comment'
  description: >-
    An answer offered to a question; perhaps correct, perhaps opinionated or
    wrong.
Apartment:
  allOf:
    - $ref: 'accommodation.yaml#/Accommodation'
    - properties:
        numberOfRooms:
          description: >-
            The number of rooms (excluding bathrooms and closets) of the
            accommodation or lodging business.

            Typical unit code(s): ROM for room or C62 for no unit. The type of
            room can be put in the unitText property of the QuantitativeValue.
          oneOf:
            - type: number
            - $ref: 'quantitativevalue.yaml#/QuantitativeValue'
        occupancy:
          $ref: 'quantitativevalue.yaml#/QuantitativeValue'
          description: >-
            The allowed total occupancy for the accommodation in persons
            (including infants etc). For individual accommodations, this is not
            necessarily the legal maximum but defines the permitted usage as per
            the contractual agreement (e.g. a double room used by a single
            person).

            Typical unit code(s): C62 for person
      type: object
  description: >-
    An apartment (in American English) or flat (in British English) is a
    self-contained housing unit (a type of residential real estate) that
    occupies only part of a building (Source: Wikipedia, the free encyclopedia,
    see <a
    href="http://en.wikipedia.org/wiki/Apartment">http://en.wikipedia.org/wiki/Apartment</a>).
ApartmentComplex:
  $ref: 'residence.yaml#/Residence'
  description: 'Residence type: Apartment complex.'
APIReference:
  allOf:
    - $ref: 'techarticle.yaml#/TechArticle'
    - properties:
        assembly:
          description: 'Library file name e.g., mscorlib.dll, system.web.dll.'
          type: string
        assemblyVersion:
          description: 'Associated product/technology version. e.g., .NET Framework 4.5.'
          type: string
        executableLibraryName:
          description: 'Library file name e.g., mscorlib.dll, system.web.dll.'
          type: string
        programmingModel:
          description: Indicates whether API is managed or unmanaged.
          type: string
        targetPlatform:
          description: 'Type of app development: phone, Metro style, desktop, XBox, etc.'
          type: string
      type: object
  description: Reference documentation for application programming interfaces (APIs).
AppendAction:
  $ref: 'insertaction.yaml#/InsertAction'
  description: The act of inserting at the end if an ordered collection.
ApplyAction:
  $ref: 'organizeaction.yaml#/OrganizeAction'
  description: >
    The act of registering to an organization/service without the guarantee to
    receive it.<br/><br/>


    Related actions:<br/><br/>


    <ul>

    <li><a class="localLink"
    href="http://schema.org/RegisterAction">RegisterAction</a>: Unlike
    RegisterAction, ApplyAction has no guarantees that the application will be
    accepted.</li>

    </ul>
Aquarium:
  $ref: 'civicstructure.yaml#/CivicStructure'
  description: Aquarium.
ArriveAction:
  $ref: 'moveaction.yaml#/MoveAction'
  description: >-
    The act of arriving at a place. An agent arrives at a destination from a
    fromLocation, optionally with participants.
ArtGallery:
  $ref: 'entertainmentbusiness.yaml#/EntertainmentBusiness'
  description: An art gallery.
Article:
  allOf:
    - $ref: 'creativework.yaml#/CreativeWork'
    - properties:
        articleBody:
          description: The actual body of the article.
          type: string
        articleSection:
          description: >-
            Articles may belong to one or more 'sections' in a magazine or
            newspaper, such as Sports, Lifestyle, etc.
          type: string
        backstory:
          description: >-
            For an <a class="localLink"
            href="http://schema.org/Article">Article</a>, typically a <a
            class="localLink"
            href="http://schema.org/NewsArticle">NewsArticle</a>, the backstory
            property provides a textual summary giving a brief explanation of
            why and how an article was created. In a journalistic setting this
            could include information about reporting process, methods,
            interviews, data sources, etc.
          oneOf:
            - $ref: 'creativework.yaml#/CreativeWork'
            - type: string
        pageEnd:
          description: The page on which the work ends; for example "138" or "xvi".
          oneOf:
            - type: string
            - type: integer
        pageStart:
          description: The page on which the work starts; for example "135" or "xiii".
          oneOf:
            - type: string
            - type: integer
        pagination:
          description: >-
            Any description of pages that is not separated into pageStart and
            pageEnd; for example, "1-6, 9, 55" or "10-12, 46-49".
          type: string
        speakable:
          description: >-
            Indicates sections of a Web page that are particularly 'speakable'
            in the sense of being highlighted as being especially appropriate
            for text-to-speech conversion. Other sections of a page may also be
            usefully spoken in particular circumstances; the 'speakable'
            property serves to indicate the parts most likely to be generally
            useful for speech.<br/><br/>


            The <em>speakable</em> property can be repeated an arbitrary number
            of times, with three kinds of possible 'content-locator'
            values:<br/><br/>


            1.) <em>id-value</em> URL references - uses <em>id-value</em> of an
            element in the page being annotated. The simplest use of
            <em>speakable</em> has (potentially relative) URL values,
            referencing identified sections of the document concerned.<br/><br/>


            2.) CSS Selectors - addresses content in the annotated page, eg. via
            class attribute. Use the <a class="localLink"
            href="http://schema.org/cssSelector">cssSelector</a>
            property.<br/><br/>


            3.)  XPaths - addresses content via XPaths (assuming an XML view of
            the content). Use the <a class="localLink"
            href="http://schema.org/xpath">xpath</a> property.<br/><br/>


            For more sophisticated markup of speakable sections beyond simple ID
            references, either CSS selectors or XPath expressions to pick out
            document section(s) as speakable. For this

            we define a supporting type, <a class="localLink"
            href="http://schema.org/SpeakableSpecification">SpeakableSpecification</a> 
            which is defined to be a possible value of the <em>speakable</em>
            property.
          oneOf:
            - $ref: 'url.yaml#/URL'
            - description: SpeakableSpecification type is not published yet in schema.org.
              type: object
        wordCount:
          description: The number of words in the text of the Article.
          type: integer
      type: object
  description: >-
    An article, such as a news article or piece of investigative report.
    Newspapers and magazines have articles of many different types and this is
    intended to cover them all.<br/><br/>


    See also <a
    href="http://blog.schema.org/2014/09/schemaorg-support-for-bibliographic_2.html">blog
    post</a>.
AskAction:
  allOf:
    - $ref: 'communicateaction.yaml#/CommunicateAction'
    - properties:
        question:
          $ref: 'question.yaml#/Question'
          description: A sub property of object. A question.
      type: object
  description: >
    The act of posing a question / favor to someone.<br/><br/>


    Related actions:<br/><br/>


    <ul>

    <li><a class="localLink"
    href="http://schema.org/ReplyAction">ReplyAction</a>: Appears generally as a
    response to AskAction.</li>

    </ul>
AssessAction:
  $ref: 'action.yaml#/Action'
  description: 'The act of forming one''s opinion, reaction or sentiment.'
AssignAction:
  $ref: 'allocateaction.yaml#/AllocateAction'
  description: >-
    The act of allocating an action/event/task to some destination (someone or
    something).
Attorney:
  $ref: 'legalservice.yaml#/LegalService'
  description: >-
    Professional service: Attorney. <br/><br/>


    This type is deprecated - <a class="localLink"
    href="http://schema.org/LegalService">LegalService</a> is more inclusive and
    less ambiguous.
Audience:
  allOf:
    - $ref: 'intangible.yaml#/Intangible'
    - properties:
        audienceType:
          description: >-
            The target group associated with a given audience (e.g. veterans,
            car owners, musicians, etc.).
          type: string
        geographicArea:
          $ref: 'administrativearea.yaml#/AdministrativeArea'
          description: The geographic area associated with the audience.
      type: object
  description: 'Intended audience for an item, i.e. the group for whom the item was created.'
AudioObject:
  allOf:
    - $ref: 'mediaobject.yaml#/MediaObject'
    - properties:
        transcript:
          description: >-
            If this MediaObject is an AudioObject or VideoObject, the transcript
            of that object.
          type: string
      type: object
  description: An audio file.
AuthorizeAction:
  allOf:
    - $ref: 'allocateaction.yaml#/AllocateAction'
    - properties:
        recipient:
          description: >-
            A sub property of participant. The participant who is at the
            receiving end of the action.
          oneOf:
            - $ref: 'contactpoint.yaml#/ContactPoint'
            - $ref: 'person.yaml#/Person'
            - $ref: 'organization.yaml#/Organization'
            - $ref: 'audience.yaml#/Audience'
      type: object
  description: The act of granting permission to an object.
AutoBodyShop:
  $ref: 'automotivebusiness.yaml#/AutomotiveBusiness'
  description: Auto body shop.
AutoDealer:
  $ref: 'automotivebusiness.yaml#/AutomotiveBusiness'
  description: An car dealership.
AutomatedTeller:
  $ref: 'financialservice.yaml#/FinancialService'
  description: ATM/cash machine.
AutomotiveBusiness:
  $ref: 'localbusiness.yaml#/LocalBusiness'
  description: 'Car repair, sales, or parts.'
AutoPartsStore:
  description: An auto parts store.
AutoRental:
  $ref: 'automotivebusiness.yaml#/AutomotiveBusiness'
  description: A car rental business.
AutoRepair:
  $ref: 'automotivebusiness.yaml#/AutomotiveBusiness'
  description: Car repair business.
AutoWash:
  $ref: 'automotivebusiness.yaml#/AutomotiveBusiness'
  description: A car wash business.
Bakery:
  $ref: 'foodestablishment.yaml#/FoodEstablishment'
  description: A bakery.
BankAccount:
  allOf:
    - $ref: 'financialproduct.yaml#/FinancialProduct'
    - properties:
        accountMinimumInflow:
          $ref: 'monetaryamount.yaml#/MonetaryAmount'
          description: A minimum amount that has to be paid in every month.
        accountOverdraftLimit:
          $ref: 'monetaryamount.yaml#/MonetaryAmount'
          description: >-
            An overdraft is an extension of credit from a lending institution
            when an account reaches zero. An overdraft allows the individual to
            continue withdrawing money even if the account has no funds in it.
            Basically the bank allows people to borrow a set amount of money.
        bankAccountType:
          description: The type of a bank account.
          oneOf:
            - $ref: 'url.yaml#/URL'
            - type: string
      type: object
  description: >-
    A product or service offered by a bank whereby one may deposit, withdraw or
    transfer money and in some cases be paid interest.
BankOrCreditUnion:
  $ref: 'financialservice.yaml#/FinancialService'
  description: Bank or credit union.
Barcode:
  $ref: 'imageobject.yaml#/ImageObject'
  description: An image of a visual machine-readable code such as a barcode or QR code.
BarOrPub:
  $ref: 'foodestablishment.yaml#/FoodEstablishment'
  description: A bar or pub.
Beach:
  $ref: 'civicstructure.yaml#/CivicStructure'
  description: Beach.
BeautySalon:
  $ref: 'healthandbeautybusiness.yaml#/HealthAndBeautyBusiness'
  description: Beauty salon.
BedAndBreakfast:
  $ref: 'lodgingbusiness.yaml#/LodgingBusiness'
  description: >-
    Bed and breakfast.

    <br /><br />

    See also the <a href="/docs/hotels.html">dedicated document on the use of
    schema.org for marking up hotels and other forms of accommodations</a>.
BedDetails:
  allOf:
    - $ref: 'intangible.yaml#/Intangible'
    - properties:
        numberOfBeds:
          description: >-
            The quantity of the given bed type available in the HotelRoom,
            Suite, House, or Apartment.
          type: number
        typeOfBed:
          description: >-
            The type of bed to which the BedDetail refers, i.e. the type of bed
            available in the quantity indicated by quantity.
          oneOf:
            - description: BedType type is not published yet in schema.org.
              type: object
            - type: string
      type: object
  description: >-
    An entity holding detailed information about the available bed types, e.g.
    the quantity of twin beds for a hotel room. For the single case of just one
    bed of a certain type, you can use bed directly with a text. See also <a
    class="localLink" href="http://schema.org/BedType">BedType</a> (under
    development).
BefriendAction:
  $ref: 'interactaction.yaml#/InteractAction'
  description: >
    The act of forming a personal connection with someone (object)
    mutually/bidirectionally/symmetrically.<br/><br/>


    Related actions:<br/><br/>


    <ul>

    <li><a class="localLink"
    href="http://schema.org/FollowAction">FollowAction</a>: Unlike FollowAction,
    BefriendAction implies that the connection is reciprocal.</li>

    </ul>
BikeStore:
  $ref: 'store.yaml#/Store'
  description: A bike store.
Blog:
  allOf:
    - $ref: 'creativework.yaml#/CreativeWork'
    - properties:
        blogPost:
          $ref: 'blogposting.yaml#/BlogPosting'
          description: A posting that is part of this blog.
        blogPosts:
          $ref: 'blogposting.yaml#/BlogPosting'
          description: The postings that are part of this blog.
        issn:
          description: >-
            The International Standard Serial Number (ISSN) that identifies this
            serial publication. You can repeat this property to identify
            different formats of, or the linking ISSN (ISSN-L) for, this serial
            publication.
          type: string
      type: object
  description: A blog.
BlogPosting:
  $ref: 'socialmediaposting.yaml#/SocialMediaPosting'
  description: A blog post.
BoardingPolicyType:
  $ref: 'enumeration.yaml#/Enumeration'
  description: A type of boarding policy used by an airline.
BodyOfWater:
  $ref: 'landform.yaml#/Landform'
  description: 'A body of water, such as a sea, ocean, or lake.'
Book:
  allOf:
    - $ref: 'creativework.yaml#/CreativeWork'
    - properties:
        abridged:
          description: Indicates whether the book is an abridged edition.
          type: boolean
        bookEdition:
          description: The edition of the book.
          type: string
        bookFormat:
          $ref: 'bookformattype.yaml#/BookFormatType'
          description: The format of the book.
        illustrator:
          $ref: 'person.yaml#/Person'
          description: The illustrator of the book.
        isbn:
          description: The ISBN of the book.
          type: string
        numberOfPages:
          description: The number of pages in the book.
          type: integer
      type: object
  description: A book.
BookFormatType:
  $ref: 'enumeration.yaml#/Enumeration'
  description: The publication format of the book.
BookmarkAction:
  $ref: 'organizeaction.yaml#/OrganizeAction'
  description: An agent bookmarks/flags/labels/tags/marks an object.
BookSeries:
  $ref: 'creativeworkseries.yaml#/CreativeWorkSeries'
  description: >-
    A series of books. Included books can be indicated with the hasPart
    property.
BookStore:
  $ref: 'store.yaml#/Store'
  description: A bookstore.
BorrowAction:
  allOf:
    - $ref: 'transferaction.yaml#/TransferAction'
    - properties:
        lender:
          description: >-
            A sub property of participant. The person that lends the object
            being borrowed.
          oneOf:
            - $ref: 'person.yaml#/Person'
            - $ref: 'organization.yaml#/Organization'
      type: object
  description: >
    The act of obtaining an object under an agreement to return it at a later
    date. Reciprocal of LendAction.<br/><br/>


    Related actions:<br/><br/>


    <ul>

    <li><a class="localLink" href="http://schema.org/LendAction">LendAction</a>:
    Reciprocal of BorrowAction.</li>

    </ul>
BowlingAlley:
  $ref: 'sportsactivitylocation.yaml#/SportsActivityLocation'
  description: A bowling alley.
Brand:
  allOf:
    - $ref: 'intangible.yaml#/Intangible'
    - properties:
        aggregateRating:
          $ref: 'aggregaterating.yaml#/AggregateRating'
          description: >-
            The overall rating, based on a collection of reviews or ratings, of
            the item.
        logo:
          description: An associated logo.
          oneOf:
            - $ref: 'imageobject.yaml#/ImageObject'
            - $ref: 'url.yaml#/URL'
        review:
          $ref: 'review.yaml#/Review'
          description: A review of the item.
      type: object
  description: >-
    A brand is a name used by an organization or business person for labeling a
    product, product group, or similar.
BreadcrumbList:
  $ref: 'itemlist.yaml#/ItemList'
  description: >-
    A BreadcrumbList is an ItemList consisting of a chain of linked Web pages,
    typically described using at least their URL and their name, and typically
    ending with the current page.<br/><br/>


    The <a class="localLink" href="http://schema.org/position">position</a>
    property is used to reconstruct the order of the items in a BreadcrumbList
    The convention is that a breadcrumb list has an <a class="localLink"
    href="http://schema.org/itemListOrder">itemListOrder</a> of <a
    class="localLink"
    href="http://schema.org/ItemListOrderAscending">ItemListOrderAscending</a>
    (lower values listed first), and that the first items in this list
    correspond to the "top" or beginning of the breadcrumb trail, e.g. with a
    site or section homepage. The specific values of 'position' are not assigned
    meaning for a BreadcrumbList, but they should be integers, e.g. beginning
    with '1' for the first item in the list.
Brewery:
  $ref: 'foodestablishment.yaml#/FoodEstablishment'
  description: Brewery.
Bridge:
  $ref: 'civicstructure.yaml#/CivicStructure'
  description: A bridge.
BroadcastChannel:
  allOf:
    - $ref: 'intangible.yaml#/Intangible'
    - properties:
        broadcastChannelId:
          description: >-
            The unique address by which the BroadcastService can be identified
            in a provider lineup. In US, this is typically a number.
          type: string
        broadcastFrequency:
          description: >-
            The frequency used for over-the-air broadcasts. Numeric values or
            simple ranges e.g. 87-99. In addition a shortcut idiom is supported
            for frequences of AM and FM radio channels, e.g. "87 FM".
          oneOf:
            - type: string
            - description: >-
                BroadcastFrequencySpecification type is not published yet in
                schema.org.
              type: object
        broadcastServiceTier:
          description: >-
            The type of service required to have access to the channel (e.g.
            Standard or Premium).
          type: string
        genre:
          description: 'Genre of the creative work, broadcast channel or group.'
          oneOf:
            - $ref: 'url.yaml#/URL'
            - type: string
        inBroadcastLineup:
          $ref: 'cableorsatelliteservice.yaml#/CableOrSatelliteService'
          description: The CableOrSatelliteService offering the channel.
        providesBroadcastService:
          $ref: 'broadcastservice.yaml#/BroadcastService'
          description: The BroadcastService offered on this channel.
      type: object
  description: A unique instance of a BroadcastService on a CableOrSatelliteService lineup.
BroadcastEvent:
  allOf:
    - $ref: 'publicationevent.yaml#/PublicationEvent'
    - properties:
        broadcastOfEvent:
          $ref: 'event.yaml#/Event'
          description: >-
            The event being broadcast such as a sporting event or awards
            ceremony.
        isLiveBroadcast:
          description: True is the broadcast is of a live event.
          type: boolean
        videoFormat:
          description: >-
            The type of screening or video broadcast used (e.g. IMAX, 3D, SD,
            HD, etc.).
          type: string
      type: object
  description: An over the air or online broadcast event.
BroadcastService:
  allOf:
    - $ref: 'service.yaml#/Service'
    - properties:
        area:
          $ref: 'place.yaml#/Place'
          description: >-
            The area within which users can expect to reach the broadcast
            service.
        broadcastAffiliateOf:
          $ref: 'organization.yaml#/Organization'
          description: The media network(s) whose content is broadcast on this station.
        broadcastDisplayName:
          description: >-
            The name displayed in the channel guide. For many US affiliates, it
            is the network name.
          type: string
        broadcastFrequency:
          description: >-
            The frequency used for over-the-air broadcasts. Numeric values or
            simple ranges e.g. 87-99. In addition a shortcut idiom is supported
            for frequences of AM and FM radio channels, e.g. "87 FM".
          oneOf:
            - type: string
            - description: >-
                BroadcastFrequencySpecification type is not published yet in
                schema.org.
              type: object
        broadcastTimezone:
          description: >-
            The timezone in <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO
            8601 format</a> for which the service bases its broadcasts
          type: string
        broadcaster:
          $ref: 'organization.yaml#/Organization'
          description: The organization owning or operating the broadcast service.
        hasBroadcastChannel:
          $ref: 'broadcastchannel.yaml#/BroadcastChannel'
          description: A broadcast channel of a broadcast service.
        parentService:
          $ref: 'broadcastservice.yaml#/BroadcastService'
          description: >-
            A broadcast service to which the broadcast service may belong to
            such as regional variations of a national channel.
        videoFormat:
          description: >-
            The type of screening or video broadcast used (e.g. IMAX, 3D, SD,
            HD, etc.).
          type: string
      type: object
  description: >-
    A delivery service through which content is provided via broadcast over the
    air or online.
BuddhistTemple:
  $ref: 'placeofworship.yaml#/PlaceOfWorship'
  description: A Buddhist temple.
BusinessAudience:
  allOf:
    - $ref: 'audience.yaml#/Audience'
    - properties:
        numberOfEmployees:
          $ref: 'quantitativevalue.yaml#/QuantitativeValue'
          description: The number of employees in an organization e.g. business.
        yearlyRevenue:
          $ref: 'quantitativevalue.yaml#/QuantitativeValue'
          description: The size of the business in annual revenue.
        yearsInOperation:
          $ref: 'quantitativevalue.yaml#/QuantitativeValue'
          description: The age of the business.
      type: object
  description: >-
    A set of characteristics belonging to businesses, e.g. who compose an item's
    target audience.
BusinessEntityType:
  $ref: 'enumeration.yaml#/Enumeration'
  description: >
    A business entity type is a conceptual entity representing the legal form,
    the size, the main line of business, the position in the value chain, or any
    combination thereof, of an organization or business person.<br/><br/>


    Commonly used values:<br/><br/>


    <ul>

    <li>http://purl.org/goodrelations/v1#Business</li>

    <li>http://purl.org/goodrelations/v1#Enduser</li>

    <li>http://purl.org/goodrelations/v1#PublicInstitution</li>

    <li>http://purl.org/goodrelations/v1#Reseller</li>

    </ul>
BusinessEvent:
  $ref: 'event.yaml#/Event'
  description: 'Event type: Business event.'
BusinessFunction:
  $ref: 'enumeration.yaml#/Enumeration'
  description: >
    The business function specifies the type of activity or access (i.e., the
    bundle of rights) offered by the organization or business person through the
    offer. Typical are sell, rental or lease, maintenance or repair, manufacture
    / produce, recycle / dispose, engineering / construction, or installation.
    Proprietary specifications of access rights are also instances of this
    class.<br/><br/>


    Commonly used values:<br/><br/>


    <ul>

    <li>http://purl.org/goodrelations/v1#ConstructionInstallation</li>

    <li>http://purl.org/goodrelations/v1#Dispose</li>

    <li>http://purl.org/goodrelations/v1#LeaseOut</li>

    <li>http://purl.org/goodrelations/v1#Maintain</li>

    <li>http://purl.org/goodrelations/v1#ProvideService</li>

    <li>http://purl.org/goodrelations/v1#Repair</li>

    <li>http://purl.org/goodrelations/v1#Sell</li>

    <li>http://purl.org/goodrelations/v1#Buy</li>

    </ul>
BusReservation:
  $ref: 'reservation.yaml#/Reservation'
  description: >-
    A reservation for bus travel. <br/><br/>


    Note: This type is for information about actual reservations, e.g. in
    confirmation emails or HTML pages with individual confirmations of
    reservations. For offers of tickets, use <a class="localLink"
    href="http://schema.org/Offer">Offer</a>.
BusStation:
  $ref: 'civicstructure.yaml#/CivicStructure'
  description: A bus station.
BusStop:
  $ref: 'civicstructure.yaml#/CivicStructure'
  description: A bus stop.
BusTrip:
  allOf:
    - $ref: 'trip.yaml#/Trip'
    - properties:
        arrivalBusStop:
          description: The stop or station from which the bus arrives.
          oneOf:
            - $ref: 'busstop.yaml#/BusStop'
            - $ref: 'busstation.yaml#/BusStation'
        busName:
          description: The name of the bus (e.g. Bolt Express).
          type: string
        busNumber:
          description: The unique identifier for the bus.
          type: string
        departureBusStop:
          description: The stop or station from which the bus departs.
          oneOf:
            - $ref: 'busstation.yaml#/BusStation'
            - $ref: 'busstop.yaml#/BusStop'
      type: object
  description: A trip on a commercial bus line.
BuyAction:
  allOf:
    - $ref: 'tradeaction.yaml#/TradeAction'
    - properties:
        seller:
          description: >-
            An entity which offers (sells / leases / lends / loans) the services
            / goods.  A seller may also be a provider.
          oneOf:
            - $ref: 'person.yaml#/Person'
            - $ref: 'organization.yaml#/Organization'
        vendor:
          description: '''vendor'' is an earlier term for ''seller''.'
          oneOf:
            - $ref: 'organization.yaml#/Organization'
            - $ref: 'person.yaml#/Person'
        warrantyPromise:
          $ref: 'warrantypromise.yaml#/WarrantyPromise'
          description: The warranty promise(s) included in the offer.
      type: object
  description: >-
    The act of giving money to a seller in exchange for goods or services
    rendered. An agent buys an object, product, or service from a seller for a
    price. Reciprocal of SellAction.
CableOrSatelliteService:
  $ref: 'service.yaml#/Service'
  description: >-
    A service which provides access to media programming like TV or radio.
    Access may be via cable or satellite.
CafeOrCoffeeShop:
  $ref: 'foodestablishment.yaml#/FoodEstablishment'
  description: A cafe or coffee shop.
Campground:
  description: >-
    A camping site, campsite, or campground is a place used for overnight stay
    in the outdoors. In British English a campsite is an area, usually divided
    into a number of pitches, where people can camp overnight using tents or
    camper vans or caravans; this British English use of the word is synonymous
    with the American English expression campground. In American English the
    term campsite generally means an area where an individual, family, group, or
    military unit can pitch a tent or parks a camper; a campground may contain
    many campsites (Source: Wikipedia, the free encyclopedia, see <a
    href="http://en.wikipedia.org/wiki/Campsite">http://en.wikipedia.org/wiki/Campsite</a>).

    <br /><br />

    See also the <a href="/docs/hotels.html">dedicated document on the use of
    schema.org for marking up hotels and other forms of accommodations</a>.
CampingPitch:
  $ref: 'accommodation.yaml#/Accommodation'
  description: >-
    A camping pitch is an individual place for overnight stay in the outdoors,
    typically being part of a larger camping site.

    <br /><br />

    See also the <a href="/docs/hotels.html">dedicated document on the use of
    schema.org for marking up hotels and other forms of accommodations</a>.
Canal:
  $ref: 'bodyofwater.yaml#/BodyOfWater'
  description: 'A canal, like the Panama Canal.'
CancelAction:
  $ref: 'planaction.yaml#/PlanAction'
  description: >
    The act of asserting that a future event/action is no longer going to
    happen.<br/><br/>


    Related actions:<br/><br/>


    <ul>

    <li><a class="localLink"
    href="http://schema.org/ConfirmAction">ConfirmAction</a>: The antonym of
    CancelAction.</li>

    </ul>
Car:
  allOf:
    - $ref: 'vehicle.yaml#/Vehicle'
    - properties:
        acrissCode:
          description: >-
            The ACRISS Car Classification Code is a code used by many car rental
            companies, for classifying vehicles. ACRISS stands for Association
            of Car Rental Industry Systems and Standards.
          type: string
        roofLoad:
          $ref: 'quantitativevalue.yaml#/QuantitativeValue'
          description: >
            The permitted total weight of cargo and installations (e.g. a roof
            rack) on top of the vehicle.<br/><br/>


            Typical unit code(s): KGM for kilogram, LBR for pound<br/><br/>


            <ul>

            <li>Note 1: You can indicate additional information in the <a
            class="localLink" href="http://schema.org/name">name</a> of the <a
            class="localLink"
            href="http://schema.org/QuantitativeValue">QuantitativeValue</a>
            node.</li>

            <li>Note 2: You may also link to a <a class="localLink"
            href="http://schema.org/QualitativeValue">QualitativeValue</a> node
            that provides additional information using <a class="localLink"
            href="http://schema.org/valueReference">valueReference</a></li>

            <li>Note 3: Note that you can use <a class="localLink"
            href="http://schema.org/minValue">minValue</a> and <a
            class="localLink" href="http://schema.org/maxValue">maxValue</a> to
            indicate ranges.</li>

            </ul>
      type: object
  description: 'A car is a wheeled, self-powered motor vehicle used for transportation.'
Casino:
  $ref: 'entertainmentbusiness.yaml#/EntertainmentBusiness'
  description: A casino.
CatholicChurch:
  $ref: 'placeofworship.yaml#/PlaceOfWorship'
  description: A Catholic church.
Cemetery:
  $ref: 'civicstructure.yaml#/CivicStructure'
  description: A graveyard.
CheckAction:
  $ref: 'findaction.yaml#/FindAction'
  description: >-
    An agent inspects, determines, investigates, inquires, or examines an
    object's accuracy, quality, condition, or state.
CheckInAction:
  $ref: 'communicateaction.yaml#/CommunicateAction'
  description: >
    The act of an agent communicating (service provider, social media, etc)
    their arrival by registering/confirming for a previously reserved service
    (e.g. flight check in) or at a place (e.g. hotel), possibly resulting in a
    result (boarding pass, etc).<br/><br/>


    Related actions:<br/><br/>


    <ul>

    <li><a class="localLink"
    href="http://schema.org/CheckOutAction">CheckOutAction</a>: The antonym of
    CheckInAction.</li>

    <li><a class="localLink"
    href="http://schema.org/ArriveAction">ArriveAction</a>: Unlike ArriveAction,
    CheckInAction implies that the agent is informing/confirming the start of a
    previously reserved service.</li>

    <li><a class="localLink"
    href="http://schema.org/ConfirmAction">ConfirmAction</a>: Unlike
    ConfirmAction, CheckInAction implies that the agent is informing/confirming
    the <em>start</em> of a previously reserved service rather than its
    validity/existence.</li>

    </ul>
CheckOutAction:
  $ref: 'communicateaction.yaml#/CommunicateAction'
  description: >
    The act of an agent communicating (service provider, social media, etc)
    their departure of a previously reserved service (e.g. flight check in) or
    place (e.g. hotel).<br/><br/>


    Related actions:<br/><br/>


    <ul>

    <li><a class="localLink"
    href="http://schema.org/CheckInAction">CheckInAction</a>: The antonym of
    CheckOutAction.</li>

    <li><a class="localLink"
    href="http://schema.org/DepartAction">DepartAction</a>: Unlike DepartAction,
    CheckOutAction implies that the agent is informing/confirming the end of a
    previously reserved service.</li>

    <li><a class="localLink"
    href="http://schema.org/CancelAction">CancelAction</a>: Unlike CancelAction,
    CheckOutAction implies that the agent is informing/confirming the end of a
    previously reserved service.</li>

    </ul>
CheckoutPage:
  $ref: 'webpage.yaml#/WebPage'
  description: 'Web page type: Checkout page.'
ChildCare:
  $ref: 'localbusiness.yaml#/LocalBusiness'
  description: A Childcare center.
ChildrensEvent:
  $ref: 'event.yaml#/Event'
  description: 'Event type: Children''s event.'
ChooseAction:
  allOf:
    - $ref: 'assessaction.yaml#/AssessAction'
    - properties:
        actionOption:
          description: A sub property of object. The options subject to this action.
          oneOf:
            - type: string
            - $ref: 'thing.yaml#/Thing'
        option:
          description: A sub property of object. The options subject to this action.
          oneOf:
            - type: string
            - $ref: 'thing.yaml#/Thing'
      type: object
  description: >-
    The act of expressing a preference from a set of options or a large or
    unbounded set of choices/options.
Church:
  $ref: 'placeofworship.yaml#/PlaceOfWorship'
  description: A church.
City:
  $ref: 'administrativearea.yaml#/AdministrativeArea'
  description: A city or town.
CityHall:
  $ref: 'governmentbuilding.yaml#/GovernmentBuilding'
  description: A city hall.
CivicStructure:
  allOf:
    - $ref: 'place.yaml#/Place'
    - properties:
        openingHours:
          description: >
            The general opening hours for a business. Opening hours can be
            specified as a weekly time range, starting with days, then times per
            day. Multiple days can be listed with commas ',' separating each
            day. Day or time ranges are specified using a hyphen '-'.<br/><br/>


            <ul>

            <li>Days are specified using the following two-letter combinations:
            <code>Mo</code>, <code>Tu</code>, <code>We</code>, <code>Th</code>,
            <code>Fr</code>, <code>Sa</code>, <code>Su</code>.</li>

            <li>Times are specified using 24:00 time. For example, 3pm is
            specified as <code>15:00</code>. </li>

            <li>Here is an example: <code>&lt;time itemprop="openingHours"
            datetime=&quot;Tu,Th 16:00-20:00&quot;&gt;Tuesdays and Thursdays
            4-8pm&lt;/time&gt;</code>.</li>

            <li>If a business is open 7 days a week, then it can be specified as
            <code>&lt;time itemprop=&quot;openingHours&quot;
            datetime=&quot;Mo-Su&quot;&gt;Monday through Sunday, all
            day&lt;/time&gt;</code>.</li>

            </ul>
          type: string
      type: object
  description: 'A public structure, such as a town hall or concert hall.'
ClaimReview:
  allOf:
    - $ref: 'review.yaml#/Review'
    - properties:
        claimReviewed:
          description: A short summary of the specific claims reviewed in a ClaimReview.
          type: string
      type: object
  description: >-
    A fact-checking review of claims made (or reported) in some creative work
    (referenced via itemReviewed).
Clip:
  allOf:
    - $ref: 'creativework.yaml#/CreativeWork'
    - properties:
        actor:
          $ref: 'person.yaml#/Person'
          description: >-
            An actor, e.g. in tv, radio, movie, video games etc., or in an
            event. Actors can be associated with individual items or with a
            series, episode, clip.
        actors:
          $ref: 'person.yaml#/Person'
          description: >-
            An actor, e.g. in tv, radio, movie, video games etc. Actors can be
            associated with individual items or with a series, episode, clip.
        clipNumber:
          description: Position of the clip within an ordered group of clips.
          oneOf:
            - type: integer
            - type: string
        director:
          $ref: 'person.yaml#/Person'
          description: >-
            A director of e.g. tv, radio, movie, video gaming etc. content, or
            of an event. Directors can be associated with individual items or
            with a series, episode, clip.
        directors:
          $ref: 'person.yaml#/Person'
          description: >-
            A director of e.g. tv, radio, movie, video games etc. content.
            Directors can be associated with individual items or with a series,
            episode, clip.
        musicBy:
          description: The composer of the soundtrack.
          oneOf:
            - $ref: 'musicgroup.yaml#/MusicGroup'
            - $ref: 'person.yaml#/Person'
        partOfEpisode:
          $ref: 'episode.yaml#/Episode'
          description: The episode to which this clip belongs.
        partOfSeason:
          $ref: 'creativeworkseason.yaml#/CreativeWorkSeason'
          description: The season to which this episode belongs.
        partOfSeries:
          $ref: 'creativeworkseries.yaml#/CreativeWorkSeries'
          description: The series to which this episode or season belongs.
      type: object
  description: A short TV or radio program or a segment/part of a program.
ClothingStore:
  $ref: 'store.yaml#/Store'
  description: A clothing store.
Code:
  $ref: 'creativework.yaml#/CreativeWork'
  description: >-
    Computer programming source code. Example: Full (compile ready) solutions,
    code snippet samples, scripts, templates.
CollectionPage:
  $ref: 'webpage.yaml#/WebPage'
  description: 'Web page type: Collection page.'
CollegeOrUniversity:
  $ref: 'educationalorganization.yaml#/EducationalOrganization'
  description: 'A college, university, or other third-level educational institution.'
ComedyClub:
  $ref: 'entertainmentbusiness.yaml#/EntertainmentBusiness'
  description: A comedy club.
ComedyEvent:
  $ref: 'event.yaml#/Event'
  description: 'Event type: Comedy event.'
Comment:
  allOf:
    - $ref: 'creativework.yaml#/CreativeWork'
    - properties:
        downvoteCount:
          description: >-
            The number of downvotes this question, answer or comment has
            received from the community.
          type: integer
        parentItem:
          $ref: 'question.yaml#/Question'
          description: 'The parent of a question, answer or item in general.'
        upvoteCount:
          description: >-
            The number of upvotes this question, answer or comment has received
            from the community.
          type: integer
      type: object
  description: >-
    A comment on an item - for example, a comment on a blog post. The comment's
    content is expressed via the <a class="localLink"
    href="http://schema.org/text">text</a> property, and its topic via <a
    class="localLink" href="http://schema.org/about">about</a>, properties
    shared with all CreativeWorks.
CommentAction:
  allOf:
    - $ref: 'communicateaction.yaml#/CommunicateAction'
    - properties:
        resultComment:
          $ref: 'comment.yaml#/Comment'
          description: >-
            A sub property of result. The Comment created or sent as a result of
            this action.
      type: object
  description: The act of generating a comment about a subject.
CommunicateAction:
  allOf:
    - $ref: 'interactaction.yaml#/InteractAction'
    - properties:
        about:
          $ref: 'thing.yaml#/Thing'
          description: The subject matter of the content.
        inLanguage:
          description: >-
            The language of the content or performance or used in an action.
            Please use one of the language codes from the <a
            href="http://tools.ietf.org/html/bcp47">IETF BCP 47 standard</a>.
            See also <a class="localLink"
            href="http://schema.org/availableLanguage">availableLanguage</a>.
          oneOf:
            - type: string
            - $ref: 'language.yaml#/Language'
        language:
          $ref: 'language.yaml#/Language'
          description: A sub property of instrument. The language used on this action.
        recipient:
          description: >-
            A sub property of participant. The participant who is at the
            receiving end of the action.
          oneOf:
            - $ref: 'audience.yaml#/Audience'
            - $ref: 'contactpoint.yaml#/ContactPoint'
            - $ref: 'organization.yaml#/Organization'
            - $ref: 'person.yaml#/Person'
      type: object
  description: >-
    The act of conveying information to another person via a communication
    medium (instrument) such as speech, email, or telephone conversation.
CompoundPriceSpecification:
  allOf:
    - $ref: 'pricespecification.yaml#/PriceSpecification'
    - properties:
        priceComponent:
          $ref: 'unitpricespecification.yaml#/UnitPriceSpecification'
          description: >-
            This property links to all <a class="localLink"
            href="http://schema.org/UnitPriceSpecification">UnitPriceSpecification</a>
            nodes that apply in parallel for the <a class="localLink"
            href="http://schema.org/CompoundPriceSpecification">CompoundPriceSpecification</a>
            node.
      type: object
  description: >-
    A compound price specification is one that bundles multiple prices that all
    apply in combination for different dimensions of consumption. Use the name
    property of the attached unit price specification for indicating the
    dimension of a price component (e.g. "electricity" or "final cleaning").
ComputerLanguage:
  $ref: 'intangible.yaml#/Intangible'
  description: >-
    This type covers computer programming languages such as Scheme and Lisp, as
    well as other language-like computer representations. Natural languages are
    best represented with the <a class="localLink"
    href="http://schema.org/Language">Language</a> type.
ComputerStore:
  $ref: 'store.yaml#/Store'
  description: A computer store.
ConfirmAction:
  $ref: 'informaction.yaml#/InformAction'
  description: >
    The act of notifying someone that a future event/action is going to happen
    as expected.<br/><br/>


    Related actions:<br/><br/>


    <ul>

    <li><a class="localLink"
    href="http://schema.org/CancelAction">CancelAction</a>: The antonym of
    ConfirmAction.</li>

    </ul>
ConsumeAction:
  allOf:
    - $ref: 'action.yaml#/Action'
    - properties:
        actionAccessibilityRequirement:
          description: >-
            A set of requirements that a must be fulfilled in order to perform
            an Action. If more than one value is specied, fulfilling one set of
            requirements will allow the Action to be performed. Note:
            ActionAccessSpecification type is not published yet in schema.org.
          type: object
        expectsAcceptanceOf:
          $ref: 'offer.yaml#/Offer'
          description: >-
            An Offer which must be accepted before the user can perform the
            Action. For example, the user may need to buy a movie before being
            able to watch it.
      type: object
  description: The act of ingesting information/resources/food.
ContactPage:
  $ref: 'webpage.yaml#/WebPage'
  description: 'Web page type: Contact page.'
ContactPoint:
  allOf:
    - $ref: 'structuredvalue.yaml#/StructuredValue'
    - properties:
        areaServed:
          description: The geographic area where a service or offered item is provided.
          oneOf:
            - type: string
            - $ref: 'place.yaml#/Place'
            - $ref: 'administrativearea.yaml#/AdministrativeArea'
            - $ref: 'geoshape.yaml#/GeoShape'
        availableLanguage:
          description: >-
            A language someone may use with or at the item, service or place.
            Please use one of the language codes from the <a
            href="http://tools.ietf.org/html/bcp47">IETF BCP 47 standard</a>.
            See also <a class="localLink"
            href="http://schema.org/inLanguage">inLanguage</a>
          oneOf:
            - $ref: 'language.yaml#/Language'
            - type: string
        contactOption:
          $ref: 'contactpointoption.yaml#/ContactPointOption'
          description: >-
            An option available on this contact point (e.g. a toll-free number
            or support for hearing-impaired callers).
        contactType:
          description: >-
            A person or organization can have different contact points, for
            different purposes. For example, a sales contact point, a PR contact
            point and so on. This property is used to specify the kind of
            contact point.
          type: string
        email:
          description: Email address.
          type: string
        faxNumber:
          description: The fax number.
          type: string
        hoursAvailable:
          $ref: 'openinghoursspecification.yaml#/OpeningHoursSpecification'
          description: The hours during which this service or contact is available.
        productSupported:
          description: >-
            The product or service this support contact point is related to
            (such as product support for a particular product line). This can be
            a specific product or product line (e.g. "iPhone") or a general
            category of products or services (e.g. "smartphones").
          oneOf:
            - type: string
            - $ref: 'product.yaml#/Product'
        serviceArea:
          description: The geographic area where the service is provided.
          oneOf:
            - $ref: 'geoshape.yaml#/GeoShape'
            - $ref: 'place.yaml#/Place'
            - $ref: 'administrativearea.yaml#/AdministrativeArea'
        telephone:
          description: The telephone number.
          type: string
      type: object
  description: 'A contact point&#x2014;for example, a Customer Complaints department.'
ContactPointOption:
  $ref: 'enumeration.yaml#/Enumeration'
  description: Enumerated options related to a ContactPoint.
Continent:
  $ref: 'landform.yaml#/Landform'
  description: 'One of the continents (for example, Europe or Africa).'
ControlAction:
  $ref: 'action.yaml#/Action'
  description: An agent controls a device or application.
ConvenienceStore:
  $ref: 'store.yaml#/Store'
  description: A convenience store.
Conversation:
  $ref: 'creativework.yaml#/CreativeWork'
  description: >-
    One or more messages between organizations or people on a particular topic.
    Individual messages can be linked to the conversation with isPartOf or
    hasPart properties.
CookAction:
  allOf:
    - $ref: 'createaction.yaml#/CreateAction'
    - properties:
        foodEstablishment:
          description: >-
            A sub property of location. The specific food establishment where
            the action occurred.
          oneOf:
            - $ref: 'place.yaml#/Place'
            - $ref: 'foodestablishment.yaml#/FoodEstablishment'
        foodEvent:
          $ref: 'foodevent.yaml#/FoodEvent'
          description: >-
            A sub property of location. The specific food event where the action
            occurred.
        recipe:
          $ref: 'recipe.yaml#/Recipe'
          description: >-
            A sub property of instrument. The recipe/instructions used to
            perform the action.
      type: object
  description: The act of producing/preparing food.
Corporation:
  allOf:
    - $ref: 'organization.yaml#/Organization'
    - properties:
        tickerSymbol:
          description: >-
            The exchange traded instrument associated with a Corporation object.
            The tickerSymbol is expressed as an exchange and an instrument name
            separated by a space character. For the exchange component of the
            tickerSymbol attribute, we recommend using the controlled vocabulary
            of Market Identifier Codes (MIC) specified in ISO15022.
          type: string
      type: object
  description: 'Organization: A business corporation.'
Country:
  $ref: 'administrativearea.yaml#/AdministrativeArea'
  description: A country.
Course:
  allOf:
    - $ref: 'creativework.yaml#/CreativeWork'
    - properties:
        courseCode:
          description: >-
            The identifier for the <a class="localLink"
            href="http://schema.org/Course">Course</a> used by the course <a
            class="localLink" href="http://schema.org/provider">provider</a>
            (e.g. CS101 or 6.001).
          type: string
        coursePrerequisites:
          description: >-
            Requirements for taking the Course. May be completion of another <a
            class="localLink" href="http://schema.org/Course">Course</a> or a
            textual description like "permission of instructor". Requirements
            may be a pre-requisite competency, referenced using <a
            class="localLink"
            href="http://schema.org/AlignmentObject">AlignmentObject</a>.
          oneOf:
            - $ref: 'course.yaml#/Course'
            - $ref: 'alignmentobject.yaml#/AlignmentObject'
            - type: string
        educationalCredentialAwarded:
          description: >-
            A description of the qualification, award, certificate, diploma or
            other educational credential awarded as a consequence of successful
            completion of this course.
          oneOf:
            - $ref: 'url.yaml#/URL'
            - type: string
        hasCourseInstance:
          $ref: 'courseinstance.yaml#/CourseInstance'
          description: >-
            An offering of the course at a specific time and place or through
            specific media or mode of study or to a specific section of
            students.
      type: object
  description: >-
    A description of an educational course which may be offered as distinct
    instances at which take place at different times or take place at different
    locations, or be offered through different media or modes of study. An
    educational course is a sequence of one or more educational events and/or
    creative works which aims to build knowledge, competence or ability of
    learners.
CourseInstance:
  allOf:
    - $ref: 'event.yaml#/Event'
    - properties:
        courseMode:
          description: >-
            The medium or means of delivery of the course instance or the mode
            of study, either as a text label (e.g. "online", "onsite" or
            "blended"; "synchronous" or "asynchronous"; "full-time" or
            "part-time") or as a URL reference to a term from a controlled
            vocabulary (e.g. https://ceds.ed.gov/element/001311#Asynchronous ).
          oneOf:
            - $ref: 'url.yaml#/URL'
            - type: string
        instructor:
          $ref: 'person.yaml#/Person'
          description: >-
            A person assigned to instruct or provide instructional assistance
            for the <a class="localLink"
            href="http://schema.org/CourseInstance">CourseInstance</a>.
      type: object
  description: >-
    An instance of a <a class="localLink"
    href="http://schema.org/Course">Course</a> which is distinct from other
    instances because it is offered at a different time or location or through
    different media or modes of study or to a specific section of students.
Courthouse:
  $ref: 'governmentbuilding.yaml#/GovernmentBuilding'
  description: A courthouse.
CreateAction:
  $ref: 'action.yaml#/Action'
  description: >-
    The act of deliberately creating/producing/generating/building a result out
    of the agent.
CreativeWork:
  allOf:
    - $ref: 'thing.yaml#/Thing'
    - properties:
        about:
          $ref: 'thing.yaml#/Thing'
          description: The subject matter of the content.
        accessMode:
          description: >-
            The human sensory perceptual system or cognitive faculty through
            which a person may process or perceive information. Expected values
            include: auditory, tactile, textual, visual, colorDependent,
            chartOnVisual, chemOnVisual, diagramOnVisual, mathOnVisual,
            musicOnVisual, textOnVisual.
          type: string
        accessModeSufficient:
          description: >-
            A list of single or combined accessModes that are sufficient to
            understand all the intellectual content of a resource. Expected
            values include:  auditory, tactile, textual, visual.
          type: string
        accessibilityAPI:
          description: >-
            Indicates that the resource is compatible with the referenced
            accessibility API (<a
            href="http://www.w3.org/wiki/WebSchemas/Accessibility">WebSchemas
            wiki lists possible values</a>).
          type: string
        accessibilityControl:
          description: >-
            Identifies input methods that are sufficient to fully control the
            described resource (<a
            href="http://www.w3.org/wiki/WebSchemas/Accessibility">WebSchemas
            wiki lists possible values</a>).
          type: string
        accessibilityFeature:
          description: >-
            Content features of the resource, such as accessible media,
            alternatives and supported enhancements for accessibility (<a
            href="http://www.w3.org/wiki/WebSchemas/Accessibility">WebSchemas
            wiki lists possible values</a>).
          type: string
        accessibilityHazard:
          description: >-
            A characteristic of the described resource that is physiologically
            dangerous to some users. Related to WCAG 2.0 guideline 2.3 (<a
            href="http://www.w3.org/wiki/WebSchemas/Accessibility">WebSchemas
            wiki lists possible values</a>).
          type: string
        accessibilitySummary:
          description: >-
            A human-readable summary of specific accessibility features or
            deficiencies, consistent with the other accessibility metadata but
            expressing subtleties such as "short descriptions are present but
            long descriptions will be needed for non-visual users" or "short
            descriptions are present and no long descriptions are needed."
          type: string
        accountablePerson:
          $ref: 'person.yaml#/Person'
          description: >-
            Specifies the Person that is legally accountable for the
            CreativeWork.
        aggregateRating:
          $ref: 'aggregaterating.yaml#/AggregateRating'
          description: >-
            The overall rating, based on a collection of reviews or ratings, of
            the item.
        alternativeHeadline:
          description: A secondary title of the CreativeWork.
          type: string
        associatedMedia:
          $ref: 'mediaobject.yaml#/MediaObject'
          description: >-
            A media object that encodes this CreativeWork. This property is a
            synonym for encoding.
        audience:
          $ref: 'audience.yaml#/Audience'
          description: 'An intended audience, i.e. a group for whom something was created.'
        audio:
          $ref: 'audioobject.yaml#/AudioObject'
          description: An embedded audio object.
        author:
          description: >-
            The author of this content or rating. Please note that author is
            special in that HTML 5 provides a special mechanism for indicating
            authorship via the rel tag. That is equivalent to this and may be
            used interchangeably.
          oneOf:
            - $ref: 'person.yaml#/Person'
            - $ref: 'organization.yaml#/Organization'
        award:
          description: An award won by or for this item.
          type: string
        awards:
          description: Awards won by or for this item.
          type: string
        character:
          $ref: 'person.yaml#/Person'
          description: Fictional person connected with a creative work.
        citation:
          description: >-
            A citation or reference to another creative work, such as another
            publication, web page, scholarly article, etc.
          oneOf:
            - type: string
            - $ref: 'creativework.yaml#/CreativeWork'
        comment:
          $ref: 'comment.yaml#/Comment'
          description: 'Comments, typically from users.'
        commentCount:
          description: >-
            The number of comments this CreativeWork (e.g. Article, Question or
            Answer) has received. This is most applicable to works published in
            Web sites with commenting system; additional comments may exist
            elsewhere.
          type: integer
        contentLocation:
          $ref: 'place.yaml#/Place'
          description: >-
            The location depicted or described in the content. For example, the
            location in a photograph or painting.
        contentRating:
          description: >-
            Official rating of a piece of content&#x2014;for example,'MPAA
            PG-13'.
          oneOf:
            - $ref: 'rating.yaml#/Rating'
            - type: string
        contentReferenceTime:
          description: >-
            The specific time described by a creative work, for works (e.g.
            articles, video objects etc.) that emphasise a particular moment
            within an Event.
          format: date-time
          type: string
        contributor:
          description: A secondary contributor to the CreativeWork or Event.
          oneOf:
            - $ref: 'organization.yaml#/Organization'
            - $ref: 'person.yaml#/Person'
        copyrightHolder:
          description: The party holding the legal copyright to the CreativeWork.
          oneOf:
            - $ref: 'person.yaml#/Person'
            - $ref: 'organization.yaml#/Organization'
        copyrightYear:
          description: >-
            The year during which the claimed copyright for the CreativeWork was
            first asserted.
          type: number
        correction:
          description: >-
            Indicates a correction to a <a class="localLink"
            href="http://schema.org/CreativeWork">CreativeWork</a>, either via a
            <a class="localLink"
            href="http://schema.org/CorrectionComment">CorrectionComment</a>,
            textually or in another document.
          oneOf:
            - type: string
            - description: CorrectionComment type is not published yet in schema.org.
              type: object
            - $ref: 'url.yaml#/URL'
        creator:
          description: >-
            The creator/author of this CreativeWork. This is the same as the
            Author property for CreativeWork.
          oneOf:
            - $ref: 'organization.yaml#/Organization'
            - $ref: 'person.yaml#/Person'
        dateCreated:
          description: >-
            The date on which the CreativeWork was created or the item was added
            to a DataFeed.
          oneOf:
            - format: date-time
              type: string
            - format: date
              type: string
        dateModified:
          description: >-
            The date on which the CreativeWork was most recently modified or
            when the item's entry was modified within a DataFeed.
          oneOf:
            - format: date
              type: string
            - format: date-time
              type: string
        datePublished:
          description: Date of first broadcast/publication.
          format: date
          type: string
        discussionUrl:
          $ref: 'url.yaml#/URL'
          description: A link to the page containing the comments of the CreativeWork.
        editor:
          $ref: 'person.yaml#/Person'
          description: Specifies the Person who edited the CreativeWork.
        educationalAlignment:
          $ref: 'alignmentobject.yaml#/AlignmentObject'
          description: An alignment to an established educational framework.
        educationalUse:
          description: >-
            The purpose of a work in the context of education; for example,
            'assignment', 'group work'.
          type: string
        encoding:
          $ref: 'mediaobject.yaml#/MediaObject'
          description: >-
            A media object that encodes this CreativeWork. This property is a
            synonym for associatedMedia.
        encodingFormat:
          description: >-
            Media type typically expressed using a MIME format (see <a
            href="http://www.iana.org/assignments/media-types/media-types.xhtml">IANA
            site</a> and <a
            href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types">MDN
            reference</a>) e.g. application/zip for a SoftwareApplication
            binary, audio/mpeg for .mp3 etc.).<br/><br/>


            In cases where a <a class="localLink"
            href="http://schema.org/CreativeWork">CreativeWork</a> has several
            media type representations, <a class="localLink"
            href="http://schema.org/encoding">encoding</a> can be used to
            indicate each <a class="localLink"
            href="http://schema.org/MediaObject">MediaObject</a> alongside
            particular <a class="localLink"
            href="http://schema.org/encodingFormat">encodingFormat</a>
            information.<br/><br/>


            Unregistered or niche encoding and file formats can be indicated
            instead via the most appropriate URL, e.g. defining Web page or a
            Wikipedia/Wikidata entry.
          oneOf:
            - type: string
            - $ref: 'url.yaml#/URL'
        encodings:
          $ref: 'mediaobject.yaml#/MediaObject'
          description: A media object that encodes this CreativeWork.
        exampleOfWork:
          $ref: 'creativework.yaml#/CreativeWork'
          description: >-
            A creative work that this work is an
            example/instance/realization/derivation of.
        expires:
          description: >-
            Date the content expires and is no longer useful or available. For
            example a <a class="localLink"
            href="http://schema.org/VideoObject">VideoObject</a> or <a
            class="localLink"
            href="http://schema.org/NewsArticle">NewsArticle</a> whose
            availability or relevance is time-limited, or a <a class="localLink"
            href="http://schema.org/ClaimReview">ClaimReview</a> fact check
            whose publisher wants to indicate that it may no longer be relevant
            (or helpful to highlight) after some date.
          format: date
          type: string
        fileFormat:
          description: >-
            Media type, typically MIME format (see <a
            href="http://www.iana.org/assignments/media-types/media-types.xhtml">IANA
            site</a>) of the content e.g. application/zip of a
            SoftwareApplication binary. In cases where a CreativeWork has
            several media type representations, 'encoding' can be used to
            indicate each MediaObject alongside particular fileFormat
            information. Unregistered or niche file formats can be indicated
            instead via the most appropriate URL, e.g. defining Web page or a
            Wikipedia entry.
          oneOf:
            - type: string
            - $ref: 'url.yaml#/URL'
        funder:
          description: >-
            A person or organization that supports (sponsors) something through
            some kind of financial contribution.
          oneOf:
            - $ref: 'person.yaml#/Person'
            - $ref: 'organization.yaml#/Organization'
        genre:
          description: 'Genre of the creative work, broadcast channel or group.'
          oneOf:
            - type: string
            - $ref: 'url.yaml#/URL'
        hasPart:
          description: >-
            Indicates an item or CreativeWork that is part of this item, or
            CreativeWork (in some sense).
          oneOf:
            - $ref: 'trip.yaml#/Trip'
            - $ref: 'creativework.yaml#/CreativeWork'
        headline:
          description: Headline of the article.
          type: string
        inLanguage:
          description: >-
            The language of the content or performance or used in an action.
            Please use one of the language codes from the <a
            href="http://tools.ietf.org/html/bcp47">IETF BCP 47 standard</a>.
            See also <a class="localLink"
            href="http://schema.org/availableLanguage">availableLanguage</a>.
          oneOf:
            - $ref: 'language.yaml#/Language'
            - type: string
        interactionStatistic:
          $ref: 'interactioncounter.yaml#/InteractionCounter'
          description: >-
            The number of interactions for the CreativeWork using the WebSite or
            SoftwareApplication. The most specific child type of
            InteractionCounter should be used.
        interactivityType:
          description: >-
            The predominant mode of learning supported by the learning resource.
            Acceptable values are 'active', 'expositive', or 'mixed'.
          type: string
        isAccessibleForFree:
          description: >-
            A flag to signal that the item, event, or place is accessible for
            free.
          type: boolean
        isBasedOn:
          description: >-
            A resource that was used in the creation of this resource. This term
            can be repeated for multiple sources. For example,
            http://example.com/great-multiplication-intro.html.
          oneOf:
            - $ref: 'url.yaml#/URL'
            - $ref: 'creativework.yaml#/CreativeWork'
            - $ref: 'product.yaml#/Product'
        isBasedOnUrl:
          description: >-
            A resource that was used in the creation of this resource. This term
            can be repeated for multiple sources. For example,
            http://example.com/great-multiplication-intro.html.
          oneOf:
            - $ref: 'url.yaml#/URL'
            - $ref: 'product.yaml#/Product'
            - $ref: 'creativework.yaml#/CreativeWork'
        isFamilyFriendly:
          description: Indicates whether this content is family friendly.
          type: boolean
        isPartOf:
          description: >-
            Indicates an item or CreativeWork that this item, or CreativeWork
            (in some sense), is part of.
          oneOf:
            - $ref: 'trip.yaml#/Trip'
            - $ref: 'creativework.yaml#/CreativeWork'
        keywords:
          description: >-
            Keywords or tags used to describe this content. Multiple entries in
            a keywords list are typically delimited by commas.
          type: string
        learningResourceType:
          description: >-
            The predominant type or kind characterizing the learning resource.
            For example, 'presentation', 'handout'.
          type: string
        license:
          description: >-
            A license document that applies to this content, typically indicated
            by URL.
          oneOf:
            - $ref: 'url.yaml#/URL'
            - $ref: 'creativework.yaml#/CreativeWork'
        locationCreated:
          $ref: 'place.yaml#/Place'
          description: >-
            The location where the CreativeWork was created, which may not be
            the same as the location depicted in the CreativeWork.
        mainEntity:
          $ref: 'thing.yaml#/Thing'
          description: >-
            Indicates the primary entity described in some page or other
            CreativeWork.
        material:
          description: >-
            A material that something is made from, e.g. leather, wool, cotton,
            paper.
          oneOf:
            - $ref: 'product.yaml#/Product'
            - type: string
            - $ref: 'url.yaml#/URL'
        mentions:
          $ref: 'thing.yaml#/Thing'
          description: >-
            Indicates that the CreativeWork contains a reference to, but is not
            necessarily about a concept.
        offers:
          $ref: 'offer.yaml#/Offer'
          description: >-
            An offer to provide this item&#x2014;for example, an offer to sell a
            product, rent the DVD of a movie, perform a service, or give away
            tickets to an event.
        position:
          description: The position of an item in a series or sequence of items.
          oneOf:
            - type: integer
            - type: string
        producer:
          description: >-
            The person or organization who produced the work (e.g. music album,
            movie, tv/radio series etc.).
          oneOf:
            - $ref: 'person.yaml#/Person'
            - $ref: 'organization.yaml#/Organization'
        provider:
          description: >-
            The service provider, service operator, or service performer; the
            goods producer. Another party (a seller) may offer those services or
            goods on behalf of the provider. A provider may also serve as the
            seller.
          oneOf:
            - $ref: 'organization.yaml#/Organization'
            - $ref: 'person.yaml#/Person'
        publication:
          $ref: 'publicationevent.yaml#/PublicationEvent'
          description: A publication event associated with the item.
        publisher:
          description: The publisher of the creative work.
          oneOf:
            - $ref: 'person.yaml#/Person'
            - $ref: 'organization.yaml#/Organization'
        publisherImprint:
          $ref: 'organization.yaml#/Organization'
          description: The publishing division which published the comic.
        publishingPrinciples:
          description: >-
            The publishingPrinciples property indicates (typically via <a
            class="localLink" href="http://schema.org/URL">URL</a>) a document
            describing the editorial principles of an <a class="localLink"
            href="http://schema.org/Organization">Organization</a> (or
            individual e.g. a <a class="localLink"
            href="http://schema.org/Person">Person</a> writing a blog) that
            relate to their activities as a publisher, e.g. ethics or diversity
            policies. When applied to a <a class="localLink"
            href="http://schema.org/CreativeWork">CreativeWork</a> (e.g. <a
            class="localLink"
            href="http://schema.org/NewsArticle">NewsArticle</a>) the principles
            are those of the party primarily responsible for the creation of the
            <a class="localLink"
            href="http://schema.org/CreativeWork">CreativeWork</a>.<br/><br/>


            While such policies are most typically expressed in natural
            language, sometimes related information (e.g. indicating a <a
            class="localLink" href="http://schema.org/funder">funder</a>) can be
            expressed using schema.org terminology.
          oneOf:
            - $ref: 'creativework.yaml#/CreativeWork'
            - $ref: 'url.yaml#/URL'
        recordedAt:
          $ref: 'event.yaml#/Event'
          description: >-
            The Event where the CreativeWork was recorded. The CreativeWork may
            capture all or part of the event.
        releasedEvent:
          $ref: 'publicationevent.yaml#/PublicationEvent'
          description: >-
            The place and time the release was issued, expressed as a
            PublicationEvent.
        review:
          $ref: 'review.yaml#/Review'
          description: A review of the item.
        reviews:
          $ref: 'review.yaml#/Review'
          description: Review of the item.
        schemaVersion:
          description: >-
            Indicates (by URL or string) a particular version of a schema used
            in some CreativeWork. For example, a document could declare a
            schemaVersion using an URL such as http://schema.org/version/2.0/ if
            precise indication of schema version was required by some
            application.
          oneOf:
            - $ref: 'url.yaml#/URL'
            - type: string
        sdDatePublished:
          description: >-
            Indicates the date on which the current structured data was
            generated / published. Typically used alongside <a class="localLink"
            href="http://schema.org/sdPublisher">sdPublisher</a>
          format: date
          type: string
        sdLicense:
          description: >-
            A license document that applies to this structured data, typically
            indicated by URL.
          oneOf:
            - $ref: 'creativework.yaml#/CreativeWork'
            - $ref: 'url.yaml#/URL'
        sdPublisher:
          description: >-
            Indicates the party responsible for generating and publishing the
            current structured data markup, typically in cases where the
            structured data is derived automatically from existing published
            content but published on a different site. For example, student
            projects and open data initiatives often re-publish existing content
            with more explicitly structured metadata. The

            <a class="localLink"
            href="http://schema.org/sdPublisher">sdPublisher</a> property helps
            make such practices more explicit.
          oneOf:
            - $ref: 'organization.yaml#/Organization'
            - $ref: 'person.yaml#/Person'
        sourceOrganization:
          $ref: 'organization.yaml#/Organization'
          description: The Organization on whose behalf the creator was working.
        spatialCoverage:
          $ref: 'place.yaml#/Place'
          description: >-
            The spatialCoverage of a CreativeWork indicates the place(s) which
            are the focus of the content. It is a subproperty of
                  contentLocation intended primarily for more technical and detailed materials. For example with a Dataset, it indicates
                  areas that the dataset describes: a dataset of New York weather would have spatialCoverage which was the place: the state of New York.
        sponsor:
          description: >-
            A person or organization that supports a thing through a pledge,
            promise, or financial contribution. e.g. a sponsor of a Medical
            Study or a corporate sponsor of an event.
          oneOf:
            - $ref: 'organization.yaml#/Organization'
            - $ref: 'person.yaml#/Person'
        temporalCoverage:
          description: >-
            The temporalCoverage of a CreativeWork indicates the period that the
            content applies to, i.e. that it describes, either as a DateTime or
            as a textual string indicating a time period in <a
            href="https://en.wikipedia.org/wiki/ISO_8601#Time_intervals">ISO
            8601 time interval format</a>. In
                  the case of a Dataset it will typically indicate the relevant time period in a precise notation (e.g. for a 2011 census dataset, the year 2011 would be written "2011/2012"). Other forms of content e.g. ScholarlyArticle, Book, TVSeries or TVEpisode may indicate their temporalCoverage in broader terms - textually or via well-known URL.
                  Written works such as books may sometimes have precise temporal coverage too, e.g. a work set in 1939 - 1945 can be indicated in ISO 8601 interval format format via "1939/1945".
          oneOf:
            - type: string
            - $ref: 'url.yaml#/URL'
            - format: date-time
              type: string
        text:
          description: The textual content of this CreativeWork.
          type: string
        thumbnailUrl:
          $ref: 'url.yaml#/URL'
          description: A thumbnail image relevant to the Thing.
        timeRequired:
          $ref: 'duration.yaml#/Duration'
          description: >-
            Approximate or typical time it takes to work with or through this
            learning resource for the typical intended target audience, e.g.
            'P30M', 'P1H25M'.
        translationOfWork:
          $ref: 'creativework.yaml#/CreativeWork'
          description: >-
            The work that this work has been translated from. e.g. 物种起源 is a
            translationOf “On the Origin of Species”
        translator:
          description: >-
            Organization or person who adapts a creative work to different
            languages, regional differences and technical requirements of a
            target market, or that translates during some event.
          oneOf:
            - $ref: 'person.yaml#/Person'
            - $ref: 'organization.yaml#/Organization'
        typicalAgeRange:
          description: 'The typical expected age range, e.g. ''7-9'', ''11-''.'
          type: string
        version:
          description: The version of the CreativeWork embodied by a specified resource.
          oneOf:
            - type: string
            - type: number
        video:
          $ref: 'videoobject.yaml#/VideoObject'
          description: An embedded video object.
        workExample:
          $ref: 'creativework.yaml#/CreativeWork'
          description: >-
            Example/instance/realization/derivation of the concept of this
            creative work. eg. The paperback edition, first edition, or eBook.
        workTranslation:
          $ref: 'creativework.yaml#/CreativeWork'
          description: >-
            A work that is a translation of the content of this work. e.g. 西遊記
            has an English workTranslation “Journey to the West”,a German
            workTranslation “Monkeys Pilgerfahrt” and a Vietnamese  translation
            Tây du ký bình khảo.
      type: object
  description: >-
    The most generic kind of creative work, including books, movies,
    photographs, software programs, etc.
CreativeWorkSeason:
  allOf:
    - $ref: 'creativework.yaml#/CreativeWork'
    - properties:
        actor:
          $ref: 'person.yaml#/Person'
          description: >-
            An actor, e.g. in tv, radio, movie, video games etc., or in an
            event. Actors can be associated with individual items or with a
            series, episode, clip.
        director:
          $ref: 'person.yaml#/Person'
          description: >-
            A director of e.g. tv, radio, movie, video gaming etc. content, or
            of an event. Directors can be associated with individual items or
            with a series, episode, clip.
        endDate:
          description: >-
            The end date and time of the item (in <a
            href="http://en.wikipedia.org/wiki/ISO_8601">ISO 8601 date
            format</a>).
          oneOf:
            - format: date
              type: string
            - format: date-time
              type: string
        episode:
          $ref: 'episode.yaml#/Episode'
          description: 'An episode of a tv, radio or game media within a series or season.'
        episodes:
          $ref: 'episode.yaml#/Episode'
          description: An episode of a TV/radio series or season.
        numberOfEpisodes:
          description: The number of episodes in this season or series.
          type: integer
        partOfSeries:
          $ref: 'creativeworkseries.yaml#/CreativeWorkSeries'
          description: The series to which this episode or season belongs.
        productionCompany:
          $ref: 'organization.yaml#/Organization'
          description: >-
            The production company or studio responsible for the item e.g.
            series, video game, episode etc.
        seasonNumber:
          description: Position of the season within an ordered group of seasons.
          oneOf:
            - type: integer
            - type: string
        startDate:
          description: >-
            The start date and time of the item (in <a
            href="http://en.wikipedia.org/wiki/ISO_8601">ISO 8601 date
            format</a>).
          oneOf:
            - format: date-time
              type: string
            - format: date
              type: string
        trailer:
          $ref: 'videoobject.yaml#/VideoObject'
          description: 'The trailer of a movie or tv/radio series, season, episode, etc.'
      type: object
  description: 'A media season e.g. tv, radio, video game etc.'
CreativeWorkSeries:
  description: >-
    A CreativeWorkSeries in schema.org is a group of related items, typically
    but not necessarily of the same kind. CreativeWorkSeries are usually
    organized into some order, often chronological. Unlike <a class="localLink"
    href="http://schema.org/ItemList">ItemList</a> which is a general purpose
    data structure for lists of things, the emphasis with CreativeWorkSeries is
    on published materials (written e.g. books and periodicals, or media such as
    tv, radio and games).<br/><br/>


    Specific subtypes are available for describing <a class="localLink"
    href="http://schema.org/TVSeries">TVSeries</a>, <a class="localLink"
    href="http://schema.org/RadioSeries">RadioSeries</a>, <a class="localLink"
    href="http://schema.org/MovieSeries">MovieSeries</a>, <a class="localLink"
    href="http://schema.org/BookSeries">BookSeries</a>, <a class="localLink"
    href="http://schema.org/Periodical">Periodical</a> and <a class="localLink"
    href="http://schema.org/VideoGameSeries">VideoGameSeries</a>. In each case,
    the <a class="localLink" href="http://schema.org/hasPart">hasPart</a> / <a
    class="localLink" href="http://schema.org/isPartOf">isPartOf</a> properties
    can be used to relate the CreativeWorkSeries to its parts. The general
    CreativeWorkSeries type serves largely just to organize these more specific
    and practical subtypes.<br/><br/>


    It is common for properties applicable to an item from the series to be
    usefully applied to the containing group. Schema.org attempts to anticipate
    some of these cases, but publishers should be free to apply properties of
    the series parts to the series as a whole wherever they seem appropriate.
  properties:
    endDate:
      description: >-
        The end date and time of the item (in <a
        href="http://en.wikipedia.org/wiki/ISO_8601">ISO 8601 date format</a>).
      oneOf:
        - format: date-time
          type: string
        - format: date
          type: string
    issn:
      description: >-
        The International Standard Serial Number (ISSN) that identifies this
        serial publication. You can repeat this property to identify different
        formats of, or the linking ISSN (ISSN-L) for, this serial publication.
      type: string
    startDate:
      description: >-
        The start date and time of the item (in <a
        href="http://en.wikipedia.org/wiki/ISO_8601">ISO 8601 date format</a>).
      oneOf:
        - format: date-time
          type: string
        - format: date
          type: string
CreditCard:
  description: >
    A card payment method of a particular brand or name.  Used to mark up a
    particular payment method and/or the financial product/service that supplies
    the card account.<br/><br/>


    Commonly used values:<br/><br/>


    <ul>

    <li>http://purl.org/goodrelations/v1#AmericanExpress</li>

    <li>http://purl.org/goodrelations/v1#DinersClub</li>

    <li>http://purl.org/goodrelations/v1#Discover</li>

    <li>http://purl.org/goodrelations/v1#JCB</li>

    <li>http://purl.org/goodrelations/v1#MasterCard</li>

    <li>http://purl.org/goodrelations/v1#VISA</li>

    </ul>
  properties:
    monthlyMinimumRepaymentAmount:
      description: >-
        The minimum payment is the lowest amount of money that one is required
        to pay on a credit card statement each month.
      oneOf:
        - $ref: 'monetaryamount.yaml#/MonetaryAmount'
        - type: number
Crematorium:
  $ref: 'civicstructure.yaml#/CivicStructure'
  description: A crematorium.
CurrencyConversionService:
  $ref: 'financialproduct.yaml#/FinancialProduct'
  description: A service to convert funds from one currency to another currency.
DanceEvent:
  $ref: 'event.yaml#/Event'
  description: 'Event type: A social dance.'
DanceGroup:
  $ref: 'performinggroup.yaml#/PerformingGroup'
  description: >-
    A dance group&#x2014;for example, the Alvin Ailey Dance Theater or
    Riverdance.
DataCatalog:
  allOf:
    - $ref: 'creativework.yaml#/CreativeWork'
    - properties:
        dataset:
          $ref: 'dataset.yaml#/Dataset'
          description: A dataset contained in this catalog.
        measurementTechnique:
          description: >-
            A technique or technology used in a <a class="localLink"
            href="http://schema.org/Dataset">Dataset</a> (or <a
            class="localLink"
            href="http://schema.org/DataDownload">DataDownload</a>, <a
            class="localLink"
            href="http://schema.org/DataCatalog">DataCatalog</a>),

            corresponding to the method used for measuring the corresponding
            variable(s) (described using <a class="localLink"
            href="http://schema.org/variableMeasured">variableMeasured</a>).
            This is oriented towards scientific and scholarly dataset
            publication but may have broader applicability; it is not intended
            as a full representation of measurement, but rather as a high level
            summary for dataset discovery.<br/><br/>


            For example, if <a class="localLink"
            href="http://schema.org/variableMeasured">variableMeasured</a> is:
            molecule concentration, <a class="localLink"
            href="http://schema.org/measurementTechnique">measurementTechnique</a>
            could be: "mass spectrometry" or "nmr spectroscopy" or "colorimetry"
            or "immunofluorescence".<br/><br/>


            If the <a class="localLink"
            href="http://schema.org/variableMeasured">variableMeasured</a> is
            "depression rating", the <a class="localLink"
            href="http://schema.org/measurementTechnique">measurementTechnique</a>
            could be "Zung Scale" or "HAM-D" or "Beck Depression
            Inventory".<br/><br/>


            If there are several <a class="localLink"
            href="http://schema.org/variableMeasured">variableMeasured</a>
            properties recorded for some given data object, use a <a
            class="localLink"
            href="http://schema.org/PropertyValue">PropertyValue</a> for each <a
            class="localLink"
            href="http://schema.org/variableMeasured">variableMeasured</a> and
            attach the corresponding <a class="localLink"
            href="http://schema.org/measurementTechnique">measurementTechnique</a>.
          oneOf:
            - type: string
            - $ref: 'url.yaml#/URL'
      type: object
  description: A collection of datasets.
DataDownload:
  allOf:
    - $ref: 'mediaobject.yaml#/MediaObject'
    - properties:
        measurementTechnique:
          description: >-
            A technique or technology used in a <a class="localLink"
            href="http://schema.org/Dataset">Dataset</a> (or <a
            class="localLink"
            href="http://schema.org/DataDownload">DataDownload</a>, <a
            class="localLink"
            href="http://schema.org/DataCatalog">DataCatalog</a>),

            corresponding to the method used for measuring the corresponding
            variable(s) (described using <a class="localLink"
            href="http://schema.org/variableMeasured">variableMeasured</a>).
            This is oriented towards scientific and scholarly dataset
            publication but may have broader applicability; it is not intended
            as a full representation of measurement, but rather as a high level
            summary for dataset discovery.<br/><br/>


            For example, if <a class="localLink"
            href="http://schema.org/variableMeasured">variableMeasured</a> is:
            molecule concentration, <a class="localLink"
            href="http://schema.org/measurementTechnique">measurementTechnique</a>
            could be: "mass spectrometry" or "nmr spectroscopy" or "colorimetry"
            or "immunofluorescence".<br/><br/>


            If the <a class="localLink"
            href="http://schema.org/variableMeasured">variableMeasured</a> is
            "depression rating", the <a class="localLink"
            href="http://schema.org/measurementTechnique">measurementTechnique</a>
            could be "Zung Scale" or "HAM-D" or "Beck Depression
            Inventory".<br/><br/>


            If there are several <a class="localLink"
            href="http://schema.org/variableMeasured">variableMeasured</a>
            properties recorded for some given data object, use a <a
            class="localLink"
            href="http://schema.org/PropertyValue">PropertyValue</a> for each <a
            class="localLink"
            href="http://schema.org/variableMeasured">variableMeasured</a> and
            attach the corresponding <a class="localLink"
            href="http://schema.org/measurementTechnique">measurementTechnique</a>.
          oneOf:
            - type: string
            - $ref: 'url.yaml#/URL'
      type: object
  description: A dataset in downloadable form.
DataFeed:
  allOf:
    - $ref: 'dataset.yaml#/Dataset'
    - properties:
        dataFeedElement:
          description: An item within in a data feed. Data feeds may have many elements.
          oneOf:
            - $ref: 'thing.yaml#/Thing'
            - $ref: 'datafeeditem.yaml#/DataFeedItem'
            - type: string
      type: object
  description: >-
    A single feed providing structured information about one or more entities or
    topics.
DataFeedItem:
  allOf:
    - $ref: 'intangible.yaml#/Intangible'
    - properties:
        dateCreated:
          description: >-
            The date on which the CreativeWork was created or the item was added
            to a DataFeed.
          oneOf:
            - format: date-time
              type: string
            - format: date
              type: string
        dateDeleted:
          description: The datetime the item was removed from the DataFeed.
          format: date-time
          type: string
        dateModified:
          description: >-
            The date on which the CreativeWork was most recently modified or
            when the item's entry was modified within a DataFeed.
          oneOf:
            - format: date
              type: string
            - format: date-time
              type: string
        item:
          $ref: 'thing.yaml#/Thing'
          description: >-
            An entity represented by an entry in a list or data feed (e.g. an
            'artist' in a list of 'artists')’.
      type: object
  description: A single item within a larger data feed.
Dataset:
  allOf:
    - $ref: 'creativework.yaml#/CreativeWork'
    - properties:
        catalog:
          $ref: 'datacatalog.yaml#/DataCatalog'
          description: A data catalog which contains this dataset.
        datasetTimeInterval:
          description: >-
            The range of temporal applicability of a dataset, e.g. for a 2011
            census dataset, the year 2011 (in ISO 8601 time interval format).
          format: date-time
          type: string
        distribution:
          $ref: 'datadownload.yaml#/DataDownload'
          description: >-
            A downloadable form of this dataset, at a specific location, in a
            specific format.
        includedDataCatalog:
          $ref: 'datacatalog.yaml#/DataCatalog'
          description: >-
            A data catalog which contains this dataset (this property was
            previously 'catalog', preferred name is now
            'includedInDataCatalog').
        includedInDataCatalog:
          $ref: 'datacatalog.yaml#/DataCatalog'
          description: A data catalog which contains this dataset.
        issn:
          description: >-
            The International Standard Serial Number (ISSN) that identifies this
            serial publication. You can repeat this property to identify
            different formats of, or the linking ISSN (ISSN-L) for, this serial
            publication.
          type: string
        measurementTechnique:
          description: >-
            A technique or technology used in a <a class="localLink"
            href="http://schema.org/Dataset">Dataset</a> (or <a
            class="localLink"
            href="http://schema.org/DataDownload">DataDownload</a>, <a
            class="localLink"
            href="http://schema.org/DataCatalog">DataCatalog</a>),

            corresponding to the method used for measuring the corresponding
            variable(s) (described using <a class="localLink"
            href="http://schema.org/variableMeasured">variableMeasured</a>).
            This is oriented towards scientific and scholarly dataset
            publication but may have broader applicability; it is not intended
            as a full representation of measurement, but rather as a high level
            summary for dataset discovery.<br/><br/>


            For example, if <a class="localLink"
            href="http://schema.org/variableMeasured">variableMeasured</a> is:
            molecule concentration, <a class="localLink"
            href="http://schema.org/measurementTechnique">measurementTechnique</a>
            could be: "mass spectrometry" or "nmr spectroscopy" or "colorimetry"
            or "immunofluorescence".<br/><br/>


            If the <a class="localLink"
            href="http://schema.org/variableMeasured">variableMeasured</a> is
            "depression rating", the <a class="localLink"
            href="http://schema.org/measurementTechnique">measurementTechnique</a>
            could be "Zung Scale" or "HAM-D" or "Beck Depression
            Inventory".<br/><br/>


            If there are several <a class="localLink"
            href="http://schema.org/variableMeasured">variableMeasured</a>
            properties recorded for some given data object, use a <a
            class="localLink"
            href="http://schema.org/PropertyValue">PropertyValue</a> for each <a
            class="localLink"
            href="http://schema.org/variableMeasured">variableMeasured</a> and
            attach the corresponding <a class="localLink"
            href="http://schema.org/measurementTechnique">measurementTechnique</a>.
          oneOf:
            - $ref: 'url.yaml#/URL'
            - type: string
        spatial:
          $ref: 'place.yaml#/Place'
          description: >-
            The range of spatial applicability of a dataset, e.g. for a dataset
            of New York weather, the state of New York.
        temporal:
          description: >-
            The range of temporal applicability of a dataset, e.g. for a 2011
            census dataset, the year 2011 (in ISO 8601 time interval format).
          format: date-time
          type: string
        variableMeasured:
          description: >-
            The variableMeasured property can indicate (repeated as necessary)
            the  variables that are measured in some dataset, either described
            as text or as pairs of identifier and description using
            PropertyValue.
          oneOf:
            - $ref: 'propertyvalue.yaml#/PropertyValue'
            - type: string
      type: object
  description: A body of structured information describing some topic(s) of interest.
DataType:
  description: 'rdfs:Class type is not published yet in schema.org.'
  type: object
DatedMoneySpecification:
  allOf:
    - $ref: 'structuredvalue.yaml#/StructuredValue'
    - properties:
        amount:
          description: The amount of money.
          oneOf:
            - type: number
            - $ref: 'monetaryamount.yaml#/MonetaryAmount'
        currency:
          description:
            - >-
              The currency in which the monetary amount is expressed (in
              3-letter <a href="http://en.wikipedia.org/wiki/ISO_4217">ISO
              4217</a> format).
            - >-
              The currency in which the monetary amount is expressed.<br/><br/>


              Use standard formats: <a
              href="http://en.wikipedia.org/wiki/ISO_4217">ISO 4217 currency
              format</a> e.g. "USD"; <a
              href="https://en.wikipedia.org/wiki/List_of_cryptocurrencies">Ticker
              symbol</a> for cryptocurrencies e.g. "BTC"; well known names for
              <a
              href="https://en.wikipedia.org/wiki/Local_exchange_trading_system">Local
              Exchange Tradings Systems</a> (LETS) and other currency types e.g.
              "Ithaca HOUR".
          type: string
        endDate:
          description: >-
            The end date and time of the item (in <a
            href="http://en.wikipedia.org/wiki/ISO_8601">ISO 8601 date
            format</a>).
          oneOf:
            - format: date-time
              type: string
            - format: date
              type: string
        startDate:
          description: >-
            The start date and time of the item (in <a
            href="http://en.wikipedia.org/wiki/ISO_8601">ISO 8601 date
            format</a>).
          oneOf:
            - format: date-time
              type: string
            - format: date
              type: string
      type: object
  description: >-
    A DatedMoneySpecification represents monetary values with optional start and
    end dates. For example, this could represent an employee's salary over a
    specific period of time. <strong>Note:</strong> This type has been
    superseded by <a class="localLink"
    href="http://schema.org/MonetaryAmount">MonetaryAmount</a> use of that type
    is recommended
DayOfWeek:
  $ref: 'enumeration.yaml#/Enumeration'
  description: >-
    The day of the week, e.g. used to specify to which day the opening hours of
    an OpeningHoursSpecification refer.<br/><br/>


    Originally, URLs from <a
    href="http://purl.org/goodrelations/v1">GoodRelations</a> were used (for <a
    class="localLink" href="http://schema.org/Monday">Monday</a>, <a
    class="localLink" href="http://schema.org/Tuesday">Tuesday</a>, <a
    class="localLink" href="http://schema.org/Wednesday">Wednesday</a>, <a
    class="localLink" href="http://schema.org/Thursday">Thursday</a>, <a
    class="localLink" href="http://schema.org/Friday">Friday</a>, <a
    class="localLink" href="http://schema.org/Saturday">Saturday</a>, <a
    class="localLink" href="http://schema.org/Sunday">Sunday</a> plus a special
    entry for <a class="localLink"
    href="http://schema.org/PublicHolidays">PublicHolidays</a>); these have now
    been integrated directly into schema.org.
DaySpa:
  $ref: 'healthandbeautybusiness.yaml#/HealthAndBeautyBusiness'
  description: A day spa.
DeactivateAction:
  $ref: 'controlaction.yaml#/ControlAction'
  description: >-
    The act of stopping or deactivating a device or application (e.g. stopping a
    timer or turning off a flashlight).
DefenceEstablishment:
  $ref: 'governmentbuilding.yaml#/GovernmentBuilding'
  description: 'A defence establishment, such as an army or navy base.'
DeleteAction:
  $ref: 'updateaction.yaml#/UpdateAction'
  description: The act of editing a recipient by removing one of its objects.
DeliveryChargeSpecification:
  allOf:
    - $ref: 'pricespecification.yaml#/PriceSpecification'
    - properties:
        appliesToDeliveryMethod:
          $ref: 'deliverymethod.yaml#/DeliveryMethod'
          description: >-
            The delivery method(s) to which the delivery charge or payment
            charge specification applies.
        areaServed:
          description: The geographic area where a service or offered item is provided.
          oneOf:
            - type: string
            - $ref: 'place.yaml#/Place'
            - $ref: 'administrativearea.yaml#/AdministrativeArea'
            - $ref: 'geoshape.yaml#/GeoShape'
        eligibleRegion:
          description: >-
            The ISO 3166-1 (ISO 3166-1 alpha-2) or ISO 3166-2 code, the place,
            or the GeoShape for the geo-political region(s) for which the offer
            or delivery charge specification is valid.<br/><br/>


            See also <a class="localLink"
            href="http://schema.org/ineligibleRegion">ineligibleRegion</a>.
          oneOf:
            - $ref: 'place.yaml#/Place'
            - type: string
            - $ref: 'geoshape.yaml#/GeoShape'
        ineligibleRegion:
          description: >-
            The ISO 3166-1 (ISO 3166-1 alpha-2) or ISO 3166-2 code, the place,
            or the GeoShape for the geo-political region(s) for which the offer
            or delivery charge specification is not valid, e.g. a region where
            the transaction is not allowed.<br/><br/>


            See also <a class="localLink"
            href="http://schema.org/eligibleRegion">eligibleRegion</a>.
          oneOf:
            - $ref: 'geoshape.yaml#/GeoShape'
            - type: string
            - $ref: 'place.yaml#/Place'
      type: object
  description: The price for the delivery of an offer using a particular delivery method.
DeliveryEvent:
  allOf:
    - $ref: 'event.yaml#/Event'
    - properties:
        accessCode:
          description: >-
            Password, PIN, or access code needed for delivery (e.g. from a
            locker).
          type: string
        availableFrom:
          description: 'When the item is available for pickup from the store, locker, etc.'
          format: date-time
          type: string
        availableThrough:
          description: 'After this date, the item will no longer be available for pickup.'
          format: date-time
          type: string
        hasDeliveryMethod:
          $ref: 'deliverymethod.yaml#/DeliveryMethod'
          description: Method used for delivery or shipping.
      type: object
  description: An event involving the delivery of an item.
DeliveryMethod:
  $ref: 'enumeration.yaml#/Enumeration'
  description: >
    A delivery method is a standardized procedure for transferring the product
    or service to the destination of fulfillment chosen by the customer.
    Delivery methods are characterized by the means of transportation used, and
    by the organization or group that is the contracting party for the sending
    organization or person.<br/><br/>


    Commonly used values:<br/><br/>


    <ul>

    <li>http://purl.org/goodrelations/v1#DeliveryModeDirectDownload</li>

    <li>http://purl.org/goodrelations/v1#DeliveryModeFreight</li>

    <li>http://purl.org/goodrelations/v1#DeliveryModeMail</li>

    <li>http://purl.org/goodrelations/v1#DeliveryModeOwnFleet</li>

    <li>http://purl.org/goodrelations/v1#DeliveryModePickUp</li>

    <li>http://purl.org/goodrelations/v1#DHL</li>

    <li>http://purl.org/goodrelations/v1#FederalExpress</li>

    <li>http://purl.org/goodrelations/v1#UPS</li>

    </ul>
Demand:
  allOf:
    - $ref: 'intangible.yaml#/Intangible'
    - properties:
        acceptedPaymentMethod:
          description: The payment method(s) accepted by seller for this offer.
          oneOf:
            - $ref: 'paymentmethod.yaml#/PaymentMethod'
            - $ref: 'loanorcredit.yaml#/LoanOrCredit'
        advanceBookingRequirement:
          $ref: 'quantitativevalue.yaml#/QuantitativeValue'
          description: >-
            The amount of time that is required between accepting the offer and
            the actual usage of the resource or service.
        areaServed:
          description: The geographic area where a service or offered item is provided.
          oneOf:
            - $ref: 'geoshape.yaml#/GeoShape'
            - $ref: 'place.yaml#/Place'
            - type: string
            - $ref: 'administrativearea.yaml#/AdministrativeArea'
        availability:
          $ref: 'itemavailability.yaml#/ItemAvailability'
          description: >-
            The availability of this item&#x2014;for example In stock, Out of
            stock, Pre-order, etc.
        availabilityEnds:
          description: >-
            The end of the availability of the product or service included in
            the offer.
          format: date-time
          type: string
        availabilityStarts:
          description: >-
            The beginning of the availability of the product or service included
            in the offer.
          format: date-time
          type: string
        availableAtOrFrom:
          $ref: 'place.yaml#/Place'
          description: >-
            The place(s) from which the offer can be obtained (e.g. store
            locations).
        availableDeliveryMethod:
          $ref: 'deliverymethod.yaml#/DeliveryMethod'
          description: The delivery method(s) available for this offer.
        businessFunction:
          $ref: 'businessfunction.yaml#/BusinessFunction'
          description: >-
            The business function (e.g. sell, lease, repair, dispose) of the
            offer or component of a bundle (TypeAndQuantityNode). The default is
            http://purl.org/goodrelations/v1#Sell.
        deliveryLeadTime:
          $ref: 'quantitativevalue.yaml#/QuantitativeValue'
          description: >-
            The typical delay between the receipt of the order and the goods
            either leaving the warehouse or being prepared for pickup, in case
            the delivery method is on site pickup.
        eligibleCustomerType:
          $ref: 'businessentitytype.yaml#/BusinessEntityType'
          description: The type(s) of customers for which the given offer is valid.
        eligibleDuration:
          $ref: 'quantitativevalue.yaml#/QuantitativeValue'
          description: The duration for which the given offer is valid.
        eligibleQuantity:
          $ref: 'quantitativevalue.yaml#/QuantitativeValue'
          description: >-
            The interval and unit of measurement of ordering quantities for
            which the offer or price specification is valid. This allows e.g.
            specifying that a certain freight charge is valid only for a certain
            quantity.
        eligibleRegion:
          description: >-
            The ISO 3166-1 (ISO 3166-1 alpha-2) or ISO 3166-2 code, the place,
            or the GeoShape for the geo-political region(s) for which the offer
            or delivery charge specification is valid.<br/><br/>


            See also <a class="localLink"
            href="http://schema.org/ineligibleRegion">ineligibleRegion</a>.
          oneOf:
            - $ref: 'place.yaml#/Place'
            - $ref: 'geoshape.yaml#/GeoShape'
            - type: string
        eligibleTransactionVolume:
          $ref: 'pricespecification.yaml#/PriceSpecification'
          description: >-
            The transaction volume, in a monetary unit, for which the offer or
            price specification is valid, e.g. for indicating a minimal
            purchasing volume, to express free shipping above a certain order
            volume, or to limit the acceptance of credit cards to purchases to a
            certain minimal amount.
        gtin12:
          description: >-
            The GTIN-12 code of the product, or the product to which the offer
            refers. The GTIN-12 is the 12-digit GS1 Identification Key composed
            of a U.P.C. Company Prefix, Item Reference, and Check Digit used to
            identify trade items. See <a
            href="http://www.gs1.org/barcodes/technical/idkeys/gtin">GS1 GTIN
            Summary</a> for more details.
          type: string
        gtin13:
          description: >-
            The GTIN-13 code of the product, or the product to which the offer
            refers. This is equivalent to 13-digit ISBN codes and EAN UCC-13.
            Former 12-digit UPC codes can be converted into a GTIN-13 code by
            simply adding a preceeding zero. See <a
            href="http://www.gs1.org/barcodes/technical/idkeys/gtin">GS1 GTIN
            Summary</a> for more details.
          type: string
        gtin14:
          description: >-
            The GTIN-14 code of the product, or the product to which the offer
            refers. See <a
            href="http://www.gs1.org/barcodes/technical/idkeys/gtin">GS1 GTIN
            Summary</a> for more details.
          type: string
        gtin8:
          description: >-
            The <a
            href="http://apps.gs1.org/GDD/glossary/Pages/GTIN-8.aspx">GTIN-8</a>
            code of the product, or the product to which the offer refers. This
            code is also known as EAN/UCC-8 or 8-digit EAN. See <a
            href="http://www.gs1.org/barcodes/technical/idkeys/gtin">GS1 GTIN
            Summary</a> for more details.
          type: string
        includesObject:
          $ref: 'typeandquantitynode.yaml#/TypeAndQuantityNode'
          description: >-
            This links to a node or nodes indicating the exact quantity of the
            products included in the offer.
        ineligibleRegion:
          description: >-
            The ISO 3166-1 (ISO 3166-1 alpha-2) or ISO 3166-2 code, the place,
            or the GeoShape for the geo-political region(s) for which the offer
            or delivery charge specification is not valid, e.g. a region where
            the transaction is not allowed.<br/><br/>


            See also <a class="localLink"
            href="http://schema.org/eligibleRegion">eligibleRegion</a>.
          oneOf:
            - $ref: 'place.yaml#/Place'
            - type: string
            - $ref: 'geoshape.yaml#/GeoShape'
        inventoryLevel:
          $ref: 'quantitativevalue.yaml#/QuantitativeValue'
          description: The current approximate inventory level for the item or items.
        itemCondition:
          $ref: 'offeritemcondition.yaml#/OfferItemCondition'
          description: >-
            A predefined value from OfferItemCondition or a textual description
            of the condition of the product or service, or the products or
            services included in the offer.
        itemOffered:
          description: The item being offered.
          oneOf:
            - $ref: 'product.yaml#/Product'
            - $ref: 'service.yaml#/Service'
        mpn:
          description: >-
            The Manufacturer Part Number (MPN) of the product, or the product to
            which the offer refers.
          type: string
        priceSpecification:
          $ref: 'pricespecification.yaml#/PriceSpecification'
          description: >-
            One or more detailed price specifications, indicating the unit price
            and delivery or payment charges.
        seller:
          description: >-
            An entity which offers (sells / leases / lends / loans) the services
            / goods.  A seller may also be a provider.
          oneOf:
            - $ref: 'person.yaml#/Person'
            - $ref: 'organization.yaml#/Organization'
        serialNumber:
          description: >-
            The serial number or any alphanumeric identifier of a particular
            product. When attached to an offer, it is a shortcut for the serial
            number of the product included in the offer.
          type: string
        sku:
          description: >-
            The Stock Keeping Unit (SKU), i.e. a merchant-specific identifier
            for a product or service, or the product to which the offer refers.
          type: string
        validFrom:
          description: The date when the item becomes valid.
          format: date-time
          type: string
        validThrough:
          description: >-
            The date after when the item is not valid. For example the end of an
            offer, salary period, or a period of opening hours.
          format: date-time
          type: string
        warranty:
          $ref: 'warrantypromise.yaml#/WarrantyPromise'
          description: The warranty promise(s) included in the offer.
      type: object
  description: >-
    A demand entity represents the public, not necessarily binding, not
    necessarily exclusive, announcement by an organization or person to seek a
    certain type of goods or services. For describing demand using this type,
    the very same properties used for Offer apply.
Dentist:
  description: A dentist.
DepartAction:
  $ref: 'moveaction.yaml#/MoveAction'
  description: >-
    The act of  departing from a place. An agent departs from an fromLocation
    for a destination, optionally with participants.
DepartmentStore:
  $ref: 'store.yaml#/Store'
  description: A department store.
DepositAccount:
  description: >-
    A type of Bank Account with a main purpose of depositing funds to gain
    interest or other benefits.
DigitalDocument:
  allOf:
    - $ref: 'creativework.yaml#/CreativeWork'
    - properties:
        hasDigitalDocumentPermission:
          $ref: 'digitaldocumentpermission.yaml#/DigitalDocumentPermission'
          description: >-
            A permission related to the access to this document (e.g. permission
            to read or write an electronic document). For a public document,
            specify a grantee with an Audience with audienceType equal to
            "public".
      type: object
  description: An electronic file or document.
DigitalDocumentPermission:
  allOf:
    - $ref: 'intangible.yaml#/Intangible'
    - properties:
        grantee:
          description: >-
            The person, organization, contact point, or audience that has been
            granted this permission.
          oneOf:
            - $ref: 'organization.yaml#/Organization'
            - $ref: 'contactpoint.yaml#/ContactPoint'
            - $ref: 'person.yaml#/Person'
            - $ref: 'audience.yaml#/Audience'
        permissionType:
          $ref: 'digitaldocumentpermissiontype.yaml#/DigitalDocumentPermissionType'
          description: >-
            The type of permission granted the person, organization, or
            audience.
      type: object
  description: A permission for a particular person or group to access a particular file.
DigitalDocumentPermissionType:
  $ref: 'enumeration.yaml#/Enumeration'
  description: A type of permission which can be granted for accessing a digital document.
DisagreeAction:
  $ref: 'reactaction.yaml#/ReactAction'
  description: >-
    The act of expressing a difference of opinion with the object. An agent
    disagrees to/about an object (a proposition, topic or theme) with
    participants.
DiscoverAction:
  $ref: 'findaction.yaml#/FindAction'
  description: The act of discovering/finding an object.
DiscussionForumPosting:
  $ref: 'socialmediaposting.yaml#/SocialMediaPosting'
  description: A posting to a discussion forum.
DislikeAction:
  $ref: 'reactaction.yaml#/ReactAction'
  description: >-
    The act of expressing a negative sentiment about the object. An agent
    dislikes an object (a proposition, topic or theme) with participants.
Distance:
  $ref: 'quantity.yaml#/Quantity'
  description: >-
    Properties that take Distances as values are of the form '&lt;Number&gt;
    &lt;Length unit of measure&gt;'. E.g., '7 ft'.
DonateAction:
  allOf:
    - $ref: 'tradeaction.yaml#/TradeAction'
    - properties:
        recipient:
          description: >-
            A sub property of participant. The participant who is at the
            receiving end of the action.
          oneOf:
            - $ref: 'organization.yaml#/Organization'
            - $ref: 'contactpoint.yaml#/ContactPoint'
            - $ref: 'person.yaml#/Person'
            - $ref: 'audience.yaml#/Audience'
      type: object
  description: >-
    The act of providing goods, services, or money without compensation, often
    for philanthropic reasons.
DownloadAction:
  $ref: 'transferaction.yaml#/TransferAction'
  description: The act of downloading an object.
DrawAction:
  $ref: 'createaction.yaml#/CreateAction'
  description: >-
    The act of producing a visual/graphical representation of an object,
    typically with a pen/pencil and paper as instruments.
DrinkAction:
  $ref: 'consumeaction.yaml#/ConsumeAction'
  description: The act of swallowing liquids.
DriveWheelConfigurationValue:
  $ref: 'qualitativevalue.yaml#/QualitativeValue'
  description: A value indicating which roadwheels will receive torque.
DryCleaningOrLaundry:
  $ref: 'localbusiness.yaml#/LocalBusiness'
  description: A dry-cleaning business.
Duration:
  $ref: 'quantity.yaml#/Quantity'
  description: >-
    Quantity: Duration (use <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO
    8601 duration format</a>).
EatAction:
  $ref: 'consumeaction.yaml#/ConsumeAction'
  description: The act of swallowing solid objects.
EducationalAudience:
  allOf:
    - $ref: 'audience.yaml#/Audience'
    - properties:
        educationalRole:
          description: An educationalRole of an EducationalAudience.
          type: string
      type: object
  description: An EducationalAudience.
EducationalOrganization:
  allOf:
    - $ref: 'organization.yaml#/Organization'
    - properties:
        alumni:
          $ref: 'person.yaml#/Person'
          description: Alumni of an organization.
      type: object
  description: An educational organization.
EducationEvent:
  $ref: 'event.yaml#/Event'
  description: 'Event type: Education event.'
Electrician:
  $ref: 'homeandconstructionbusiness.yaml#/HomeAndConstructionBusiness'
  description: An electrician.
ElectronicsStore:
  $ref: 'store.yaml#/Store'
  description: An electronics store.
ElementarySchool:
  $ref: 'educationalorganization.yaml#/EducationalOrganization'
  description: An elementary school.
EmailMessage:
  $ref: 'message.yaml#/Message'
  description: An email message.
Embassy:
  $ref: 'governmentbuilding.yaml#/GovernmentBuilding'
  description: An embassy.
EmergencyService:
  $ref: 'localbusiness.yaml#/LocalBusiness'
  description: 'An emergency service, such as a fire station or ER.'
EmployeeRole:
  allOf:
    - $ref: 'organizationrole.yaml#/OrganizationRole'
    - properties:
        baseSalary:
          description: The base salary of the job or of an employee in an EmployeeRole.
          oneOf:
            - $ref: 'monetaryamount.yaml#/MonetaryAmount'
            - type: number
            - $ref: 'pricespecification.yaml#/PriceSpecification'
        salaryCurrency:
          description: >-
            The currency (coded using <a
            href="http://en.wikipedia.org/wiki/ISO_4217">ISO 4217</a> ) used for
            the main salary information in this job posting or for this
            employee.
          type: string
      type: object
  description: A subclass of OrganizationRole used to describe employee relationships.
EmploymentAgency:
  $ref: 'localbusiness.yaml#/LocalBusiness'
  description: An employment agency.
EndorseAction:
  allOf:
    - $ref: 'reactaction.yaml#/ReactAction'
    - properties:
        endorsee:
          description: >-
            A sub property of participant. The person/organization being
            supported.
          oneOf:
            - $ref: 'organization.yaml#/Organization'
            - $ref: 'person.yaml#/Person'
      type: object
  description: An agent approves/certifies/likes/supports/sanction an object.
Energy:
  $ref: 'quantity.yaml#/Quantity'
  description: >-
    Properties that take Energy as values are of the form '&lt;Number&gt;
    &lt;Energy unit of measure&gt;'.
EngineSpecification:
  allOf:
    - $ref: 'structuredvalue.yaml#/StructuredValue'
    - properties:
        engineDisplacement:
          $ref: 'quantitativevalue.yaml#/QuantitativeValue'
          description: >-
            The volume swept by all of the pistons inside the cylinders of an
            internal combustion engine in a single movement. <br/><br/>


            Typical unit code(s): CMQ for cubic centimeter, LTR for liters, INQ
            for cubic inches

            * Note 1: You can link to information about how the given value has
            been determined using the <a class="localLink"
            href="http://schema.org/valueReference">valueReference</a> property.

            * Note 2: You can use <a class="localLink"
            href="http://schema.org/minValue">minValue</a> and <a
            class="localLink" href="http://schema.org/maxValue">maxValue</a> to
            indicate ranges.
        enginePower:
          $ref: 'quantitativevalue.yaml#/QuantitativeValue'
          description: >
            The power of the vehicle's engine.
                Typical unit code(s): KWT for kilowatt, BHP for brake horsepower, N12 for metric horsepower (PS, with 1 PS = 735,49875 W)<br/><br/>

            <ul>

            <li>Note 1: There are many different ways of measuring an engine's
            power. For an overview, see  <a
            href="http://en.wikipedia.org/wiki/Horsepower#Engine_power_test_codes">http://en.wikipedia.org/wiki/Horsepower#Engine<em>power</em>test_codes</a>.</li>

            <li>Note 2: You can link to information about how the given value
            has been determined using the <a class="localLink"
            href="http://schema.org/valueReference">valueReference</a>
            property.</li>

            <li>Note 3: You can use <a class="localLink"
            href="http://schema.org/minValue">minValue</a> and <a
            class="localLink" href="http://schema.org/maxValue">maxValue</a> to
            indicate ranges.</li>

            </ul>
        engineType:
          description: The type of engine or engines powering the vehicle.
          oneOf:
            - $ref: 'url.yaml#/URL'
            - $ref: 'qualitativevalue.yaml#/QualitativeValue'
            - type: string
        fuelType:
          description: >-
            The type of fuel suitable for the engine or engines of the vehicle.
            If the vehicle has only one engine, this property can be attached
            directly to the vehicle.
          oneOf:
            - $ref: 'url.yaml#/URL'
            - $ref: 'qualitativevalue.yaml#/QualitativeValue'
            - type: string
        torque:
          $ref: 'quantitativevalue.yaml#/QuantitativeValue'
          description: >
            The torque (turning force) of the vehicle's engine.<br/><br/>


            Typical unit code(s): NU for newton metre (N m), F17 for pound-force
            per foot, or F48 for pound-force per inch<br/><br/>


            <ul>

            <li>Note 1: You can link to information about how the given value
            has been determined (e.g. reference RPM) using the <a
            class="localLink"
            href="http://schema.org/valueReference">valueReference</a>
            property.</li>

            <li>Note 2: You can use <a class="localLink"
            href="http://schema.org/minValue">minValue</a> and <a
            class="localLink" href="http://schema.org/maxValue">maxValue</a> to
            indicate ranges.</li>

            </ul>
      type: object
  description: >-
    Information about the engine of the vehicle. A vehicle can have multiple
    engines represented by multiple engine specification entities.
EntertainmentBusiness:
  $ref: 'localbusiness.yaml#/LocalBusiness'
  description: A business providing entertainment.
EntryPoint:
  allOf:
    - $ref: 'intangible.yaml#/Intangible'
    - properties:
        actionApplication:
          $ref: 'softwareapplication.yaml#/SoftwareApplication'
          description: An application that can complete the request.
        actionPlatform:
          description: >-
            The high level platform(s) where the Action can be performed for the
            given URL. To specify a specific application or operating system
            instance, use actionApplication.
          oneOf:
            - type: string
            - $ref: 'url.yaml#/URL'
        application:
          $ref: 'softwareapplication.yaml#/SoftwareApplication'
          description: An application that can complete the request.
        contentType:
          description: The supported content type(s) for an EntryPoint response.
          type: string
        encodingType:
          description: The supported encoding type(s) for an EntryPoint request.
          type: string
        httpMethod:
          description: >-
            An HTTP method that specifies the appropriate HTTP method for a
            request to an HTTP EntryPoint. Values are capitalized strings as
            used in HTTP.
          type: string
        urlTemplate:
          description: >-
            An url template (RFC6570) that will be used to construct the target
            of the execution of the action.
          type: string
      type: object
  description: 'An entry point, within some Web-based protocol.'
Enumeration:
  allOf:
    - $ref: 'intangible.yaml#/Intangible'
    - properties:
        supersededBy:
          description: >-
            Relates a term (i.e. a property, class or enumeration) to one that
            supersedes it.
          oneOf:
            - description: Class type is not published yet in schema.org.
              type: object
            - $ref: 'enumeration.yaml#/Enumeration'
            - description: Property type is not published yet in schema.org.
              type: object
      type: object
  description: 'Lists or enumerations—for example, a list of cuisines or music genres, etc.'
Episode:
  allOf:
    - $ref: 'creativework.yaml#/CreativeWork'
    - properties:
        actor:
          $ref: 'person.yaml#/Person'
          description: >-
            An actor, e.g. in tv, radio, movie, video games etc., or in an
            event. Actors can be associated with individual items or with a
            series, episode, clip.
        actors:
          $ref: 'person.yaml#/Person'
          description: >-
            An actor, e.g. in tv, radio, movie, video games etc. Actors can be
            associated with individual items or with a series, episode, clip.
        director:
          $ref: 'person.yaml#/Person'
          description: >-
            A director of e.g. tv, radio, movie, video gaming etc. content, or
            of an event. Directors can be associated with individual items or
            with a series, episode, clip.
        directors:
          $ref: 'person.yaml#/Person'
          description: >-
            A director of e.g. tv, radio, movie, video games etc. content.
            Directors can be associated with individual items or with a series,
            episode, clip.
        episodeNumber:
          description: Position of the episode within an ordered group of episodes.
          oneOf:
            - type: integer
            - type: string
        musicBy:
          description: The composer of the soundtrack.
          oneOf:
            - $ref: 'person.yaml#/Person'
            - $ref: 'musicgroup.yaml#/MusicGroup'
        partOfSeason:
          $ref: 'creativeworkseason.yaml#/CreativeWorkSeason'
          description: The season to which this episode belongs.
        partOfSeries:
          $ref: 'creativeworkseries.yaml#/CreativeWorkSeries'
          description: The series to which this episode or season belongs.
        productionCompany:
          $ref: 'organization.yaml#/Organization'
          description: >-
            The production company or studio responsible for the item e.g.
            series, video game, episode etc.
        trailer:
          $ref: 'videoobject.yaml#/VideoObject'
          description: 'The trailer of a movie or tv/radio series, season, episode, etc.'
      type: object
  description: >-
    A media episode (e.g. TV, radio, video game) which can be part of a series
    or season.
Error:
  allOf:
    - $ref: 'Thing.yaml#/Thing'
    - type: object
      description: For failed actions, more information on the cause of the failure.
Event:
  allOf:
    - $ref: 'thing.yaml#/Thing'
    - properties:
        about:
          $ref: 'thing.yaml#/Thing'
          description: The subject matter of the content.
        actor:
          $ref: 'person.yaml#/Person'
          description: >-
            An actor, e.g. in tv, radio, movie, video games etc., or in an
            event. Actors can be associated with individual items or with a
            series, episode, clip.
        aggregateRating:
          $ref: 'aggregaterating.yaml#/AggregateRating'
          description: >-
            The overall rating, based on a collection of reviews or ratings, of
            the item.
        attendee:
          description: A person or organization attending the event.
          oneOf:
            - $ref: 'organization.yaml#/Organization'
            - $ref: 'person.yaml#/Person'
        attendees:
          description: A person attending the event.
          oneOf:
            - $ref: 'organization.yaml#/Organization'
            - $ref: 'person.yaml#/Person'
        audience:
          $ref: 'audience.yaml#/Audience'
          description: 'An intended audience, i.e. a group for whom something was created.'
        composer:
          description: >-
            The person or organization who wrote a composition, or who is the
            composer of a work performed at some event.
          oneOf:
            - $ref: 'person.yaml#/Person'
            - $ref: 'organization.yaml#/Organization'
        contributor:
          description: A secondary contributor to the CreativeWork or Event.
          oneOf:
            - $ref: 'organization.yaml#/Organization'
            - $ref: 'person.yaml#/Person'
        director:
          $ref: 'person.yaml#/Person'
          description: >-
            A director of e.g. tv, radio, movie, video gaming etc. content, or
            of an event. Directors can be associated with individual items or
            with a series, episode, clip.
        doorTime:
          description: The time admission will commence.
          format: date-time
          type: string
        duration:
          $ref: 'duration.yaml#/Duration'
          description: >-
            The duration of the item (movie, audio recording, event, etc.) in <a
            href="http://en.wikipedia.org/wiki/ISO_8601">ISO 8601 date
            format</a>.
        endDate:
          description: >-
            The end date and time of the item (in <a
            href="http://en.wikipedia.org/wiki/ISO_8601">ISO 8601 date
            format</a>).
          oneOf:
            - format: date-time
              type: string
            - format: date
              type: string
        eventStatus:
          $ref: 'eventstatustype.yaml#/EventStatusType'
          description: >-
            An eventStatus of an event represents its status; particularly
            useful when an event is cancelled or rescheduled.
        funder:
          description: >-
            A person or organization that supports (sponsors) something through
            some kind of financial contribution.
          oneOf:
            - $ref: 'person.yaml#/Person'
            - $ref: 'organization.yaml#/Organization'
        inLanguage:
          description: >-
            The language of the content or performance or used in an action.
            Please use one of the language codes from the <a
            href="http://tools.ietf.org/html/bcp47">IETF BCP 47 standard</a>.
            See also <a class="localLink"
            href="http://schema.org/availableLanguage">availableLanguage</a>.
          oneOf:
            - type: string
            - $ref: 'language.yaml#/Language'
        isAccessibleForFree:
          description: >-
            A flag to signal that the item, event, or place is accessible for
            free.
          type: boolean
        location:
          description: >-
            The location of for example where the event is happening, an
            organization is located, or where an action takes place.
          oneOf:
            - type: string
            - $ref: 'postaladdress.yaml#/PostalAddress'
            - $ref: 'place.yaml#/Place'
        maximumAttendeeCapacity:
          description: The total number of individuals that may attend an event or venue.
          type: integer
        offers:
          $ref: 'offer.yaml#/Offer'
          description: >-
            An offer to provide this item&#x2014;for example, an offer to sell a
            product, rent the DVD of a movie, perform a service, or give away
            tickets to an event.
        organizer:
          description: An organizer of an Event.
          oneOf:
            - $ref: 'person.yaml#/Person'
            - $ref: 'organization.yaml#/Organization'
        performer:
          description: >-
            A performer at the event&#x2014;for example, a presenter, musician,
            musical group or actor.
          oneOf:
            - $ref: 'organization.yaml#/Organization'
            - $ref: 'person.yaml#/Person'
        performers:
          description: >-
            The main performer or performers of the event&#x2014;for example, a
            presenter, musician, or actor.
          oneOf:
            - $ref: 'organization.yaml#/Organization'
            - $ref: 'person.yaml#/Person'
        previousStartDate:
          description: >-
            Used in conjunction with eventStatus for rescheduled or cancelled
            events. This property contains the previously scheduled start date.
            For rescheduled events, the startDate property should be used for
            the newly scheduled start date. In the (rare) case of an event that
            has been postponed and rescheduled multiple times, this field may be
            repeated.
          format: date
          type: string
        recordedIn:
          $ref: 'creativework.yaml#/CreativeWork'
          description: The CreativeWork that captured all or part of this Event.
        remainingAttendeeCapacity:
          description: The number of attendee places for an event that remain unallocated.
          type: integer
        review:
          $ref: 'review.yaml#/Review'
          description: A review of the item.
        sponsor:
          description: >-
            A person or organization that supports a thing through a pledge,
            promise, or financial contribution. e.g. a sponsor of a Medical
            Study or a corporate sponsor of an event.
          oneOf:
            - $ref: 'person.yaml#/Person'
            - $ref: 'organization.yaml#/Organization'
        startDate:
          description: >-
            The start date and time of the item (in <a
            href="http://en.wikipedia.org/wiki/ISO_8601">ISO 8601 date
            format</a>).
          oneOf:
            - format: date
              type: string
            - format: date-time
              type: string
        subEvent:
          $ref: 'event.yaml#/Event'
          description: >-
            An Event that is part of this event. For example, a conference event
            includes many presentations, each of which is a subEvent of the
            conference.
        subEvents:
          $ref: 'event.yaml#/Event'
          description: >-
            Events that are a part of this event. For example, a conference
            event includes many presentations, each subEvents of the conference.
        superEvent:
          $ref: 'event.yaml#/Event'
          description: >-
            An event that this event is a part of. For example, a collection of
            individual music performances might each have a music festival as
            their superEvent.
        translator:
          description: >-
            Organization or person who adapts a creative work to different
            languages, regional differences and technical requirements of a
            target market, or that translates during some event.
          oneOf:
            - $ref: 'person.yaml#/Person'
            - $ref: 'organization.yaml#/Organization'
        typicalAgeRange:
          description: 'The typical expected age range, e.g. ''7-9'', ''11-''.'
          type: string
        workFeatured:
          $ref: 'creativework.yaml#/CreativeWork'
          description: |-
            A work featured in some event, e.g. exhibited in an ExhibitionEvent.
                   Specific subproperties are available for workPerformed (e.g. a play), or a workPresented (a Movie at a ScreeningEvent).
        workPerformed:
          $ref: 'creativework.yaml#/CreativeWork'
          description: >-
            A work performed in some event, for example a play performed in a
            TheaterEvent.
      type: object
  description: >-
    An event happening at a certain time and location, such as a concert,
    lecture, or festival. Ticketing information may be added via the <a
    class="localLink" href="http://schema.org/offers">offers</a> property.
    Repeated events may be structured as separate Event objects.
EventReservation:
  $ref: 'reservation.yaml#/Reservation'
  description: >-
    A reservation for an event like a concert, sporting event, or
    lecture.<br/><br/>


    Note: This type is for information about actual reservations, e.g. in
    confirmation emails or HTML pages with individual confirmations of
    reservations. For offers of tickets, use <a class="localLink"
    href="http://schema.org/Offer">Offer</a>.
EventStatusType:
  $ref: 'enumeration.yaml#/Enumeration'
  description: >-
    EventStatusType is an enumeration type whose instances represent several
    states that an Event may be in.
EventVenue:
  $ref: 'civicstructure.yaml#/CivicStructure'
  description: An event venue.
ExerciseAction:
  allOf:
    - $ref: 'playaction.yaml#/PlayAction'
    - properties:
        course:
          $ref: 'place.yaml#/Place'
          description: A sub property of location. The course where this action was taken.
        diet:
          description: >-
            A sub property of instrument. The diet used in this action. Note:
            Diet type is not published yet in schema.org.
          type: object
        distance:
          $ref: 'distance.yaml#/Distance'
          description: 'The distance travelled, e.g. exercising or travelling.'
        exerciseCourse:
          $ref: 'place.yaml#/Place'
          description: A sub property of location. The course where this action was taken.
        exercisePlan:
          description: >-
            A sub property of instrument. The exercise plan used on this action.
            Note: ExercisePlan type is not published yet in schema.org.
          type: object
        exerciseRelatedDiet:
          description: >-
            A sub property of instrument. The diet used in this action. Note:
            Diet type is not published yet in schema.org.
          type: object
        exerciseType:
          description: >-
            Type(s) of exercise or activity, such as strength training,
            flexibility training, aerobics, cardiac rehabilitation, etc.
          type: string
        fromLocation:
          $ref: 'place.yaml#/Place'
          description: >-
            A sub property of location. The original location of the object or
            the agent before the action.
        opponent:
          $ref: 'person.yaml#/Person'
          description: A sub property of participant. The opponent on this action.
        sportsActivityLocation:
          $ref: 'sportsactivitylocation.yaml#/SportsActivityLocation'
          description: >-
            A sub property of location. The sports activity location where this
            action occurred.
        sportsEvent:
          $ref: 'sportsevent.yaml#/SportsEvent'
          description: >-
            A sub property of location. The sports event where this action
            occurred.
        sportsTeam:
          $ref: 'sportsteam.yaml#/SportsTeam'
          description: >-
            A sub property of participant. The sports team that participated on
            this action.
        toLocation:
          $ref: 'place.yaml#/Place'
          description: >-
            A sub property of location. The final location of the object or the
            agent after the action.
      type: object
  description: >-
    The act of participating in exertive activity for the purposes of improving
    health and fitness.
ExerciseGym:
  $ref: 'sportsactivitylocation.yaml#/SportsActivityLocation'
  description: A gym.
ExhibitionEvent:
  $ref: 'event.yaml#/Event'
  description: >-
    Event type: Exhibition event, e.g. at a museum, library, archive, tradeshow,
    ...
FastFoodRestaurant:
  $ref: 'foodestablishment.yaml#/FoodEstablishment'
  description: A fast-food restaurant.
Festival:
  $ref: 'event.yaml#/Event'
  description: 'Event type: Festival.'
FilmAction:
  $ref: 'createaction.yaml#/CreateAction'
  description: 'The act of capturing sound and moving images on film, video, or digitally.'
FinancialProduct:
  allOf:
    - $ref: 'service.yaml#/Service'
    - properties:
        annualPercentageRate:
          description: >-
            The annual rate that is charged for borrowing (or made by
            investing), expressed as a single percentage number that represents
            the actual yearly cost of funds over the term of a loan. This
            includes any fees or additional costs associated with the
            transaction.
          oneOf:
            - type: number
            - $ref: 'quantitativevalue.yaml#/QuantitativeValue'
        feesAndCommissionsSpecification:
          description: >-
            Description of fees, commissions, and other terms applied either to
            a class of financial product, or by a financial service
            organization.
          oneOf:
            - $ref: 'url.yaml#/URL'
            - type: string
        interestRate:
          description: >-
            The interest rate, charged or paid, applicable to the financial
            product. Note: This is different from the calculated
            annualPercentageRate.
          oneOf:
            - type: number
            - $ref: 'quantitativevalue.yaml#/QuantitativeValue'
      type: object
  description: >-
    A product provided to consumers and businesses by financial institutions
    such as banks, insurance companies, brokerage firms, consumer finance
    companies, and investment companies which comprise the financial services
    industry.
FinancialService:
  allOf:
    - $ref: 'localbusiness.yaml#/LocalBusiness'
    - properties:
        feesAndCommissionsSpecification:
          description: >-
            Description of fees, commissions, and other terms applied either to
            a class of financial product, or by a financial service
            organization.
          oneOf:
            - $ref: 'url.yaml#/URL'
            - type: string
      type: object
  description: Financial services business.
FindAction:
  $ref: 'action.yaml#/Action'
  description: >
    The act of finding an object.<br/><br/>


    Related actions:<br/><br/>


    <ul>

    <li><a class="localLink"
    href="http://schema.org/SearchAction">SearchAction</a>: FindAction is
    generally lead by a SearchAction, but not necessarily.</li>

    </ul>
FireStation:
  description: A fire station. With firemen.
Flight:
  allOf:
    - $ref: 'trip.yaml#/Trip'
    - properties:
        aircraft:
          description: 'The kind of aircraft (e.g., "Boeing 747").'
          oneOf:
            - $ref: 'vehicle.yaml#/Vehicle'
            - type: string
        arrivalAirport:
          $ref: 'airport.yaml#/Airport'
          description: The airport where the flight terminates.
        arrivalGate:
          description: Identifier of the flight's arrival gate.
          type: string
        arrivalTerminal:
          description: Identifier of the flight's arrival terminal.
          type: string
        boardingPolicy:
          $ref: 'boardingpolicytype.yaml#/BoardingPolicyType'
          description: >-
            The type of boarding policy used by the airline (e.g. zone-based or
            group-based).
        carrier:
          $ref: 'organization.yaml#/Organization'
          description: >-
            'carrier' is an out-dated term indicating the 'provider' for parcel
            delivery and flights.
        departureAirport:
          $ref: 'airport.yaml#/Airport'
          description: The airport where the flight originates.
        departureGate:
          description: Identifier of the flight's departure gate.
          type: string
        departureTerminal:
          description: Identifier of the flight's departure terminal.
          type: string
        estimatedFlightDuration:
          description: The estimated time the flight will take.
          oneOf:
            - $ref: 'duration.yaml#/Duration'
            - type: string
        flightDistance:
          description: The distance of the flight.
          oneOf:
            - $ref: 'distance.yaml#/Distance'
            - type: string
        flightNumber:
          description: >-
            The unique identifier for a flight including the airline IATA code.
            For example, if describing United flight 110, where the IATA code
            for United is 'UA', the flightNumber is 'UA110'.
          type: string
        mealService:
          description: >-
            Description of the meals that will be provided or available for
            purchase.
          type: string
        seller:
          description: >-
            An entity which offers (sells / leases / lends / loans) the services
            / goods.  A seller may also be a provider.
          oneOf:
            - $ref: 'organization.yaml#/Organization'
            - $ref: 'person.yaml#/Person'
        webCheckinTime:
          description: The time when a passenger can check into the flight online.
          format: date-time
          type: string
      type: object
  description: An airline flight.
FlightReservation:
  allOf:
    - $ref: 'reservation.yaml#/Reservation'
    - properties:
        boardingGroup:
          description: The airline-specific indicator of boarding order / preference.
          type: string
        passengerPriorityStatus:
          description: >-
            The priority status assigned to a passenger for security or boarding
            (e.g. FastTrack or Priority).
          oneOf:
            - type: string
            - $ref: 'qualitativevalue.yaml#/QualitativeValue'
        passengerSequenceNumber:
          description: The passenger's sequence number as assigned by the airline.
          type: string
        securityScreening:
          description: The type of security screening the passenger is subject to.
          type: string
      type: object
  description: >-
    A reservation for air travel.<br/><br/>


    Note: This type is for information about actual reservations, e.g. in
    confirmation emails or HTML pages with individual confirmations of
    reservations. For offers of tickets, use <a class="localLink"
    href="http://schema.org/Offer">Offer</a>.
Float:
  description: 'Data type: Floating number.'
  type: number
Florist:
  $ref: 'store.yaml#/Store'
  description: A florist.
FollowAction:
  allOf:
    - $ref: 'interactaction.yaml#/InteractAction'
    - properties:
        followee:
          description: A sub property of object. The person or organization being followed.
          oneOf:
            - $ref: 'person.yaml#/Person'
            - $ref: 'organization.yaml#/Organization'
      type: object
  description: >
    The act of forming a personal connection with someone/something (object)
    unidirectionally/asymmetrically to get updates polled from.<br/><br/>


    Related actions:<br/><br/>


    <ul>

    <li><a class="localLink"
    href="http://schema.org/BefriendAction">BefriendAction</a>: Unlike
    BefriendAction, FollowAction implies that the connection is <em>not</em>
    necessarily reciprocal.</li>

    <li><a class="localLink"
    href="http://schema.org/SubscribeAction">SubscribeAction</a>: Unlike
    SubscribeAction, FollowAction implies that the follower acts as an active
    agent constantly/actively polling for updates.</li>

    <li><a class="localLink"
    href="http://schema.org/RegisterAction">RegisterAction</a>: Unlike
    RegisterAction, FollowAction implies that the agent is interested in
    continuing receiving updates from the object.</li>

    <li><a class="localLink" href="http://schema.org/JoinAction">JoinAction</a>:
    Unlike JoinAction, FollowAction implies that the agent is interested in
    getting updates from the object.</li>

    <li><a class="localLink"
    href="http://schema.org/TrackAction">TrackAction</a>: Unlike TrackAction,
    FollowAction refers to the polling of updates of all aspects of animate
    objects rather than the location of inanimate objects (e.g. you track a
    package, but you don't follow it).</li>

    </ul>
FoodEstablishment:
  allOf:
    - $ref: 'localbusiness.yaml#/LocalBusiness'
    - properties:
        acceptsReservations:
          description: >-
            Indicates whether a FoodEstablishment accepts reservations. Values
            can be Boolean, an URL at which reservations can be made or (for
            backwards compatibility) the strings <code>Yes</code> or
            <code>No</code>.
          oneOf:
            - type: boolean
            - type: string
            - $ref: 'url.yaml#/URL'
        hasMenu:
          description: >-
            Either the actual menu as a structured representation, as text, or a
            URL of the menu.
          oneOf:
            - $ref: 'menu.yaml#/Menu'
            - $ref: 'url.yaml#/URL'
            - type: string
        menu:
          description: >-
            Either the actual menu as a structured representation, as text, or a
            URL of the menu.
          oneOf:
            - type: string
            - $ref: 'url.yaml#/URL'
            - $ref: 'menu.yaml#/Menu'
        servesCuisine:
          description: The cuisine of the restaurant.
          type: string
        starRating:
          $ref: 'rating.yaml#/Rating'
          description: >-
            An official rating for a lodging business or food establishment,
            e.g. from national associations or standards bodies. Use the author
            property to indicate the rating organization, e.g. as an
            Organization with name such as (e.g. HOTREC, DEHOGA, WHR, or
            Hotelstars).
      type: object
  description: A food-related business.
FoodEstablishmentReservation:
  allOf:
    - $ref: 'reservation.yaml#/Reservation'
    - properties:
        endTime:
          description: >-
            The endTime of something. For a reserved event or service (e.g.
            FoodEstablishmentReservation), the time that it is expected to end.
            For actions that span a period of time, when the action was
            performed. e.g. John wrote a book from January to
            <em>December</em>.<br/><br/>


            Note that Event uses startDate/endDate instead of startTime/endTime,
            even when describing dates with times. This situation may be
            clarified in future revisions.
          format: date-time
          type: string
        partySize:
          description: Number of people the reservation should accommodate.
          oneOf:
            - $ref: 'quantitativevalue.yaml#/QuantitativeValue'
            - type: integer
        startTime:
          description: >-
            The startTime of something. For a reserved event or service (e.g.
            FoodEstablishmentReservation), the time that it is expected to
            start. For actions that span a period of time, when the action was
            performed. e.g. John wrote a book from <em>January</em> to
            December.<br/><br/>


            Note that Event uses startDate/endDate instead of startTime/endTime,
            even when describing dates with times. This situation may be
            clarified in future revisions.
          format: date-time
          type: string
      type: object
  description: >-
    A reservation to dine at a food-related business.<br/><br/>


    Note: This type is for information about actual reservations, e.g. in
    confirmation emails or HTML pages with individual confirmations of
    reservations.
FoodEvent:
  $ref: 'event.yaml#/Event'
  description: 'Event type: Food event.'
FoodService:
  $ref: 'service.yaml#/Service'
  description: 'A food service, like breakfast, lunch, or dinner.'
FurnitureStore:
  $ref: 'store.yaml#/Store'
  description: A furniture store.
Game:
  allOf:
    - $ref: 'creativework.yaml#/CreativeWork'
    - properties:
        characterAttribute:
          $ref: 'thing.yaml#/Thing'
          description: >-
            A piece of data that represents a particular aspect of a fictional
            character (skill, power, character points, advantage, disadvantage).
        gameItem:
          $ref: 'thing.yaml#/Thing'
          description: >-
            An item is an object within the game world that can be collected by
            a player or, occasionally, a non-player character.
        gameLocation:
          description: Real or fictional location of the game (or part of game).
          oneOf:
            - $ref: 'place.yaml#/Place'
            - $ref: 'url.yaml#/URL'
            - $ref: 'postaladdress.yaml#/PostalAddress'
        numberOfPlayers:
          $ref: 'quantitativevalue.yaml#/QuantitativeValue'
          description: >-
            Indicate how many people can play this game (minimum, maximum, or
            range).
        quest:
          $ref: 'thing.yaml#/Thing'
          description: >-
            The task that a player-controlled character, or group of characters
            may complete in order to gain a reward.
      type: object
  description: >-
    The Game type represents things which are games. These are typically
    rule-governed recreational activities, e.g. role-playing games in which
    players assume the role of characters in a fictional setting.
GamePlayMode:
  $ref: 'enumeration.yaml#/Enumeration'
  description: 'Indicates whether this game is multi-player, co-op or single-player.'
GameServer:
  allOf:
    - $ref: 'intangible.yaml#/Intangible'
    - properties:
        game:
          $ref: 'videogame.yaml#/VideoGame'
          description: Video game which is played on this server.
        playersOnline:
          description: Number of players on the server.
          type: integer
        serverStatus:
          $ref: 'gameserverstatus.yaml#/GameServerStatus'
          description: Status of a game server.
      type: object
  description: Server that provides game interaction in a multiplayer game.
GameServerStatus:
  $ref: 'enumeration.yaml#/Enumeration'
  description: Status of a game server.
GardenStore:
  $ref: 'store.yaml#/Store'
  description: A garden store.
GasStation:
  $ref: 'automotivebusiness.yaml#/AutomotiveBusiness'
  description: A gas station.
GatedResidenceCommunity:
  $ref: 'residence.yaml#/Residence'
  description: 'Residence type: Gated community.'
GenderType:
  $ref: 'enumeration.yaml#/Enumeration'
  description: An enumeration of genders.
GeneralContractor:
  $ref: 'homeandconstructionbusiness.yaml#/HomeAndConstructionBusiness'
  description: A general contractor.
GeoCircle:
  allOf:
    - $ref: 'geoshape.yaml#/GeoShape'
    - properties:
        geoMidpoint:
          $ref: 'geocoordinates.yaml#/GeoCoordinates'
          description: >-
            Indicates the GeoCoordinates at the centre of a GeoShape e.g.
            GeoCircle.
        geoRadius:
          description: >-
            Indicates the approximate radius of a GeoCircle (metres unless
            indicated otherwise via Distance notation).
          oneOf:
            - type: number
            - type: string
            - $ref: 'distance.yaml#/Distance'
      type: object
  description: >-
    A GeoCircle is a GeoShape representing a circular geographic area. As it is
    a GeoShape
              it provides the simple textual property 'circle', but also allows the combination of postalCode alongside geoRadius.
              The center of the circle can be indicated via the 'geoMidpoint' property, or more approximately using 'address', 'postalCode'.
GeoCoordinates:
  allOf:
    - $ref: 'structuredvalue.yaml#/StructuredValue'
    - properties:
        address:
          description: Physical address of the item.
          oneOf:
            - $ref: 'postaladdress.yaml#/PostalAddress'
            - type: string
        addressCountry:
          description: >-
            The country. For example, USA. You can also provide the two-letter
            <a href="http://en.wikipedia.org/wiki/ISO_3166-1">ISO 3166-1 alpha-2
            country code</a>.
          oneOf:
            - $ref: 'country.yaml#/Country'
            - type: string
        elevation:
          description: >-
            The elevation of a location (<a
            href="https://en.wikipedia.org/wiki/World_Geodetic_System">WGS
            84</a>).
          oneOf:
            - type: string
            - type: number
        latitude:
          description: >-
            The latitude of a location. For example <code>37.42242</code> (<a
            href="https://en.wikipedia.org/wiki/World_Geodetic_System">WGS
            84</a>).
          oneOf:
            - type: string
            - type: number
        longitude:
          description: >-
            The longitude of a location. For example <code>-122.08585</code> (<a
            href="https://en.wikipedia.org/wiki/World_Geodetic_System">WGS
            84</a>).
          oneOf:
            - type: string
            - type: number
        postalCode:
          description: 'The postal code. For example, 94043.'
          type: string
      type: object
  description: The geographic coordinates of a place or event.
GeoShape:
  allOf:
    - $ref: 'structuredvalue.yaml#/StructuredValue'
    - properties:
        address:
          description: Physical address of the item.
          oneOf:
            - type: string
            - $ref: 'postaladdress.yaml#/PostalAddress'
        addressCountry:
          description: >-
            The country. For example, USA. You can also provide the two-letter
            <a href="http://en.wikipedia.org/wiki/ISO_3166-1">ISO 3166-1 alpha-2
            country code</a>.
          oneOf:
            - $ref: 'country.yaml#/Country'
            - type: string
        box:
          description: >-
            A box is the area enclosed by the rectangle formed by two points.
            The first point is the lower corner, the second point is the upper
            corner. A box is expressed as two points separated by a space
            character.
          type: string
        circle:
          description: >-
            A circle is the circular region of a specified radius centered at a
            specified latitude and longitude. A circle is expressed as a pair
            followed by a radius in meters.
          type: string
        elevation:
          description: >-
            The elevation of a location (<a
            href="https://en.wikipedia.org/wiki/World_Geodetic_System">WGS
            84</a>).
          oneOf:
            - type: string
            - type: number
        line:
          description: >-
            A line is a point-to-point path consisting of two or more points. A
            line is expressed as a series of two or more point objects separated
            by space.
          type: string
        polygon:
          description: >-
            A polygon is the area enclosed by a point-to-point path for which
            the starting and ending points are the same. A polygon is expressed
            as a series of four or more space delimited points where the first
            and final points are identical.
          type: string
        postalCode:
          description: 'The postal code. For example, 94043.'
          type: string
      type: object
  description: >-
    The geographic shape of a place. A GeoShape can be described using several
    properties whose values are based on latitude/longitude pairs. Either
    whitespace or commas can be used to separate latitude and longitude;
    whitespace should be used when writing a list of several such points.
GiveAction:
  allOf:
    - $ref: 'transferaction.yaml#/TransferAction'
    - properties:
        recipient:
          description: >-
            A sub property of participant. The participant who is at the
            receiving end of the action.
          oneOf:
            - $ref: 'organization.yaml#/Organization'
            - $ref: 'person.yaml#/Person'
            - $ref: 'contactpoint.yaml#/ContactPoint'
            - $ref: 'audience.yaml#/Audience'
      type: object
  description: >
    The act of transferring ownership of an object to a destination. Reciprocal
    of TakeAction.<br/><br/>


    Related actions:<br/><br/>


    <ul>

    <li><a class="localLink" href="http://schema.org/TakeAction">TakeAction</a>:
    Reciprocal of GiveAction.</li>

    <li><a class="localLink" href="http://schema.org/SendAction">SendAction</a>:
    Unlike SendAction, GiveAction implies that ownership is being transferred
    (e.g. I may send my laptop to you, but that doesn't mean I'm giving it to
    you).</li>

    </ul>
GolfCourse:
  $ref: 'sportsactivitylocation.yaml#/SportsActivityLocation'
  description: A golf course.
GovernmentBuilding:
  $ref: 'civicstructure.yaml#/CivicStructure'
  description: A government building.
GovernmentOffice:
  $ref: 'localbusiness.yaml#/LocalBusiness'
  description: 'A government office&#x2014;for example, an IRS or DMV office.'
GovernmentOrganization:
  $ref: 'organization.yaml#/Organization'
  description: A governmental organization or agency.
GovernmentPermit:
  $ref: 'permit.yaml#/Permit'
  description: A permit issued by a government agency.
GovernmentService:
  allOf:
    - $ref: 'service.yaml#/Service'
    - properties:
        serviceOperator:
          $ref: 'organization.yaml#/Organization'
          description: >-
            The operating organization, if different from the provider.  This
            enables the representation of services that are provided by an
            organization, but operated by another organization like a
            subcontractor.
      type: object
  description: >-
    A service provided by a government organization, e.g. food stamps, veterans
    benefits, etc.
GroceryStore:
  $ref: 'store.yaml#/Store'
  description: A grocery store.
HairSalon:
  $ref: 'healthandbeautybusiness.yaml#/HealthAndBeautyBusiness'
  description: A hair salon.
HardwareStore:
  $ref: 'store.yaml#/Store'
  description: A hardware store.
HealthAndBeautyBusiness:
  $ref: 'localbusiness.yaml#/LocalBusiness'
  description: Health and beauty.
HealthClub:
  description: A health club.
HighSchool:
  $ref: 'educationalorganization.yaml#/EducationalOrganization'
  description: A high school.
HinduTemple:
  $ref: 'placeofworship.yaml#/PlaceOfWorship'
  description: A Hindu temple.
HobbyShop:
  $ref: 'store.yaml#/Store'
  description: A store that sells materials useful or necessary for various hobbies.
HomeAndConstructionBusiness:
  $ref: 'localbusiness.yaml#/LocalBusiness'
  description: >-
    A construction business.<br/><br/>


    A HomeAndConstructionBusiness is a <a class="localLink"
    href="http://schema.org/LocalBusiness">LocalBusiness</a> that provides
    services around homes and buildings.<br/><br/>


    As a <a class="localLink"
    href="http://schema.org/LocalBusiness">LocalBusiness</a> it can be described
    as a <a class="localLink" href="http://schema.org/provider">provider</a> of
    one or more <a class="localLink"
    href="http://schema.org/Service">Service</a>(s).
HomeGoodsStore:
  $ref: 'store.yaml#/Store'
  description: A home goods store.
Hospital:
  description: A hospital.
  properties:
    availableService:
      description: A medical service available from this provider.
      oneOf:
        - description: MedicalProcedure type is not published yet in schema.org.
          type: object
        - description: MedicalTherapy type is not published yet in schema.org.
          type: object
        - description: MedicalTest type is not published yet in schema.org.
          type: object
    medicalSpecialty:
      description: >-
        A medical specialty of the provider. Note: MedicalSpecialty type is not
        published yet in schema.org.
      type: object
Hostel:
  $ref: 'lodgingbusiness.yaml#/LodgingBusiness'
  description: >-
    A hostel - cheap accommodation, often in shared dormitories.

    <br /><br />

    See also the <a href="/docs/hotels.html">dedicated document on the use of
    schema.org for marking up hotels and other forms of accommodations</a>.
Hotel:
  $ref: 'lodgingbusiness.yaml#/LodgingBusiness'
  description: >-
    A hotel is an establishment that provides lodging paid on a short-term basis
    (Source: Wikipedia, the free encyclopedia, see
    http://en.wikipedia.org/wiki/Hotel).

    <br /><br />

    See also the <a href="/docs/hotels.html">dedicated document on the use of
    schema.org for marking up hotels and other forms of accommodations</a>.
HotelRoom:
  allOf:
    - $ref: 'room.yaml#/Room'
    - properties:
        bed:
          description: >-
            The type of bed or beds included in the accommodation. For the
            single case of just one bed of a certain type, you use bed directly
            with a text.
                  If you want to indicate the quantity of a certain kind of bed, use an instance of BedDetails. For more detailed information, use the amenityFeature property.
          oneOf:
            - description: BedType type is not published yet in schema.org.
              type: object
            - $ref: 'beddetails.yaml#/BedDetails'
            - type: string
        occupancy:
          $ref: 'quantitativevalue.yaml#/QuantitativeValue'
          description: >-
            The allowed total occupancy for the accommodation in persons
            (including infants etc). For individual accommodations, this is not
            necessarily the legal maximum but defines the permitted usage as per
            the contractual agreement (e.g. a double room used by a single
            person).

            Typical unit code(s): C62 for person
      type: object
  description: >-
    A hotel room is a single room in a hotel.

    <br /><br />

    See also the <a href="/docs/hotels.html">dedicated document on the use of
    schema.org for marking up hotels and other forms of accommodations</a>.
House:
  allOf:
    - $ref: 'accommodation.yaml#/Accommodation'
    - properties:
        numberOfRooms:
          description: >-
            The number of rooms (excluding bathrooms and closets) of the
            accommodation or lodging business.

            Typical unit code(s): ROM for room or C62 for no unit. The type of
            room can be put in the unitText property of the QuantitativeValue.
          oneOf:
            - $ref: 'quantitativevalue.yaml#/QuantitativeValue'
            - type: number
      type: object
  description: >-
    A house is a building or structure that has the ability to be occupied for
    habitation by humans or other creatures (Source: Wikipedia, the free
    encyclopedia, see <a
    href="http://en.wikipedia.org/wiki/House">http://en.wikipedia.org/wiki/House</a>).
HousePainter:
  $ref: 'homeandconstructionbusiness.yaml#/HomeAndConstructionBusiness'
  description: A house painting service.
HowTo:
  allOf:
    - $ref: 'creativework.yaml#/CreativeWork'
    - properties:
        estimatedCost:
          description: >-
            The estimated cost of the supply or supplies consumed when
            performing instructions.
          oneOf:
            - $ref: 'monetaryamount.yaml#/MonetaryAmount'
            - type: string
        performTime:
          $ref: 'duration.yaml#/Duration'
          description: >-
            The length of time it takes to perform instructions or a direction
            (not including time to prepare the supplies), in <a
            href="http://en.wikipedia.org/wiki/ISO_8601">ISO 8601 duration
            format</a>.
        prepTime:
          $ref: 'duration.yaml#/Duration'
          description: >-
            The length of time it takes to prepare the items to be used in
            instructions or a direction, in <a
            href="http://en.wikipedia.org/wiki/ISO_8601">ISO 8601 duration
            format</a>.
        step:
          description: >-
            A single step item (as HowToStep, text, document, video, etc.) or a
            HowToSection.
          oneOf:
            - $ref: 'howtostep.yaml#/HowToStep'
            - type: string
            - $ref: 'howtosection.yaml#/HowToSection'
            - $ref: 'creativework.yaml#/CreativeWork'
        steps:
          description: >-
            A single step item (as HowToStep, text, document, video, etc.) or a
            HowToSection (originally misnamed 'steps'; 'step' is preferred).
          oneOf:
            - $ref: 'creativework.yaml#/CreativeWork'
            - $ref: 'itemlist.yaml#/ItemList'
            - type: string
        supply:
          description: >-
            A sub-property of instrument. A supply consumed when performing
            instructions or a direction.
          oneOf:
            - $ref: 'howtosupply.yaml#/HowToSupply'
            - type: string
        tool:
          description: >-
            A sub property of instrument. An object used (but not consumed) when
            performing instructions or a direction.
          oneOf:
            - $ref: 'howtotool.yaml#/HowToTool'
            - type: string
        totalTime:
          $ref: 'duration.yaml#/Duration'
          description: >-
            The total time required to perform instructions or a direction
            (including time to prepare the supplies), in <a
            href="http://en.wikipedia.org/wiki/ISO_8601">ISO 8601 duration
            format</a>.
        yield:
          description: >-
            The quantity that results by performing instructions. For example, a
            paper airplane, 10 personalized candles.
          oneOf:
            - type: string
            - $ref: 'quantitativevalue.yaml#/QuantitativeValue'
      type: object
  description: >-
    Instructions that explain how to achieve a result by performing a sequence
    of steps.
HowToDirection:
  description: >-
    A direction indicating a single action to do in the instructions for how to
    achieve a result.
  properties:
    afterMedia:
      description: >-
        A media object representing the circumstances after performing this
        direction.
      oneOf:
        - $ref: 'mediaobject.yaml#/MediaObject'
        - $ref: 'url.yaml#/URL'
    beforeMedia:
      description: >-
        A media object representing the circumstances before performing this
        direction.
      oneOf:
        - $ref: 'mediaobject.yaml#/MediaObject'
        - $ref: 'url.yaml#/URL'
    duringMedia:
      description: >-
        A media object representing the circumstances while performing this
        direction.
      oneOf:
        - $ref: 'url.yaml#/URL'
        - $ref: 'mediaobject.yaml#/MediaObject'
    performTime:
      $ref: 'duration.yaml#/Duration'
      description: >-
        The length of time it takes to perform instructions or a direction (not
        including time to prepare the supplies), in <a
        href="http://en.wikipedia.org/wiki/ISO_8601">ISO 8601 duration
        format</a>.
    prepTime:
      $ref: 'duration.yaml#/Duration'
      description: >-
        The length of time it takes to prepare the items to be used in
        instructions or a direction, in <a
        href="http://en.wikipedia.org/wiki/ISO_8601">ISO 8601 duration
        format</a>.
    supply:
      description: >-
        A sub-property of instrument. A supply consumed when performing
        instructions or a direction.
      oneOf:
        - type: string
        - $ref: 'howtosupply.yaml#/HowToSupply'
    tool:
      description: >-
        A sub property of instrument. An object used (but not consumed) when
        performing instructions or a direction.
      oneOf:
        - type: string
        - $ref: 'howtotool.yaml#/HowToTool'
    totalTime:
      $ref: 'duration.yaml#/Duration'
      description: >-
        The total time required to perform instructions or a direction
        (including time to prepare the supplies), in <a
        href="http://en.wikipedia.org/wiki/ISO_8601">ISO 8601 duration
        format</a>.
HowToItem:
  allOf:
    - $ref: 'listitem.yaml#/ListItem'
    - properties:
        requiredQuantity:
          description: The required quantity of the item(s).
          oneOf:
            - type: string
            - type: number
            - $ref: 'quantitativevalue.yaml#/QuantitativeValue'
      type: object
  description: >-
    An item used as either a tool or supply when performing the instructions for
    how to to achieve a result.
HowToSection:
  description: >-
    A sub-grouping of steps in the instructions for how to achieve a result
    (e.g. steps for making a pie crust within a pie recipe).
  properties:
    steps:
      description: >-
        A single step item (as HowToStep, text, document, video, etc.) or a
        HowToSection (originally misnamed 'steps'; 'step' is preferred).
      oneOf:
        - $ref: 'creativework.yaml#/CreativeWork'
        - $ref: 'itemlist.yaml#/ItemList'
        - type: string
HowToStep:
  description: >-
    A step in the instructions for how to achieve a result. It is an ordered
    list with HowToDirection and/or HowToTip items.
HowToSupply:
  allOf:
    - $ref: 'howtoitem.yaml#/HowToItem'
    - properties:
        estimatedCost:
          description: >-
            The estimated cost of the supply or supplies consumed when
            performing instructions.
          oneOf:
            - $ref: 'monetaryamount.yaml#/MonetaryAmount'
            - type: string
      type: object
  description: >-
    A supply consumed when performing the instructions for how to achieve a
    result.
HowToTip:
  description: >-
    An explanation in the instructions for how to achieve a result. It provides
    supplementary information about a technique, supply, author's preference,
    etc. It can explain what could be done, or what should not be done, but
    doesn't specify what should be done (see HowToDirection).
HowToTool:
  $ref: 'howtoitem.yaml#/HowToItem'
  description: >-
    A tool used (but not consumed) when performing instructions for how to
    achieve a result.
HVACBusiness:
  $ref: 'homeandconstructionbusiness.yaml#/HomeAndConstructionBusiness'
  description: 'A business that provide Heating, Ventilation and Air Conditioning services.'
IceCreamShop:
  $ref: 'foodestablishment.yaml#/FoodEstablishment'
  description: An ice cream shop.
IgnoreAction:
  $ref: 'assessaction.yaml#/AssessAction'
  description: >-
    The act of intentionally disregarding the object. An agent ignores an
    object.
ImageGallery:
  $ref: 'collectionpage.yaml#/CollectionPage'
  description: 'Web page type: Image gallery page.'
ImageObject:
  allOf:
    - $ref: 'mediaobject.yaml#/MediaObject'
    - properties:
        caption:
          description: The caption for this object.
          type: string
        exifData:
          description: exif data for this object.
          oneOf:
            - type: string
            - $ref: 'propertyvalue.yaml#/PropertyValue'
        representativeOfPage:
          description: >-
            Indicates whether this image is representative of the content of the
            page.
          type: boolean
        thumbnail:
          $ref: 'imageobject.yaml#/ImageObject'
          description: Thumbnail image for an image or video.
      type: object
  description: An image file.
IndividualProduct:
  allOf:
    - $ref: 'product.yaml#/Product'
    - properties:
        serialNumber:
          description: >-
            The serial number or any alphanumeric identifier of a particular
            product. When attached to an offer, it is a shortcut for the serial
            number of the product included in the offer.
          type: string
      type: object
  description: >-
    A single, identifiable product instance (e.g. a laptop with a particular
    serial number).
InformAction:
  allOf:
    - $ref: 'communicateaction.yaml#/CommunicateAction'
    - properties:
        event:
          $ref: 'event.yaml#/Event'
          description: >-
            Upcoming or past event associated with this place, organization, or
            action.
      type: object
  description: >-
    The act of notifying someone of information pertinent to them, with no
    expectation of a response.
InsertAction:
  allOf:
    - $ref: 'addaction.yaml#/AddAction'
    - properties:
        toLocation:
          $ref: 'place.yaml#/Place'
          description: >-
            A sub property of location. The final location of the object or the
            agent after the action.
      type: object
  description: The act of adding at a specific location in an ordered collection.
InstallAction:
  $ref: 'consumeaction.yaml#/ConsumeAction'
  description: The act of installing an application.
InsuranceAgency:
  $ref: 'financialservice.yaml#/FinancialService'
  description: An Insurance agency.
Intangible:
  $ref: 'thing.yaml#/Thing'
  description: >-
    A utility class that serves as the umbrella for a number of 'intangible'
    things such as quantities, structured values, etc.
Integer:
  description: 'Data type: Integer.'
  type: number
InteractAction:
  $ref: 'action.yaml#/Action'
  description: The act of interacting with another person or organization.
InteractionCounter:
  allOf:
    - $ref: 'structuredvalue.yaml#/StructuredValue'
    - properties:
        interactionService:
          description: >-
            The WebSite or SoftwareApplication where the interactions took
            place.
          oneOf:
            - $ref: 'website.yaml#/WebSite'
            - $ref: 'softwareapplication.yaml#/SoftwareApplication'
        interactionType:
          $ref: 'action.yaml#/Action'
          description: >-
            The Action representing the type of interaction. For up votes, +1s,
            etc. use <a class="localLink"
            href="http://schema.org/LikeAction">LikeAction</a>. For down votes
            use <a class="localLink"
            href="http://schema.org/DislikeAction">DislikeAction</a>. Otherwise,
            use the most specific Action.
        userInteractionCount:
          description: >-
            The number of interactions for the CreativeWork using the WebSite or
            SoftwareApplication.
          type: integer
      type: object
  description: >-
    A summary of how users have interacted with this CreativeWork. In most
    cases, authors will use a subtype to specify the specific type of
    interaction.
InternetCafe:
  $ref: 'localbusiness.yaml#/LocalBusiness'
  description: An internet cafe.
InvestmentOrDeposit:
  allOf:
    - $ref: 'financialproduct.yaml#/FinancialProduct'
    - properties:
        amount:
          description: The amount of money.
          oneOf:
            - $ref: 'monetaryamount.yaml#/MonetaryAmount'
            - type: number
      type: object
  description: >-
    A type of financial product that typically requires the client to transfer
    funds to a financial service in return for potential beneficial financial
    return.
InviteAction:
  allOf:
    - $ref: 'communicateaction.yaml#/CommunicateAction'
    - properties:
        event:
          $ref: 'event.yaml#/Event'
          description: >-
            Upcoming or past event associated with this place, organization, or
            action.
      type: object
  description: The act of asking someone to attend an event. Reciprocal of RsvpAction.
Invoice:
  allOf:
    - $ref: 'intangible.yaml#/Intangible'
    - properties:
        accountId:
          description: The identifier for the account the payment will be applied to.
          type: string
        billingPeriod:
          $ref: 'duration.yaml#/Duration'
          description: The time interval used to compute the invoice.
        broker:
          description: >-
            An entity that arranges for an exchange between a buyer and a
            seller.  In most cases a broker never acquires or releases ownership
            of a product or service involved in an exchange.  If it is not clear
            whether an entity is a broker, seller, or buyer, the latter two
            terms are preferred.
          oneOf:
            - $ref: 'person.yaml#/Person'
            - $ref: 'organization.yaml#/Organization'
        category:
          description: >-
            A category for the item. Greater signs or slashes can be used to
            informally indicate a category hierarchy.
          oneOf:
            - $ref: 'thing.yaml#/Thing'
            - description: >-
                PhysicalActivityCategory type is not published yet in
                schema.org.
              type: object
            - type: string
        confirmationNumber:
          description: A number that confirms the given order or payment has been received.
          type: string
        customer:
          description: Party placing the order or paying the invoice.
          oneOf:
            - $ref: 'organization.yaml#/Organization'
            - $ref: 'person.yaml#/Person'
        minimumPaymentDue:
          description: The minimum payment required at this time.
          oneOf:
            - $ref: 'pricespecification.yaml#/PriceSpecification'
            - $ref: 'monetaryamount.yaml#/MonetaryAmount'
        paymentDue:
          description: The date that payment is due.
          format: date-time
          type: string
        paymentDueDate:
          description: The date that payment is due.
          format: date-time
          type: string
        paymentMethod:
          $ref: 'paymentmethod.yaml#/PaymentMethod'
          description: >-
            The name of the credit card or other method of payment for the
            order.
        paymentMethodId:
          description: >-
            An identifier for the method of payment used (e.g. the last 4 digits
            of the credit card).
          type: string
        paymentStatus:
          description: The status of payment; whether the invoice has been paid or not.
          oneOf:
            - type: string
            - $ref: 'paymentstatustype.yaml#/PaymentStatusType'
        provider:
          description: >-
            The service provider, service operator, or service performer; the
            goods producer. Another party (a seller) may offer those services or
            goods on behalf of the provider. A provider may also serve as the
            seller.
          oneOf:
            - $ref: 'organization.yaml#/Organization'
            - $ref: 'person.yaml#/Person'
        referencesOrder:
          $ref: 'order.yaml#/Order'
          description: >-
            The Order(s) related to this Invoice. One or more Orders may be
            combined into a single Invoice.
        scheduledPaymentDate:
          description: The date the invoice is scheduled to be paid.
          format: date
          type: string
        totalPaymentDue:
          description: The total amount due.
          oneOf:
            - $ref: 'monetaryamount.yaml#/MonetaryAmount'
            - $ref: 'pricespecification.yaml#/PriceSpecification'
      type: object
  description: A statement of the money due for goods or services; a bill.
ItemAvailability:
  $ref: 'enumeration.yaml#/Enumeration'
  description: A list of possible product availability options.
ItemList:
  allOf:
    - $ref: 'intangible.yaml#/Intangible'
    - properties:
        itemListElement:
          description: >-
            For itemListElement values, you can use simple strings (e.g.
            "Peter", "Paul", "Mary"), existing entities, or use
            ListItem.<br/><br/>


            Text values are best if the elements in the list are plain strings.
            Existing entities are best for a simple, unordered list of existing
            things in your data. ListItem is used with ordered lists when you
            want to provide additional context about the element in that list or
            when the same item might be in different places in different
            lists.<br/><br/>


            Note: The order of elements in your mark-up is not sufficient for
            indicating the order or elements.  Use ListItem with a 'position'
            property in such cases.
          oneOf:
            - type: string
            - $ref: 'listitem.yaml#/ListItem'
            - $ref: 'thing.yaml#/Thing'
        itemListOrder:
          description: 'Type of ordering (e.g. Ascending, Descending, Unordered).'
          oneOf:
            - $ref: 'itemlistordertype.yaml#/ItemListOrderType'
            - type: string
        numberOfItems:
          description: >-
            The number of items in an ItemList. Note that some descriptions
            might not fully describe all items in a list (e.g., multi-page
            pagination); in such cases, the numberOfItems would be for the
            entire list.
          type: integer
      type: object
  description: >-
    A list of items of any sort&#x2014;for example, Top 10 Movies About
    Weathermen, or Top 100 Party Songs. Not to be confused with HTML lists,
    which are often used only for formatting.
ItemListOrderType:
  $ref: 'enumeration.yaml#/Enumeration'
  description: >-
    Enumerated for values for itemListOrder for indicating how an ordered
    ItemList is organized.
ItemPage:
  $ref: 'webpage.yaml#/WebPage'
  description: 'A page devoted to a single item, such as a particular product or hotel.'
JewelryStore:
  $ref: 'store.yaml#/Store'
  description: A jewelry store.
JobPosting:
  allOf:
    - $ref: 'intangible.yaml#/Intangible'
    - properties:
        baseSalary:
          description: The base salary of the job or of an employee in an EmployeeRole.
          oneOf:
            - $ref: 'monetaryamount.yaml#/MonetaryAmount'
            - type: number
            - $ref: 'pricespecification.yaml#/PriceSpecification'
        benefits:
          description: Description of benefits associated with the job.
          type: string
        datePosted:
          description: Publication date for the job posting.
          format: date
          type: string
        educationRequirements:
          description:
            - Educational background needed for the position.
            - Educational background needed for the position or Occupation.
          type: string
        employmentType:
          description: >-
            Type of employment (e.g. full-time, part-time, contract, temporary,
            seasonal, internship).
          type: string
        estimatedSalary:
          description:
            - >-
              A property describing the estimated salary for a job posting based
              on a variety of variables including, but not limited to industry,
              job title, and location. The estimated salary is usually computed
              by outside organizations and therefore the hiring organization is
              not bound to this estimated salary.
            - >-
              The estimated salary for this occupation in the given
              occupationLocation.
          oneOf:
            - $ref: 'pricespecification.yaml#/PriceSpecification'
            - $ref: 'monetaryamount.yaml#/MonetaryAmount'
            - type: number
            - description: >-
                MonetaryAmountDistribution type is not published yet in
                schema.org.
              type: object
        experienceRequirements:
          description:
            - Description of skills and experience needed for the position.
            - >-
              Description of skills and experience needed for the position or
              Occupation.
          type: string
        hiringOrganization:
          $ref: 'organization.yaml#/Organization'
          description: Organization offering the job position.
        incentiveCompensation:
          description: Description of bonus and commission compensation aspects of the job.
          type: string
        incentives:
          description: Description of bonus and commission compensation aspects of the job.
          type: string
        industry:
          description: The industry associated with the job position.
          type: string
        jobBenefits:
          description: Description of benefits associated with the job.
          type: string
        jobLocation:
          $ref: 'place.yaml#/Place'
          description: >-
            A (typically single) geographic location associated with the job
            position.
        occupationalCategory:
          description: >-
            Category or categories describing the job. Use BLS O*NET-SOC
            taxonomy: http://www.onetcenter.org/taxonomy.html. Ideally includes
            textual label and formal code, with the property repeated for each
            applicable value.
          type: string
        qualifications:
          description:
            - Specific qualifications required for this role or Occupation.
            - Specific qualifications required for this role.
          type: string
        relevantOccupation:
          description: >-
            The Occupation for the JobPosting. Note: Occupation type is not
            published yet in schema.org.
          type: object
        responsibilities:
          description:
            - Responsibilities associated with this role.
            - Responsibilities associated with this role or Occupation.
          type: string
        salaryCurrency:
          description: >-
            The currency (coded using <a
            href="http://en.wikipedia.org/wiki/ISO_4217">ISO 4217</a> ) used for
            the main salary information in this job posting or for this
            employee.
          type: string
        skills:
          description:
            - Skills required to fulfill this role.
            - Skills required to fulfill this role or in this Occupation.
          type: string
        specialCommitments:
          description: >-
            Any special commitments associated with this job posting. Valid
            entries include VeteranCommit, MilitarySpouseCommit, etc.
          type: string
        title:
          description: The title of the job.
          type: string
        validThrough:
          description: >-
            The date after when the item is not valid. For example the end of an
            offer, salary period, or a period of opening hours.
          format: date-time
          type: string
        workHours:
          description: >-
            The typical working hours for this job (e.g. 1st shift, night shift,
            8am-5pm).
          type: string
      type: object
  description: A listing that describes a job opening in a certain organization.
JoinAction:
  allOf:
    - $ref: 'interactaction.yaml#/InteractAction'
    - properties:
        event:
          $ref: 'event.yaml#/Event'
          description: >-
            Upcoming or past event associated with this place, organization, or
            action.
      type: object
  description: >
    An agent joins an event/group with participants/friends at a
    location.<br/><br/>


    Related actions:<br/><br/>


    <ul>

    <li><a class="localLink"
    href="http://schema.org/RegisterAction">RegisterAction</a>: Unlike
    RegisterAction, JoinAction refers to joining a group/team of people.</li>

    <li><a class="localLink"
    href="http://schema.org/SubscribeAction">SubscribeAction</a>: Unlike
    SubscribeAction, JoinAction does not imply that you'll be receiving
    updates.</li>

    <li><a class="localLink"
    href="http://schema.org/FollowAction">FollowAction</a>: Unlike FollowAction,
    JoinAction does not imply that you'll be polling for updates.</li>

    </ul>
LakeBodyOfWater:
  $ref: 'bodyofwater.yaml#/BodyOfWater'
  description: 'A lake (for example, Lake Pontrachain).'
Landform:
  $ref: 'place.yaml#/Place'
  description: >-
    A landform or physical feature.  Landform elements include mountains,
    plains, lakes, rivers, seascape and oceanic waterbody interface features
    such as bays, peninsulas, seas and so forth, including sub-aqueous terrain
    features such as submersed mountain ranges, volcanoes, and the great ocean
    basins.
LandmarksOrHistoricalBuildings:
  $ref: 'place.yaml#/Place'
  description: An historical landmark or building.
Language:
  $ref: 'intangible.yaml#/Intangible'
  description: >-
    Natural languages such as Spanish, Tamil, Hindi, English, etc. Formal
    language code tags expressed in <a
    href="https://en.wikipedia.org/wiki/IETF_language_tag">BCP 47</a> can be
    used via the <a class="localLink"
    href="http://schema.org/alternateName">alternateName</a> property. The
    Language type previously also covered programming languages such as Scheme
    and Lisp, which are now best represented using <a class="localLink"
    href="http://schema.org/ComputerLanguage">ComputerLanguage</a>.
LeaveAction:
  allOf:
    - $ref: 'interactaction.yaml#/InteractAction'
    - properties:
        event:
          $ref: 'event.yaml#/Event'
          description: >-
            Upcoming or past event associated with this place, organization, or
            action.
      type: object
  description: >
    An agent leaves an event / group with participants/friends at a
    location.<br/><br/>


    Related actions:<br/><br/>


    <ul>

    <li><a class="localLink" href="http://schema.org/JoinAction">JoinAction</a>:
    The antonym of LeaveAction.</li>

    <li><a class="localLink"
    href="http://schema.org/UnRegisterAction">UnRegisterAction</a>: Unlike
    UnRegisterAction, LeaveAction implies leaving a group/team of people rather
    than a service.</li>

    </ul>
LegalService:
  $ref: 'localbusiness.yaml#/LocalBusiness'
  description: >-
    A LegalService is a business that provides legally-oriented services, advice
    and representation, e.g. law firms.<br/><br/>


    As a <a class="localLink"
    href="http://schema.org/LocalBusiness">LocalBusiness</a> it can be described
    as a <a class="localLink" href="http://schema.org/provider">provider</a> of
    one or more <a class="localLink"
    href="http://schema.org/Service">Service</a>(s).
LegislativeBuilding:
  $ref: 'governmentbuilding.yaml#/GovernmentBuilding'
  description: 'A legislative building&#x2014;for example, the state capitol.'
LendAction:
  allOf:
    - $ref: 'transferaction.yaml#/TransferAction'
    - properties:
        borrower:
          $ref: 'person.yaml#/Person'
          description: >-
            A sub property of participant. The person that borrows the object
            being lent.
      type: object
  description: >
    The act of providing an object under an agreement that it will be returned
    at a later date. Reciprocal of BorrowAction.<br/><br/>


    Related actions:<br/><br/>


    <ul>

    <li><a class="localLink"
    href="http://schema.org/BorrowAction">BorrowAction</a>: Reciprocal of
    LendAction.</li>

    </ul>
Library:
  $ref: 'localbusiness.yaml#/LocalBusiness'
  description: A library.
LikeAction:
  $ref: 'reactaction.yaml#/ReactAction'
  description: >-
    The act of expressing a positive sentiment about the object. An agent likes
    an object (a proposition, topic or theme) with participants.
LiquorStore:
  $ref: 'store.yaml#/Store'
  description: >-
    A shop that sells alcoholic drinks such as wine, beer, whisky and other
    spirits.
ListenAction:
  $ref: 'consumeaction.yaml#/ConsumeAction'
  description: The act of consuming audio content.
ListItem:
  allOf:
    - $ref: 'intangible.yaml#/Intangible'
    - properties:
        item:
          $ref: 'thing.yaml#/Thing'
          description: >-
            An entity represented by an entry in a list or data feed (e.g. an
            'artist' in a list of 'artists')’.
        nextItem:
          $ref: 'listitem.yaml#/ListItem'
          description: A link to the ListItem that follows the current one.
        position:
          description: The position of an item in a series or sequence of items.
          oneOf:
            - type: integer
            - type: string
        previousItem:
          $ref: 'listitem.yaml#/ListItem'
          description: A link to the ListItem that preceeds the current one.
      type: object
  description: 'An list item, e.g. a step in a checklist or how-to description.'
LiteraryEvent:
  $ref: 'event.yaml#/Event'
  description: 'Event type: Literary event.'
LiveBlogPosting:
  allOf:
    - $ref: 'blogposting.yaml#/BlogPosting'
    - properties:
        coverageEndTime:
          description: >-
            The time when the live blog will stop covering the Event. Note that
            coverage may continue after the Event concludes.
          format: date-time
          type: string
        coverageStartTime:
          description: >-
            The time when the live blog will begin covering the Event. Note that
            coverage may begin before the Event's start time. The
            LiveBlogPosting may also be created before coverage begins.
          format: date-time
          type: string
        liveBlogUpdate:
          $ref: 'blogposting.yaml#/BlogPosting'
          description: An update to the LiveBlog.
      type: object
  description: >-
    A blog post intended to provide a rolling textual coverage of an ongoing
    event through continuous updates.
LoanOrCredit:
  allOf:
    - $ref: 'financialproduct.yaml#/FinancialProduct'
    - properties:
        amount:
          description: The amount of money.
          oneOf:
            - type: number
            - $ref: 'monetaryamount.yaml#/MonetaryAmount'
        currency:
          description:
            - >-
              The currency in which the monetary amount is expressed.<br/><br/>


              Use standard formats: <a
              href="http://en.wikipedia.org/wiki/ISO_4217">ISO 4217 currency
              format</a> e.g. "USD"; <a
              href="https://en.wikipedia.org/wiki/List_of_cryptocurrencies">Ticker
              symbol</a> for cryptocurrencies e.g. "BTC"; well known names for
              <a
              href="https://en.wikipedia.org/wiki/Local_exchange_trading_system">Local
              Exchange Tradings Systems</a> (LETS) and other currency types e.g.
              "Ithaca HOUR".
            - >-
              The currency in which the monetary amount is expressed (in
              3-letter <a href="http://en.wikipedia.org/wiki/ISO_4217">ISO
              4217</a> format).
          type: string
        gracePeriod:
          $ref: 'duration.yaml#/Duration'
          description: >-
            The period of time after any due date that the borrower has to
            fulfil its obligations before a default (failure to pay) is deemed
            to have occurred.
        loanRepaymentForm:
          description: >-
            A form of paying back money previously borrowed from a lender.
            Repayment usually takes the form of periodic payments that normally
            include part principal plus interest in each payment. Note:
            RepaymentSpecification type is not published yet in schema.org.
          type: object
        loanTerm:
          $ref: 'quantitativevalue.yaml#/QuantitativeValue'
          description: The duration of the loan or credit agreement.
        loanType:
          description: The type of a loan or credit.
          oneOf:
            - type: string
            - $ref: 'url.yaml#/URL'
        recourseLoan:
          description: >-
            The only way you get the money back in the event of default is the
            security. Recourse is where you still have the opportunity to go
            back to the borrower for the rest of the money.
          type: boolean
        renegotiableLoan:
          description: >-
            Whether the terms for payment of interest can be renegotiated during
            the life of the loan.
          type: boolean
        requiredCollateral:
          description: >-
            Assets required to secure loan or credit repayments. It may take
            form of third party pledge, goods, financial instruments (cash,
            securities, etc.)
          oneOf:
            - type: string
            - $ref: 'thing.yaml#/Thing'
      type: object
  description: >-
    A financial product for the loaning of an amount of money under agreed terms
    and charges.
LocalBusiness:
  description: >-
    A particular physical business or branch of an organization. Examples of
    LocalBusiness include a restaurant, a particular branch of a restaurant
    chain, a branch of a bank, a medical practice, a club, a bowling alley, etc.
  properties:
    branchOf:
      $ref: 'organization.yaml#/Organization'
      description: >-
        The larger organization that this local business is a branch of, if any.
        Not to be confused with (anatomical)<a class="localLink"
        href="http://schema.org/branch">branch</a>.
    currenciesAccepted:
      description: >-
        The currency accepted.<br/><br/>


        Use standard formats: <a
        href="http://en.wikipedia.org/wiki/ISO_4217">ISO 4217 currency
        format</a> e.g. "USD"; <a
        href="https://en.wikipedia.org/wiki/List_of_cryptocurrencies">Ticker
        symbol</a> for cryptocurrencies e.g. "BTC"; well known names for <a
        href="https://en.wikipedia.org/wiki/Local_exchange_trading_system">Local
        Exchange Tradings Systems</a> (LETS) and other currency types e.g.
        "Ithaca HOUR".
      type: string
    openingHours:
      description: >
        The general opening hours for a business. Opening hours can be specified
        as a weekly time range, starting with days, then times per day. Multiple
        days can be listed with commas ',' separating each day. Day or time
        ranges are specified using a hyphen '-'.<br/><br/>


        <ul>

        <li>Days are specified using the following two-letter combinations:
        <code>Mo</code>, <code>Tu</code>, <code>We</code>, <code>Th</code>,
        <code>Fr</code>, <code>Sa</code>, <code>Su</code>.</li>

        <li>Times are specified using 24:00 time. For example, 3pm is specified
        as <code>15:00</code>. </li>

        <li>Here is an example: <code>&lt;time itemprop="openingHours"
        datetime=&quot;Tu,Th 16:00-20:00&quot;&gt;Tuesdays and Thursdays
        4-8pm&lt;/time&gt;</code>.</li>

        <li>If a business is open 7 days a week, then it can be specified as
        <code>&lt;time itemprop=&quot;openingHours&quot;
        datetime=&quot;Mo-Su&quot;&gt;Monday through Sunday, all
        day&lt;/time&gt;</code>.</li>

        </ul>
      type: string
    paymentAccepted:
      description: 'Cash, Credit Card, Cryptocurrency, Local Exchange Tradings System, etc.'
      type: string
    priceRange:
      description: 'The price range of the business, for example <code>$$$</code>.'
      type: string
LocationFeatureSpecification:
  allOf:
    - $ref: 'propertyvalue.yaml#/PropertyValue'
    - properties:
        hoursAvailable:
          $ref: 'openinghoursspecification.yaml#/OpeningHoursSpecification'
          description: The hours during which this service or contact is available.
        validFrom:
          description: The date when the item becomes valid.
          format: date-time
          type: string
        validThrough:
          description: >-
            The date after when the item is not valid. For example the end of an
            offer, salary period, or a period of opening hours.
          format: date-time
          type: string
      type: object
  description: >-
    Specifies a location feature by providing a structured value representing a
    feature of an accommodation as a property-value pair of varying degrees of
    formality.
LockerDelivery:
  $ref: 'deliverymethod.yaml#/DeliveryMethod'
  description: A DeliveryMethod in which an item is made available via locker.
Locksmith:
  $ref: 'homeandconstructionbusiness.yaml#/HomeAndConstructionBusiness'
  description: A locksmith.
LodgingBusiness:
  allOf:
    - $ref: 'localbusiness.yaml#/LocalBusiness'
    - properties:
        amenityFeature:
          $ref: 'locationfeaturespecification.yaml#/LocationFeatureSpecification'
          description: >-
            An amenity feature (e.g. a characteristic or service) of the
            Accommodation. This generic property does not make a statement about
            whether the feature is included in an offer for the main
            accommodation or available at extra costs.
        audience:
          $ref: 'audience.yaml#/Audience'
          description: 'An intended audience, i.e. a group for whom something was created.'
        availableLanguage:
          description: >-
            A language someone may use with or at the item, service or place.
            Please use one of the language codes from the <a
            href="http://tools.ietf.org/html/bcp47">IETF BCP 47 standard</a>.
            See also <a class="localLink"
            href="http://schema.org/inLanguage">inLanguage</a>
          oneOf:
            - $ref: 'language.yaml#/Language'
            - type: string
        checkinTime:
          description: The earliest someone may check into a lodging establishment.
          format: date-time
          type: string
        checkoutTime:
          description: The latest someone may check out of a lodging establishment.
          format: date-time
          type: string
        petsAllowed:
          description: >-
            Indicates whether pets are allowed to enter the accommodation or
            lodging business. More detailed information can be put in a text
            value.
          oneOf:
            - type: string
            - type: boolean
        starRating:
          $ref: 'rating.yaml#/Rating'
          description: >-
            An official rating for a lodging business or food establishment,
            e.g. from national associations or standards bodies. Use the author
            property to indicate the rating organization, e.g. as an
            Organization with name such as (e.g. HOTREC, DEHOGA, WHR, or
            Hotelstars).
      type: object
  description: 'A lodging business, such as a motel, hotel, or inn.'
LodgingReservation:
  allOf:
    - $ref: 'reservation.yaml#/Reservation'
    - properties:
        checkinTime:
          description: The earliest someone may check into a lodging establishment.
          format: date-time
          type: string
        checkoutTime:
          description: The latest someone may check out of a lodging establishment.
          format: date-time
          type: string
        lodgingUnitDescription:
          description: A full description of the lodging unit.
          type: string
        lodgingUnitType:
          description: >-
            Textual description of the unit type (including suite vs. room, size
            of bed, etc.).
          oneOf:
            - type: string
            - $ref: 'qualitativevalue.yaml#/QualitativeValue'
        numAdults:
          description: The number of adults staying in the unit.
          oneOf:
            - $ref: 'quantitativevalue.yaml#/QuantitativeValue'
            - type: integer
        numChildren:
          description: The number of children staying in the unit.
          oneOf:
            - type: integer
            - $ref: 'quantitativevalue.yaml#/QuantitativeValue'
      type: object
  description: >-
    A reservation for lodging at a hotel, motel, inn, etc.<br/><br/>


    Note: This type is for information about actual reservations, e.g. in
    confirmation emails or HTML pages with individual confirmations of
    reservations.
LoseAction:
  allOf:
    - $ref: 'achieveaction.yaml#/AchieveAction'
    - properties:
        winner:
          $ref: 'person.yaml#/Person'
          description: A sub property of participant. The winner of the action.
      type: object
  description: The act of being defeated in a competitive activity.
Map:
  allOf:
    - $ref: 'creativework.yaml#/CreativeWork'
    - properties:
        mapType:
          $ref: 'mapcategorytype.yaml#/MapCategoryType'
          description: 'Indicates the kind of Map, from the MapCategoryType Enumeration.'
      type: object
  description: A map.
MapCategoryType:
  $ref: 'enumeration.yaml#/Enumeration'
  description: An enumeration of several kinds of Map.
MarryAction:
  $ref: 'interactaction.yaml#/InteractAction'
  description: The act of marrying a person.
Mass:
  $ref: 'quantity.yaml#/Quantity'
  description: >-
    Properties that take Mass as values are of the form '&lt;Number&gt; &lt;Mass
    unit of measure&gt;'. E.g., '7 kg'.
MediaObject:
  allOf:
    - $ref: 'creativework.yaml#/CreativeWork'
    - properties:
        associatedArticle:
          $ref: 'newsarticle.yaml#/NewsArticle'
          description: A NewsArticle associated with the Media Object.
        bitrate:
          description: The bitrate of the media object.
          type: string
        contentSize:
          description: File size in (mega/kilo) bytes.
          type: string
        contentUrl:
          $ref: 'url.yaml#/URL'
          description: >-
            Actual bytes of the media object, for example the image file or
            video file.
        duration:
          $ref: 'duration.yaml#/Duration'
          description: >-
            The duration of the item (movie, audio recording, event, etc.) in <a
            href="http://en.wikipedia.org/wiki/ISO_8601">ISO 8601 date
            format</a>.
        embedUrl:
          $ref: 'url.yaml#/URL'
          description: >-
            A URL pointing to a player for a specific video. In general, this is
            the information in the <code>src</code> element of an
            <code>embed</code> tag and should not be the same as the content of
            the <code>loc</code> tag.
        encodesCreativeWork:
          $ref: 'creativework.yaml#/CreativeWork'
          description: The CreativeWork encoded by this media object.
        encodingFormat:
          description: >-
            Media type typically expressed using a MIME format (see <a
            href="http://www.iana.org/assignments/media-types/media-types.xhtml">IANA
            site</a> and <a
            href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types">MDN
            reference</a>) e.g. application/zip for a SoftwareApplication
            binary, audio/mpeg for .mp3 etc.).<br/><br/>


            In cases where a <a class="localLink"
            href="http://schema.org/CreativeWork">CreativeWork</a> has several
            media type representations, <a class="localLink"
            href="http://schema.org/encoding">encoding</a> can be used to
            indicate each <a class="localLink"
            href="http://schema.org/MediaObject">MediaObject</a> alongside
            particular <a class="localLink"
            href="http://schema.org/encodingFormat">encodingFormat</a>
            information.<br/><br/>


            Unregistered or niche encoding and file formats can be indicated
            instead via the most appropriate URL, e.g. defining Web page or a
            Wikipedia/Wikidata entry.
          oneOf:
            - $ref: 'url.yaml#/URL'
            - type: string
        height:
          description: The height of the item.
          oneOf:
            - $ref: 'quantitativevalue.yaml#/QuantitativeValue'
            - $ref: 'distance.yaml#/Distance'
        playerType:
          description: 'Player type required&#x2014;for example, Flash or Silverlight.'
          type: string
        productionCompany:
          $ref: 'organization.yaml#/Organization'
          description: >-
            The production company or studio responsible for the item e.g.
            series, video game, episode etc.
        regionsAllowed:
          $ref: 'place.yaml#/Place'
          description: >-
            The regions where the media is allowed. If not specified, then it's
            assumed to be allowed everywhere. Specify the countries in <a
            href="http://en.wikipedia.org/wiki/ISO_3166">ISO 3166 format</a>.
        requiresSubscription:
          description: >-
            Indicates if use of the media require a subscription  (either paid
            or free). Allowed values are <code>true</code> or <code>false</code>
            (note that an earlier version had 'yes', 'no').
          oneOf:
            - description: MediaSubscription type is not published yet in schema.org.
              type: object
            - type: boolean
        uploadDate:
          description: Date when this media object was uploaded to this site.
          format: date
          type: string
        width:
          description: The width of the item.
          oneOf:
            - $ref: 'distance.yaml#/Distance'
            - $ref: 'quantitativevalue.yaml#/QuantitativeValue'
      type: object
  description: >-
    A media object, such as an image, video, or audio object embedded in a web
    page or a downloadable dataset i.e. DataDownload. Note that a creative work
    may have many media objects associated with it on the same web page. For
    example, a page about a single song (MusicRecording) may have a music video
    (VideoObject), and a high and low bandwidth audio stream (2 AudioObject's).
MedicalOrganization:
  allOf:
    - $ref: 'organization.yaml#/Organization'
    - properties:
        healthPlanNetworkId:
          description: >-
            Name or unique ID of network. (Networks are often reused across
            different insurance plans).
          type: string
        isAcceptingNewPatients:
          description: Whether the provider is accepting new patients.
          type: boolean
        medicalSpecialty:
          description: >-
            A medical specialty of the provider. Note: MedicalSpecialty type is
            not published yet in schema.org.
          type: object
      type: object
  description: >-
    A medical organization (physical or not), such as hospital, institution or
    clinic.
MeetingRoom:
  $ref: 'room.yaml#/Room'
  description: >-
    A meeting room, conference room, or conference hall is a room provided for
    singular events such as business conferences and meetings (Source:
    Wikipedia, the free encyclopedia, see <a
    href="http://en.wikipedia.org/wiki/Conference_hall">http://en.wikipedia.org/wiki/Conference_hall</a>).

    <br /><br />

    See also the <a href="/docs/hotels.html">dedicated document on the use of
    schema.org for marking up hotels and other forms of accommodations</a>.
MensClothingStore:
  $ref: 'store.yaml#/Store'
  description: A men's clothing store.
Menu:
  allOf:
    - $ref: 'creativework.yaml#/CreativeWork'
    - properties:
        hasMenuItem:
          $ref: 'menuitem.yaml#/MenuItem'
          description: A food or drink item contained in a menu or menu section.
        hasMenuSection:
          $ref: 'menusection.yaml#/MenuSection'
          description: >-
            A subgrouping of the menu (by dishes, course, serving time period,
            etc.).
      type: object
  description: >-
    A structured representation of food or drink items available from a
    FoodEstablishment.
MenuItem:
  allOf:
    - $ref: 'intangible.yaml#/Intangible'
    - properties:
        menuAddOn:
          description: >-
            Additional menu item(s) such as a side dish of salad or side order
            of fries that can be added to this menu item. Additionally it can be
            a menu section containing allowed add-on menu items for this menu
            item.
          oneOf:
            - $ref: 'menusection.yaml#/MenuSection'
            - $ref: 'menuitem.yaml#/MenuItem'
        nutrition:
          $ref: 'nutritioninformation.yaml#/NutritionInformation'
          description: Nutrition information about the recipe or menu item.
        offers:
          $ref: 'offer.yaml#/Offer'
          description: >-
            An offer to provide this item&#x2014;for example, an offer to sell a
            product, rent the DVD of a movie, perform a service, or give away
            tickets to an event.
        suitableForDiet:
          $ref: 'restricteddiet.yaml#/RestrictedDiet'
          description: >-
            Indicates a dietary restriction or guideline for which this recipe
            or menu item is suitable, e.g. diabetic, halal etc.
      type: object
  description: A food or drink item listed in a menu or menu section.
MenuSection:
  allOf:
    - $ref: 'creativework.yaml#/CreativeWork'
    - properties:
        hasMenuItem:
          $ref: 'menuitem.yaml#/MenuItem'
          description: A food or drink item contained in a menu or menu section.
        hasMenuSection:
          $ref: 'menusection.yaml#/MenuSection'
          description: >-
            A subgrouping of the menu (by dishes, course, serving time period,
            etc.).
      type: object
  description: >-
    A sub-grouping of food or drink items in a menu. E.g. courses (such as
    'Dinner', 'Breakfast', etc.), specific type of dishes (such as 'Meat',
    'Vegan', 'Drinks', etc.), or some other classification made by the menu
    provider.
Message:
  allOf:
    - $ref: 'creativework.yaml#/CreativeWork'
    - properties:
        bccRecipient:
          description: >-
            A sub property of recipient. The recipient blind copied on a
            message.
          oneOf:
            - $ref: 'person.yaml#/Person'
            - $ref: 'contactpoint.yaml#/ContactPoint'
            - $ref: 'organization.yaml#/Organization'
        ccRecipient:
          description: A sub property of recipient. The recipient copied on a message.
          oneOf:
            - $ref: 'organization.yaml#/Organization'
            - $ref: 'contactpoint.yaml#/ContactPoint'
            - $ref: 'person.yaml#/Person'
        dateRead:
          description: >-
            The date/time at which the message has been read by the recipient if
            a single recipient exists.
          format: date-time
          type: string
        dateReceived:
          description: The date/time the message was received if a single recipient exists.
          format: date-time
          type: string
        dateSent:
          description: The date/time at which the message was sent.
          format: date-time
          type: string
        messageAttachment:
          $ref: 'creativework.yaml#/CreativeWork'
          description: A CreativeWork attached to the message.
        recipient:
          description: >-
            A sub property of participant. The participant who is at the
            receiving end of the action.
          oneOf:
            - $ref: 'organization.yaml#/Organization'
            - $ref: 'audience.yaml#/Audience'
            - $ref: 'contactpoint.yaml#/ContactPoint'
            - $ref: 'person.yaml#/Person'
        sender:
          description: >-
            A sub property of participant. The participant who is at the sending
            end of the action.
          oneOf:
            - $ref: 'organization.yaml#/Organization'
            - $ref: 'audience.yaml#/Audience'
            - $ref: 'person.yaml#/Person'
        toRecipient:
          description: >-
            A sub property of recipient. The recipient who was directly sent the
            message.
          oneOf:
            - $ref: 'audience.yaml#/Audience'
            - $ref: 'person.yaml#/Person'
            - $ref: 'contactpoint.yaml#/ContactPoint'
            - $ref: 'organization.yaml#/Organization'
      type: object
  description: A single message from a sender to one or more organizations or people.
MiddleSchool:
  $ref: 'educationalorganization.yaml#/EducationalOrganization'
  description: >-
    A middle school (typically for children aged around 11-14, although this
    varies somewhat).
MobileApplication:
  allOf:
    - $ref: 'softwareapplication.yaml#/SoftwareApplication'
    - properties:
        carrierRequirements:
          description: >-
            Specifies specific carrier(s) requirements for the application (e.g.
            an application may only work on a specific carrier network).
          type: string
      type: object
  description: >-
    A software application designed specifically to work well on a mobile device
    such as a telephone.
MobilePhoneStore:
  $ref: 'store.yaml#/Store'
  description: A store that sells mobile phones and related accessories.
MonetaryAmount:
  allOf:
    - $ref: 'structuredvalue.yaml#/StructuredValue'
    - properties:
        currency:
          description:
            - >-
              The currency in which the monetary amount is expressed (in
              3-letter <a href="http://en.wikipedia.org/wiki/ISO_4217">ISO
              4217</a> format).
            - >-
              The currency in which the monetary amount is expressed.<br/><br/>


              Use standard formats: <a
              href="http://en.wikipedia.org/wiki/ISO_4217">ISO 4217 currency
              format</a> e.g. "USD"; <a
              href="https://en.wikipedia.org/wiki/List_of_cryptocurrencies">Ticker
              symbol</a> for cryptocurrencies e.g. "BTC"; well known names for
              <a
              href="https://en.wikipedia.org/wiki/Local_exchange_trading_system">Local
              Exchange Tradings Systems</a> (LETS) and other currency types e.g.
              "Ithaca HOUR".
          type: string
        maxValue:
          description: The upper value of some characteristic or property.
          type: number
        minValue:
          description: The lower value of some characteristic or property.
          type: number
        validFrom:
          description: The date when the item becomes valid.
          format: date-time
          type: string
        validThrough:
          description: >-
            The date after when the item is not valid. For example the end of an
            offer, salary period, or a period of opening hours.
          format: date-time
          type: string
        value:
          description: >
            The value of the quantitative value or property value
            node.<br/><br/>


            <ul>

            <li>For <a class="localLink"
            href="http://schema.org/QuantitativeValue">QuantitativeValue</a> and
            <a class="localLink"
            href="http://schema.org/MonetaryAmount">MonetaryAmount</a>, the
            recommended type for values is 'Number'.</li>

            <li>For <a class="localLink"
            href="http://schema.org/PropertyValue">PropertyValue</a>, it can be
            'Text;', 'Number', 'Boolean', or 'StructuredValue'.</li>

            </ul>
          oneOf:
            - type: number
            - type: string
            - $ref: 'structuredvalue.yaml#/StructuredValue'
            - type: boolean
      type: object
  description: >-
    A monetary value or range. This type can be used to describe an amount of
    money such as $50 USD, or a range as in describing a bank account being
    suitable for a balance between £1,000 and £1,000,000 GBP, or the value of a
    salary, etc. It is recommended to use <a class="localLink"
    href="http://schema.org/PriceSpecification">PriceSpecification</a> Types to
    describe the price of an Offer, Invoice, etc.
Mosque:
  $ref: 'placeofworship.yaml#/PlaceOfWorship'
  description: A mosque.
Motel:
  $ref: 'lodgingbusiness.yaml#/LodgingBusiness'
  description: >-
    A motel.

    <br /><br />

    See also the <a href="/docs/hotels.html">dedicated document on the use of
    schema.org for marking up hotels and other forms of accommodations</a>.
MotorcycleDealer:
  $ref: 'automotivebusiness.yaml#/AutomotiveBusiness'
  description: A motorcycle dealer.
MotorcycleRepair:
  $ref: 'automotivebusiness.yaml#/AutomotiveBusiness'
  description: A motorcycle repair shop.
Mountain:
  $ref: 'landform.yaml#/Landform'
  description: 'A mountain, like Mount Whitney or Mount Everest.'
MoveAction:
  allOf:
    - $ref: 'action.yaml#/Action'
    - properties:
        fromLocation:
          $ref: 'place.yaml#/Place'
          description: >-
            A sub property of location. The original location of the object or
            the agent before the action.
        toLocation:
          $ref: 'place.yaml#/Place'
          description: >-
            A sub property of location. The final location of the object or the
            agent after the action.
      type: object
  description: >
    The act of an agent relocating to a place.<br/><br/>


    Related actions:<br/><br/>


    <ul>

    <li><a class="localLink"
    href="http://schema.org/TransferAction">TransferAction</a>: Unlike
    TransferAction, the subject of the move is a living Person or Organization
    rather than an inanimate object.</li>

    </ul>
Movie:
  allOf:
    - $ref: 'creativework.yaml#/CreativeWork'
    - properties:
        actor:
          $ref: 'person.yaml#/Person'
          description: >-
            An actor, e.g. in tv, radio, movie, video games etc., or in an
            event. Actors can be associated with individual items or with a
            series, episode, clip.
        actors:
          $ref: 'person.yaml#/Person'
          description: >-
            An actor, e.g. in tv, radio, movie, video games etc. Actors can be
            associated with individual items or with a series, episode, clip.
        countryOfOrigin:
          $ref: 'country.yaml#/Country'
          description: >-
            The country of the principal offices of the production company or
            individual responsible for the movie or program.
        director:
          $ref: 'person.yaml#/Person'
          description: >-
            A director of e.g. tv, radio, movie, video gaming etc. content, or
            of an event. Directors can be associated with individual items or
            with a series, episode, clip.
        directors:
          $ref: 'person.yaml#/Person'
          description: >-
            A director of e.g. tv, radio, movie, video games etc. content.
            Directors can be associated with individual items or with a series,
            episode, clip.
        duration:
          $ref: 'duration.yaml#/Duration'
          description: >-
            The duration of the item (movie, audio recording, event, etc.) in <a
            href="http://en.wikipedia.org/wiki/ISO_8601">ISO 8601 date
            format</a>.
        musicBy:
          description: The composer of the soundtrack.
          oneOf:
            - $ref: 'musicgroup.yaml#/MusicGroup'
            - $ref: 'person.yaml#/Person'
        productionCompany:
          $ref: 'organization.yaml#/Organization'
          description: >-
            The production company or studio responsible for the item e.g.
            series, video game, episode etc.
        subtitleLanguage:
          description: >-
            Languages in which subtitles/captions are available, in <a
            href="http://tools.ietf.org/html/bcp47">IETF BCP 47 standard
            format</a>.
          oneOf:
            - type: string
            - $ref: 'language.yaml#/Language'
        trailer:
          $ref: 'videoobject.yaml#/VideoObject'
          description: 'The trailer of a movie or tv/radio series, season, episode, etc.'
      type: object
  description: A movie.
MovieClip:
  $ref: 'clip.yaml#/Clip'
  description: A short segment/part of a movie.
MovieRentalStore:
  $ref: 'store.yaml#/Store'
  description: A movie rental store.
MovieSeries:
  allOf:
    - $ref: 'creativeworkseries.yaml#/CreativeWorkSeries'
    - properties:
        actor:
          $ref: 'person.yaml#/Person'
          description: >-
            An actor, e.g. in tv, radio, movie, video games etc., or in an
            event. Actors can be associated with individual items or with a
            series, episode, clip.
        actors:
          $ref: 'person.yaml#/Person'
          description: >-
            An actor, e.g. in tv, radio, movie, video games etc. Actors can be
            associated with individual items or with a series, episode, clip.
        director:
          $ref: 'person.yaml#/Person'
          description: >-
            A director of e.g. tv, radio, movie, video gaming etc. content, or
            of an event. Directors can be associated with individual items or
            with a series, episode, clip.
        directors:
          $ref: 'person.yaml#/Person'
          description: >-
            A director of e.g. tv, radio, movie, video games etc. content.
            Directors can be associated with individual items or with a series,
            episode, clip.
        musicBy:
          description: The composer of the soundtrack.
          oneOf:
            - $ref: 'musicgroup.yaml#/MusicGroup'
            - $ref: 'person.yaml#/Person'
        productionCompany:
          $ref: 'organization.yaml#/Organization'
          description: >-
            The production company or studio responsible for the item e.g.
            series, video game, episode etc.
        trailer:
          $ref: 'videoobject.yaml#/VideoObject'
          description: 'The trailer of a movie or tv/radio series, season, episode, etc.'
      type: object
  description: >-
    A series of movies. Included movies can be indicated with the hasPart
    property.
MovieTheater:
  description: A movie theater.
  properties:
    screenCount:
      description: The number of screens in the movie theater.
      type: number
MovingCompany:
  $ref: 'homeandconstructionbusiness.yaml#/HomeAndConstructionBusiness'
  description: A moving company.
Museum:
  $ref: 'civicstructure.yaml#/CivicStructure'
  description: A museum.
MusicAlbum:
  allOf:
    - $ref: 'musicplaylist.yaml#/MusicPlaylist'
    - properties:
        albumProductionType:
          $ref: 'musicalbumproductiontype.yaml#/MusicAlbumProductionType'
          description: >-
            Classification of the album by it's type of content: soundtrack,
            live album, studio album, etc.
        albumRelease:
          $ref: 'musicrelease.yaml#/MusicRelease'
          description: A release of this album.
        albumReleaseType:
          $ref: 'musicalbumreleasetype.yaml#/MusicAlbumReleaseType'
          description: 'The kind of release which this album is: single, EP or album.'
        byArtist:
          $ref: 'musicgroup.yaml#/MusicGroup'
          description: The artist that performed this album or recording.
      type: object
  description: A collection of music tracks.
MusicAlbumProductionType:
  $ref: 'enumeration.yaml#/Enumeration'
  description: >-
    Classification of the album by it's type of content: soundtrack, live album,
    studio album, etc.
MusicAlbumReleaseType:
  $ref: 'enumeration.yaml#/Enumeration'
  description: 'The kind of release which this album is: single, EP or album.'
MusicComposition:
  allOf:
    - $ref: 'creativework.yaml#/CreativeWork'
    - properties:
        composer:
          description: >-
            The person or organization who wrote a composition, or who is the
            composer of a work performed at some event.
          oneOf:
            - $ref: 'organization.yaml#/Organization'
            - $ref: 'person.yaml#/Person'
        firstPerformance:
          $ref: 'event.yaml#/Event'
          description: The date and place the work was first performed.
        includedComposition:
          $ref: 'musiccomposition.yaml#/MusicComposition'
          description: >-
            Smaller compositions included in this work (e.g. a movement in a
            symphony).
        iswcCode:
          description: The International Standard Musical Work Code for the composition.
          type: string
        lyricist:
          $ref: 'person.yaml#/Person'
          description: The person who wrote the words.
        lyrics:
          $ref: 'creativework.yaml#/CreativeWork'
          description: The words in the song.
        musicArrangement:
          $ref: 'musiccomposition.yaml#/MusicComposition'
          description: An arrangement derived from the composition.
        musicCompositionForm:
          description: 'The type of composition (e.g. overture, sonata, symphony, etc.).'
          type: string
        musicalKey:
          description: 'The key, mode, or scale this composition uses.'
          type: string
        recordedAs:
          $ref: 'musicrecording.yaml#/MusicRecording'
          description: An audio recording of the work.
      type: object
  description: A musical composition.
MusicEvent:
  $ref: 'event.yaml#/Event'
  description: 'Event type: Music event.'
MusicGroup:
  allOf:
    - $ref: 'performinggroup.yaml#/PerformingGroup'
    - properties:
        album:
          $ref: 'musicalbum.yaml#/MusicAlbum'
          description: A music album.
        albums:
          $ref: 'musicalbum.yaml#/MusicAlbum'
          description: A collection of music albums.
        genre:
          description: 'Genre of the creative work, broadcast channel or group.'
          oneOf:
            - $ref: 'url.yaml#/URL'
            - type: string
        musicGroupMember:
          $ref: 'person.yaml#/Person'
          description: >-
            A member of a music group&#x2014;for example, John, Paul, George, or
            Ringo.
        track:
          description: >-
            A music recording (track)&#x2014;usually a single song. If an
            ItemList is given, the list should contain items of type
            MusicRecording.
          oneOf:
            - $ref: 'itemlist.yaml#/ItemList'
            - $ref: 'musicrecording.yaml#/MusicRecording'
        tracks:
          $ref: 'musicrecording.yaml#/MusicRecording'
          description: 'A music recording (track)&#x2014;usually a single song.'
      type: object
  description: >-
    A musical group, such as a band, an orchestra, or a choir. Can also be a
    solo musician.
MusicPlaylist:
  allOf:
    - $ref: 'creativework.yaml#/CreativeWork'
    - properties:
        numTracks:
          description: The number of tracks in this album or playlist.
          type: integer
        track:
          description: >-
            A music recording (track)&#x2014;usually a single song. If an
            ItemList is given, the list should contain items of type
            MusicRecording.
          oneOf:
            - $ref: 'musicrecording.yaml#/MusicRecording'
            - $ref: 'itemlist.yaml#/ItemList'
        tracks:
          $ref: 'musicrecording.yaml#/MusicRecording'
          description: 'A music recording (track)&#x2014;usually a single song.'
      type: object
  description: A collection of music tracks in playlist form.
MusicRecording:
  allOf:
    - $ref: 'creativework.yaml#/CreativeWork'
    - properties:
        byArtist:
          $ref: 'musicgroup.yaml#/MusicGroup'
          description: The artist that performed this album or recording.
        duration:
          $ref: 'duration.yaml#/Duration'
          description: >-
            The duration of the item (movie, audio recording, event, etc.) in <a
            href="http://en.wikipedia.org/wiki/ISO_8601">ISO 8601 date
            format</a>.
        inAlbum:
          $ref: 'musicalbum.yaml#/MusicAlbum'
          description: The album to which this recording belongs.
        inPlaylist:
          $ref: 'musicplaylist.yaml#/MusicPlaylist'
          description: The playlist to which this recording belongs.
        isrcCode:
          description: The International Standard Recording Code for the recording.
          type: string
        recordingOf:
          $ref: 'musiccomposition.yaml#/MusicComposition'
          description: The composition this track is a recording of.
      type: object
  description: 'A music recording (track), usually a single song.'
MusicRelease:
  allOf:
    - $ref: 'musicplaylist.yaml#/MusicPlaylist'
    - properties:
        catalogNumber:
          description: The catalog number for the release.
          type: string
        creditedTo:
          description: >-
            The group the release is credited to if different than the byArtist.
            For example, Red and Blue is credited to "Stefani Germanotta Band",
            but by Lady Gaga.
          oneOf:
            - $ref: 'person.yaml#/Person'
            - $ref: 'organization.yaml#/Organization'
        duration:
          $ref: 'duration.yaml#/Duration'
          description: >-
            The duration of the item (movie, audio recording, event, etc.) in <a
            href="http://en.wikipedia.org/wiki/ISO_8601">ISO 8601 date
            format</a>.
        musicReleaseFormat:
          $ref: 'musicreleaseformattype.yaml#/MusicReleaseFormatType'
          description: >-
            Format of this release (the type of recording media used, ie.
            compact disc, digital media, LP, etc.).
        recordLabel:
          $ref: 'organization.yaml#/Organization'
          description: The label that issued the release.
        releaseOf:
          $ref: 'musicalbum.yaml#/MusicAlbum'
          description: The album this is a release of.
      type: object
  description: A MusicRelease is a specific release of a music album.
MusicReleaseFormatType:
  $ref: 'enumeration.yaml#/Enumeration'
  description: >-
    Format of this release (the type of recording media used, ie. compact disc,
    digital media, LP, etc.).
MusicStore:
  $ref: 'store.yaml#/Store'
  description: A music store.
MusicVenue:
  $ref: 'civicstructure.yaml#/CivicStructure'
  description: A music venue.
MusicVideoObject:
  $ref: 'mediaobject.yaml#/MediaObject'
  description: A music video file.
NailSalon:
  $ref: 'healthandbeautybusiness.yaml#/HealthAndBeautyBusiness'
  description: A nail salon.
NewsArticle:
  allOf:
    - $ref: 'article.yaml#/Article'
    - properties:
        dateline:
          description: >-
            A <a href="https://en.wikipedia.org/wiki/Dateline">dateline</a> is a
            brief piece of text included in news articles that describes where
            and when the story was written or filed though the date is often
            omitted. Sometimes only a placename is provided.<br/><br/>


            Structured representations of dateline-related information can also
            be expressed more explicitly using <a class="localLink"
            href="http://schema.org/locationCreated">locationCreated</a> (which
            represents where a work was created e.g. where a news report was
            written).  For location depicted or described in the content, use <a
            class="localLink"
            href="http://schema.org/contentLocation">contentLocation</a>.<br/><br/>


            Dateline summaries are oriented more towards human readers than
            towards automated processing, and can vary substantially. Some
            examples: "BEIRUT, Lebanon, June 2.", "Paris, France", "December 19,
            2017 11:43AM Reporting from Washington", "Beijing/Moscow", "QUEZON
            CITY, Philippines".
          type: string
        printColumn:
          description: >-
            The number of the column in which the NewsArticle appears in the
            print edition.
          type: string
        printEdition:
          description: The edition of the print product in which the NewsArticle appears.
          type: string
        printPage:
          description: >-
            If this NewsArticle appears in print, this field indicates the name
            of the page on which the article is found. Please note that this
            field is intended for the exact page name (e.g. A5, B18).
          type: string
        printSection:
          description: >-
            If this NewsArticle appears in print, this field indicates the print
            section in which the article appeared.
          type: string
      type: object
  description: >-
    A NewsArticle is an article whose content reports news, or provides
    background context and supporting materials for understanding the
    news.<br/><br/>


    A more detailed overview of <a href="/docs/news.html">schema.org News
    markup</a> is also available.
NGO:
  $ref: 'organization.yaml#/Organization'
  description: 'Organization: Non-governmental Organization.'
NightClub:
  $ref: 'entertainmentbusiness.yaml#/EntertainmentBusiness'
  description: A nightclub or discotheque.
Notary:
  $ref: 'legalservice.yaml#/LegalService'
  description: A notary.
NoteDigitalDocument:
  $ref: 'digitaldocument.yaml#/DigitalDocument'
  description: 'A file containing a note, primarily for the author.'
NutritionInformation:
  allOf:
    - $ref: 'structuredvalue.yaml#/StructuredValue'
    - properties:
        calories:
          $ref: 'energy.yaml#/Energy'
          description: The number of calories.
        carbohydrateContent:
          $ref: 'mass.yaml#/Mass'
          description: The number of grams of carbohydrates.
        cholesterolContent:
          $ref: 'mass.yaml#/Mass'
          description: The number of milligrams of cholesterol.
        fatContent:
          $ref: 'mass.yaml#/Mass'
          description: The number of grams of fat.
        fiberContent:
          $ref: 'mass.yaml#/Mass'
          description: The number of grams of fiber.
        proteinContent:
          $ref: 'mass.yaml#/Mass'
          description: The number of grams of protein.
        saturatedFatContent:
          $ref: 'mass.yaml#/Mass'
          description: The number of grams of saturated fat.
        servingSize:
          description: 'The serving size, in terms of the number of volume or mass.'
          type: string
        sodiumContent:
          $ref: 'mass.yaml#/Mass'
          description: The number of milligrams of sodium.
        sugarContent:
          $ref: 'mass.yaml#/Mass'
          description: The number of grams of sugar.
        transFatContent:
          $ref: 'mass.yaml#/Mass'
          description: The number of grams of trans fat.
        unsaturatedFatContent:
          $ref: 'mass.yaml#/Mass'
          description: The number of grams of unsaturated fat.
      type: object
  description: Nutritional information about the recipe.
OceanBodyOfWater:
  $ref: 'bodyofwater.yaml#/BodyOfWater'
  description: 'An ocean (for example, the Pacific).'
Offer:
  allOf:
    - $ref: 'intangible.yaml#/Intangible'
    - properties:
        acceptedPaymentMethod:
          description: The payment method(s) accepted by seller for this offer.
          oneOf:
            - $ref: 'paymentmethod.yaml#/PaymentMethod'
            - $ref: 'loanorcredit.yaml#/LoanOrCredit'
        addOn:
          $ref: 'offer.yaml#/Offer'
          description: >-
            An additional offer that can only be obtained in combination with
            the first base offer (e.g. supplements and extensions that are
            available for a surcharge).
        advanceBookingRequirement:
          $ref: 'quantitativevalue.yaml#/QuantitativeValue'
          description: >-
            The amount of time that is required between accepting the offer and
            the actual usage of the resource or service.
        aggregateRating:
          $ref: 'aggregaterating.yaml#/AggregateRating'
          description: >-
            The overall rating, based on a collection of reviews or ratings, of
            the item.
        areaServed:
          description: The geographic area where a service or offered item is provided.
          oneOf:
            - $ref: 'place.yaml#/Place'
            - $ref: 'geoshape.yaml#/GeoShape'
            - $ref: 'administrativearea.yaml#/AdministrativeArea'
            - type: string
        availability:
          $ref: 'itemavailability.yaml#/ItemAvailability'
          description: >-
            The availability of this item&#x2014;for example In stock, Out of
            stock, Pre-order, etc.
        availabilityEnds:
          description: >-
            The end of the availability of the product or service included in
            the offer.
          format: date-time
          type: string
        availabilityStarts:
          description: >-
            The beginning of the availability of the product or service included
            in the offer.
          format: date-time
          type: string
        availableAtOrFrom:
          $ref: 'place.yaml#/Place'
          description: >-
            The place(s) from which the offer can be obtained (e.g. store
            locations).
        availableDeliveryMethod:
          $ref: 'deliverymethod.yaml#/DeliveryMethod'
          description: The delivery method(s) available for this offer.
        businessFunction:
          $ref: 'businessfunction.yaml#/BusinessFunction'
          description: >-
            The business function (e.g. sell, lease, repair, dispose) of the
            offer or component of a bundle (TypeAndQuantityNode). The default is
            http://purl.org/goodrelations/v1#Sell.
        category:
          description: >-
            A category for the item. Greater signs or slashes can be used to
            informally indicate a category hierarchy.
          oneOf:
            - description: >-
                PhysicalActivityCategory type is not published yet in
                schema.org.
              type: object
            - type: string
            - $ref: 'thing.yaml#/Thing'
        deliveryLeadTime:
          $ref: 'quantitativevalue.yaml#/QuantitativeValue'
          description: >-
            The typical delay between the receipt of the order and the goods
            either leaving the warehouse or being prepared for pickup, in case
            the delivery method is on site pickup.
        eligibleCustomerType:
          $ref: 'businessentitytype.yaml#/BusinessEntityType'
          description: The type(s) of customers for which the given offer is valid.
        eligibleDuration:
          $ref: 'quantitativevalue.yaml#/QuantitativeValue'
          description: The duration for which the given offer is valid.
        eligibleQuantity:
          $ref: 'quantitativevalue.yaml#/QuantitativeValue'
          description: >-
            The interval and unit of measurement of ordering quantities for
            which the offer or price specification is valid. This allows e.g.
            specifying that a certain freight charge is valid only for a certain
            quantity.
        eligibleRegion:
          description: >-
            The ISO 3166-1 (ISO 3166-1 alpha-2) or ISO 3166-2 code, the place,
            or the GeoShape for the geo-political region(s) for which the offer
            or delivery charge specification is valid.<br/><br/>


            See also <a class="localLink"
            href="http://schema.org/ineligibleRegion">ineligibleRegion</a>.
          oneOf:
            - type: string
            - $ref: 'place.yaml#/Place'
            - $ref: 'geoshape.yaml#/GeoShape'
        eligibleTransactionVolume:
          $ref: 'pricespecification.yaml#/PriceSpecification'
          description: >-
            The transaction volume, in a monetary unit, for which the offer or
            price specification is valid, e.g. for indicating a minimal
            purchasing volume, to express free shipping above a certain order
            volume, or to limit the acceptance of credit cards to purchases to a
            certain minimal amount.
        gtin12:
          description: >-
            The GTIN-12 code of the product, or the product to which the offer
            refers. The GTIN-12 is the 12-digit GS1 Identification Key composed
            of a U.P.C. Company Prefix, Item Reference, and Check Digit used to
            identify trade items. See <a
            href="http://www.gs1.org/barcodes/technical/idkeys/gtin">GS1 GTIN
            Summary</a> for more details.
          type: string
        gtin13:
          description: >-
            The GTIN-13 code of the product, or the product to which the offer
            refers. This is equivalent to 13-digit ISBN codes and EAN UCC-13.
            Former 12-digit UPC codes can be converted into a GTIN-13 code by
            simply adding a preceeding zero. See <a
            href="http://www.gs1.org/barcodes/technical/idkeys/gtin">GS1 GTIN
            Summary</a> for more details.
          type: string
        gtin14:
          description: >-
            The GTIN-14 code of the product, or the product to which the offer
            refers. See <a
            href="http://www.gs1.org/barcodes/technical/idkeys/gtin">GS1 GTIN
            Summary</a> for more details.
          type: string
        gtin8:
          description: >-
            The <a
            href="http://apps.gs1.org/GDD/glossary/Pages/GTIN-8.aspx">GTIN-8</a>
            code of the product, or the product to which the offer refers. This
            code is also known as EAN/UCC-8 or 8-digit EAN. See <a
            href="http://www.gs1.org/barcodes/technical/idkeys/gtin">GS1 GTIN
            Summary</a> for more details.
          type: string
        includesObject:
          $ref: 'typeandquantitynode.yaml#/TypeAndQuantityNode'
          description: >-
            This links to a node or nodes indicating the exact quantity of the
            products included in the offer.
        ineligibleRegion:
          description: >-
            The ISO 3166-1 (ISO 3166-1 alpha-2) or ISO 3166-2 code, the place,
            or the GeoShape for the geo-political region(s) for which the offer
            or delivery charge specification is not valid, e.g. a region where
            the transaction is not allowed.<br/><br/>


            See also <a class="localLink"
            href="http://schema.org/eligibleRegion">eligibleRegion</a>.
          oneOf:
            - type: string
            - $ref: 'geoshape.yaml#/GeoShape'
            - $ref: 'place.yaml#/Place'
        inventoryLevel:
          $ref: 'quantitativevalue.yaml#/QuantitativeValue'
          description: The current approximate inventory level for the item or items.
        itemCondition:
          $ref: 'offeritemcondition.yaml#/OfferItemCondition'
          description: >-
            A predefined value from OfferItemCondition or a textual description
            of the condition of the product or service, or the products or
            services included in the offer.
        itemOffered:
          description: The item being offered.
          oneOf:
            - $ref: 'product.yaml#/Product'
            - $ref: 'service.yaml#/Service'
        mpn:
          description: >-
            The Manufacturer Part Number (MPN) of the product, or the product to
            which the offer refers.
          type: string
        offeredBy:
          description: A pointer to the organization or person making the offer.
          oneOf:
            - $ref: 'organization.yaml#/Organization'
            - $ref: 'person.yaml#/Person'
        price:
          description: >
            The offer price of a product, or of a price component when attached
            to PriceSpecification and its subtypes.<br/><br/>


            Usage guidelines:<br/><br/>


            <ul>

            <li>Use the <a class="localLink"
            href="http://schema.org/priceCurrency">priceCurrency</a> property
            (with standard formats: <a
            href="http://en.wikipedia.org/wiki/ISO_4217">ISO 4217 currency
            format</a> e.g. "USD"; <a
            href="https://en.wikipedia.org/wiki/List_of_cryptocurrencies">Ticker
            symbol</a> for cryptocurrencies e.g. "BTC"; well known names for <a
            href="https://en.wikipedia.org/wiki/Local_exchange_trading_system">Local
            Exchange Tradings Systems</a> (LETS) and other currency types e.g.
            "Ithaca HOUR") instead of including <a
            href="http://en.wikipedia.org/wiki/Dollar_sign#Currencies_that_use_the_dollar_or_peso_sign">ambiguous
            symbols</a> such as '$' in the value.</li>

            <li>Use '.' (Unicode 'FULL STOP' (U+002E)) rather than ',' to
            indicate a decimal point. Avoid using these symbols as a readability
            separator.</li>

            <li>Note that both <a
            href="http://www.w3.org/TR/xhtml-rdfa-primer/#using-the-content-attribute">RDFa</a>
            and Microdata syntax allow the use of a "content=" attribute for
            publishing simple machine-readable values alongside more
            human-friendly formatting.</li>

            <li>Use values from 0123456789 (Unicode 'DIGIT ZERO' (U+0030) to
            'DIGIT NINE' (U+0039)) rather than superficially similiar Unicode
            symbols.</li>

            </ul>
          oneOf:
            - type: string
            - type: number
        priceCurrency:
          description: >-
            The currency of the price, or a price component when attached to <a
            class="localLink"
            href="http://schema.org/PriceSpecification">PriceSpecification</a>
            and its subtypes.<br/><br/>


            Use standard formats: <a
            href="http://en.wikipedia.org/wiki/ISO_4217">ISO 4217 currency
            format</a> e.g. "USD"; <a
            href="https://en.wikipedia.org/wiki/List_of_cryptocurrencies">Ticker
            symbol</a> for cryptocurrencies e.g. "BTC"; well known names for <a
            href="https://en.wikipedia.org/wiki/Local_exchange_trading_system">Local
            Exchange Tradings Systems</a> (LETS) and other currency types e.g.
            "Ithaca HOUR".
          type: string
        priceSpecification:
          $ref: 'pricespecification.yaml#/PriceSpecification'
          description: >-
            One or more detailed price specifications, indicating the unit price
            and delivery or payment charges.
        priceValidUntil:
          description: The date after which the price is no longer available.
          format: date
          type: string
        review:
          $ref: 'review.yaml#/Review'
          description: A review of the item.
        reviews:
          $ref: 'review.yaml#/Review'
          description: Review of the item.
        seller:
          description: >-
            An entity which offers (sells / leases / lends / loans) the services
            / goods.  A seller may also be a provider.
          oneOf:
            - $ref: 'person.yaml#/Person'
            - $ref: 'organization.yaml#/Organization'
        serialNumber:
          description: >-
            The serial number or any alphanumeric identifier of a particular
            product. When attached to an offer, it is a shortcut for the serial
            number of the product included in the offer.
          type: string
        sku:
          description: >-
            The Stock Keeping Unit (SKU), i.e. a merchant-specific identifier
            for a product or service, or the product to which the offer refers.
          type: string
        validFrom:
          description: The date when the item becomes valid.
          format: date-time
          type: string
        validThrough:
          description: >-
            The date after when the item is not valid. For example the end of an
            offer, salary period, or a period of opening hours.
          format: date-time
          type: string
        warranty:
          $ref: 'warrantypromise.yaml#/WarrantyPromise'
          description: The warranty promise(s) included in the offer.
      type: object
  description: >-
    An offer to transfer some rights to an item or to provide a service — for
    example, an offer to sell tickets to an event, to rent the DVD of a movie,
    to stream a TV show over the internet, to repair a motorcycle, or to loan a
    book.<br/><br/>


    For <a
    href="http://www.gs1.org/barcodes/technical/idkeys/gtin">GTIN</a>-related
    fields, see <a
    href="http://www.gs1.org/barcodes/support/check_digit_calculator">Check
    Digit calculator</a> and <a
    href="http://www.gs1us.org/resources/standards/gtin-validation-guide">validation
    guide</a> from <a href="http://www.gs1.org/">GS1</a>.
OfferCatalog:
  $ref: 'itemlist.yaml#/ItemList'
  description: >-
    An OfferCatalog is an ItemList that contains related Offers and/or further
    OfferCatalogs that are offeredBy the same provider.
OfferItemCondition:
  $ref: 'enumeration.yaml#/Enumeration'
  description: A list of possible conditions for the item.
OfficeEquipmentStore:
  $ref: 'store.yaml#/Store'
  description: An office equipment store.
OnDemandEvent:
  $ref: 'publicationevent.yaml#/PublicationEvent'
  description: >-
    A publication event e.g. catch-up TV or radio podcast, during which a
    program is available on-demand.
OpeningHoursSpecification:
  allOf:
    - $ref: 'structuredvalue.yaml#/StructuredValue'
    - properties:
        closes:
          description: >-
            The closing hour of the place or service on the given day(s) of the
            week. Note: Time type is not published yet in schema.org.
          type: object
        dayOfWeek:
          $ref: 'dayofweek.yaml#/DayOfWeek'
          description: The day of the week for which these opening hours are valid.
        opens:
          description: >-
            The opening hour of the place or service on the given day(s) of the
            week. Note: Time type is not published yet in schema.org.
          type: object
        validFrom:
          description: The date when the item becomes valid.
          format: date-time
          type: string
        validThrough:
          description: >-
            The date after when the item is not valid. For example the end of an
            offer, salary period, or a period of opening hours.
          format: date-time
          type: string
      type: object
  description: >-
    A structured value providing information about the opening hours of a place
    or a certain service inside a place.<br/><br/>


    The place is <strong>open</strong> if the <a class="localLink"
    href="http://schema.org/opens">opens</a> property is specified, and
    <strong>closed</strong> otherwise.<br/><br/>


    If the value for the <a class="localLink"
    href="http://schema.org/closes">closes</a> property is less than the value
    for the <a class="localLink" href="http://schema.org/opens">opens</a>
    property then the hour range is assumed to span over the next day.
Order:
  allOf:
    - $ref: 'intangible.yaml#/Intangible'
    - properties:
        acceptedOffer:
          $ref: 'offer.yaml#/Offer'
          description: >-
            The offer(s) -- e.g., product, quantity and price combinations --
            included in the order.
        billingAddress:
          $ref: 'postaladdress.yaml#/PostalAddress'
          description: The billing address for the order.
        broker:
          description: >-
            An entity that arranges for an exchange between a buyer and a
            seller.  In most cases a broker never acquires or releases ownership
            of a product or service involved in an exchange.  If it is not clear
            whether an entity is a broker, seller, or buyer, the latter two
            terms are preferred.
          oneOf:
            - $ref: 'person.yaml#/Person'
            - $ref: 'organization.yaml#/Organization'
        confirmationNumber:
          description: A number that confirms the given order or payment has been received.
          type: string
        customer:
          description: Party placing the order or paying the invoice.
          oneOf:
            - $ref: 'person.yaml#/Person'
            - $ref: 'organization.yaml#/Organization'
        discount:
          description: Any discount applied (to an Order).
          oneOf:
            - type: number
            - type: string
        discountCode:
          description: Code used to redeem a discount.
          type: string
        discountCurrency:
          description: >-
            The currency of the discount.<br/><br/>


            Use standard formats: <a
            href="http://en.wikipedia.org/wiki/ISO_4217">ISO 4217 currency
            format</a> e.g. "USD"; <a
            href="https://en.wikipedia.org/wiki/List_of_cryptocurrencies">Ticker
            symbol</a> for cryptocurrencies e.g. "BTC"; well known names for <a
            href="https://en.wikipedia.org/wiki/Local_exchange_trading_system">Local
            Exchange Tradings Systems</a> (LETS) and other currency types e.g.
            "Ithaca HOUR".
          type: string
        isGift:
          description: Was the offer accepted as a gift for someone other than the buyer.
          type: boolean
        merchant:
          description: '''merchant'' is an out-dated term for ''seller''.'
          oneOf:
            - $ref: 'person.yaml#/Person'
            - $ref: 'organization.yaml#/Organization'
        orderDate:
          description: Date order was placed.
          format: date-time
          type: string
        orderDelivery:
          $ref: 'parceldelivery.yaml#/ParcelDelivery'
          description: The delivery of the parcel related to this order or order item.
        orderNumber:
          description: The identifier of the transaction.
          type: string
        orderStatus:
          $ref: 'orderstatus.yaml#/OrderStatus'
          description: The current status of the order.
        orderedItem:
          description: The item ordered.
          oneOf:
            - $ref: 'product.yaml#/Product'
            - $ref: 'orderitem.yaml#/OrderItem'
        partOfInvoice:
          $ref: 'invoice.yaml#/Invoice'
          description: The order is being paid as part of the referenced Invoice.
        paymentDue:
          description: The date that payment is due.
          format: date-time
          type: string
        paymentDueDate:
          description: The date that payment is due.
          format: date-time
          type: string
        paymentMethod:
          $ref: 'paymentmethod.yaml#/PaymentMethod'
          description: >-
            The name of the credit card or other method of payment for the
            order.
        paymentMethodId:
          description: >-
            An identifier for the method of payment used (e.g. the last 4 digits
            of the credit card).
          type: string
        paymentUrl:
          $ref: 'url.yaml#/URL'
          description: The URL for sending a payment.
        seller:
          description: >-
            An entity which offers (sells / leases / lends / loans) the services
            / goods.  A seller may also be a provider.
          oneOf:
            - $ref: 'person.yaml#/Person'
            - $ref: 'organization.yaml#/Organization'
      type: object
  description: >-
    An order is a confirmation of a transaction (a receipt), which can contain
    multiple line items, each represented by an Offer that has been accepted by
    the customer.
OrderAction:
  allOf:
    - $ref: 'tradeaction.yaml#/TradeAction'
    - properties:
        deliveryMethod:
          $ref: 'deliverymethod.yaml#/DeliveryMethod'
          description: A sub property of instrument. The method of delivery.
      type: object
  description: An agent orders an object/product/service to be delivered/sent.
OrderItem:
  allOf:
    - $ref: 'intangible.yaml#/Intangible'
    - properties:
        orderDelivery:
          $ref: 'parceldelivery.yaml#/ParcelDelivery'
          description: The delivery of the parcel related to this order or order item.
        orderItemNumber:
          description: The identifier of the order item.
          type: string
        orderItemStatus:
          $ref: 'orderstatus.yaml#/OrderStatus'
          description: The current status of the order item.
        orderQuantity:
          description: >-
            The number of the item ordered. If the property is not set, assume
            the quantity is one.
          type: number
        orderedItem:
          description: The item ordered.
          oneOf:
            - $ref: 'orderitem.yaml#/OrderItem'
            - $ref: 'product.yaml#/Product'
      type: object
  description: >-
    An order item is a line of an order. It includes the quantity and shipping
    details of a bought offer.
OrderStatus:
  $ref: 'enumeration.yaml#/Enumeration'
  description: Enumerated status values for Order.
Organization:
  allOf:
    - $ref: 'thing.yaml#/Thing'
    - properties:
        actionableFeedbackPolicy:
          description: >-
            For a <a class="localLink"
            href="http://schema.org/NewsMediaOrganization">NewsMediaOrganization</a>
            or other news-related <a class="localLink"
            href="http://schema.org/Organization">Organization</a>, a statement
            about public engagement activities (for news media, the newsroom’s),
            including involving the public - digitally or otherwise -- in
            coverage decisions, reporting and activities after publication.
          oneOf:
            - $ref: 'url.yaml#/URL'
            - $ref: 'creativework.yaml#/CreativeWork'
        address:
          description: Physical address of the item.
          oneOf:
            - type: string
            - $ref: 'postaladdress.yaml#/PostalAddress'
        aggregateRating:
          $ref: 'aggregaterating.yaml#/AggregateRating'
          description: >-
            The overall rating, based on a collection of reviews or ratings, of
            the item.
        alumni:
          $ref: 'person.yaml#/Person'
          description: Alumni of an organization.
        areaServed:
          description: The geographic area where a service or offered item is provided.
          oneOf:
            - $ref: 'administrativearea.yaml#/AdministrativeArea'
            - $ref: 'geoshape.yaml#/GeoShape'
            - $ref: 'place.yaml#/Place'
            - type: string
        award:
          description: An award won by or for this item.
          type: string
        awards:
          description: Awards won by or for this item.
          type: string
        brand:
          description: >-
            The brand(s) associated with a product or service, or the brand(s)
            maintained by an organization or business person.
          oneOf:
            - $ref: 'organization.yaml#/Organization'
            - $ref: 'brand.yaml#/Brand'
        contactPoint:
          $ref: 'contactpoint.yaml#/ContactPoint'
          description: A contact point for a person or organization.
        contactPoints:
          $ref: 'contactpoint.yaml#/ContactPoint'
          description: A contact point for a person or organization.
        correctionsPolicy:
          description: >-
            For an <a class="localLink"
            href="http://schema.org/Organization">Organization</a> (e.g. <a
            class="localLink"
            href="http://schema.org/NewsMediaOrganization">NewsMediaOrganization</a>),
            a statement describing (in news media, the newsroom’s) disclosure
            and correction policy for errors.
          oneOf:
            - $ref: 'creativework.yaml#/CreativeWork'
            - $ref: 'url.yaml#/URL'
        department:
          $ref: 'organization.yaml#/Organization'
          description: >-
            A relationship between an organization and a department of that
            organization, also described as an organization (allowing different
            urls, logos, opening hours). For example: a store with a pharmacy,
            or a bakery with a cafe.
        dissolutionDate:
          description: The date that this organization was dissolved.
          format: date
          type: string
        diversityPolicy:
          description: >-
            Statement on diversity policy by an <a class="localLink"
            href="http://schema.org/Organization">Organization</a> e.g. a <a
            class="localLink"
            href="http://schema.org/NewsMediaOrganization">NewsMediaOrganization</a>.
            For a <a class="localLink"
            href="http://schema.org/NewsMediaOrganization">NewsMediaOrganization</a>,
            a statement describing the newsroom’s diversity policy on both
            staffing and sources, typically providing staffing data.
          oneOf:
            - $ref: 'url.yaml#/URL'
            - $ref: 'creativework.yaml#/CreativeWork'
        diversityStaffingReport:
          description: >-
            For an <a class="localLink"
            href="http://schema.org/Organization">Organization</a> (often but
            not necessarily a <a class="localLink"
            href="http://schema.org/NewsMediaOrganization">NewsMediaOrganization</a>),
            a report on staffing diversity issues. In a news context this might
            be for example ASNE or RTDNA (US) reports, or self-reported.
          oneOf:
            - $ref: 'url.yaml#/URL'
            - $ref: 'article.yaml#/Article'
        duns:
          description: >-
            The Dun &amp; Bradstreet DUNS number for identifying an organization
            or business person.
          type: string
        email:
          description: Email address.
          type: string
        employee:
          $ref: 'person.yaml#/Person'
          description: Someone working for this organization.
        employees:
          $ref: 'person.yaml#/Person'
          description: People working for this organization.
        ethicsPolicy:
          description: >-
            Statement about ethics policy, e.g. of a <a class="localLink"
            href="http://schema.org/NewsMediaOrganization">NewsMediaOrganization</a>
            regarding journalistic and publishing practices, or of a <a
            class="localLink"
            href="http://schema.org/Restaurant">Restaurant</a>, a page
            describing food source policies. In the case of a <a
            class="localLink"
            href="http://schema.org/NewsMediaOrganization">NewsMediaOrganization</a>,
            an ethicsPolicy is typically a statement describing the personal,
            organizational, and corporate standards of behavior expected by the
            organization.
          oneOf:
            - $ref: 'creativework.yaml#/CreativeWork'
            - $ref: 'url.yaml#/URL'
        event:
          $ref: 'event.yaml#/Event'
          description: >-
            Upcoming or past event associated with this place, organization, or
            action.
        events:
          $ref: 'event.yaml#/Event'
          description: Upcoming or past events associated with this place or organization.
        faxNumber:
          description: The fax number.
          type: string
        founder:
          $ref: 'person.yaml#/Person'
          description: A person who founded this organization.
        founders:
          $ref: 'person.yaml#/Person'
          description: A person who founded this organization.
        foundingDate:
          description: The date that this organization was founded.
          format: date
          type: string
        foundingLocation:
          $ref: 'place.yaml#/Place'
          description: The place where the Organization was founded.
        funder:
          description: >-
            A person or organization that supports (sponsors) something through
            some kind of financial contribution.
          oneOf:
            - $ref: 'person.yaml#/Person'
            - $ref: 'organization.yaml#/Organization'
        globalLocationNumber:
          description: >-
            The <a href="http://www.gs1.org/gln">Global Location Number</a>
            (GLN, sometimes also referred to as International Location Number or
            ILN) of the respective organization, person, or place. The GLN is a
            13-digit number used to identify parties and physical locations.
          type: string
        hasOfferCatalog:
          $ref: 'offercatalog.yaml#/OfferCatalog'
          description: >-
            Indicates an OfferCatalog listing for this Organization, Person, or
            Service.
        hasPOS:
          $ref: 'place.yaml#/Place'
          description: Points-of-Sales operated by the organization or person.
        isicV4:
          description: >-
            The International Standard of Industrial Classification of All
            Economic Activities (ISIC), Revision 4 code for a particular
            organization, business person, or place.
          type: string
        knowsAbout:
          description: >-
            Of a <a class="localLink"
            href="http://schema.org/Person">Person</a>, and less typically of an
            <a class="localLink"
            href="http://schema.org/Organization">Organization</a>, to indicate
            a topic that is known about - suggesting possible expertise but not
            implying it. We do not distinguish skill levels here, or yet relate
            this to educational content, events, objectives or <a
            class="localLink" href="http://schema.org/JobPosting">JobPosting</a>
            descriptions.
          oneOf:
            - $ref: 'url.yaml#/URL'
            - type: string
            - $ref: 'thing.yaml#/Thing'
        knowsLanguage:
          description: >-
            Of a <a class="localLink"
            href="http://schema.org/Person">Person</a>, and less typically of an
            <a class="localLink"
            href="http://schema.org/Organization">Organization</a>, to indicate
            a known language. We do not distinguish skill levels or
            reading/writing/speaking/signing here. Use language codes from the
            <a href="http://tools.ietf.org/html/bcp47">IETF BCP 47 standard</a>.
          oneOf:
            - type: string
            - $ref: 'language.yaml#/Language'
        legalName:
          description: >-
            The official name of the organization, e.g. the registered company
            name.
          type: string
        leiCode:
          description: >-
            An organization identifier that uniquely identifies a legal entity
            as defined in ISO 17442.
          type: string
        location:
          description: >-
            The location of for example where the event is happening, an
            organization is located, or where an action takes place.
          oneOf:
            - $ref: 'place.yaml#/Place'
            - $ref: 'postaladdress.yaml#/PostalAddress'
            - type: string
        logo:
          description: An associated logo.
          oneOf:
            - $ref: 'imageobject.yaml#/ImageObject'
            - $ref: 'url.yaml#/URL'
        makesOffer:
          $ref: 'offer.yaml#/Offer'
          description: >-
            A pointer to products or services offered by the organization or
            person.
        member:
          description: >-
            A member of an Organization or a ProgramMembership. Organizations
            can be members of organizations; ProgramMembership is typically for
            individuals.
          oneOf:
            - $ref: 'person.yaml#/Person'
            - $ref: 'organization.yaml#/Organization'
        memberOf:
          description: >-
            An Organization (or ProgramMembership) to which this Person or
            Organization belongs.
          oneOf:
            - $ref: 'programmembership.yaml#/ProgramMembership'
            - $ref: 'organization.yaml#/Organization'
        members:
          description: A member of this organization.
          oneOf:
            - $ref: 'person.yaml#/Person'
            - $ref: 'organization.yaml#/Organization'
        naics:
          description: >-
            The North American Industry Classification System (NAICS) code for a
            particular organization or business person.
          type: string
        numberOfEmployees:
          $ref: 'quantitativevalue.yaml#/QuantitativeValue'
          description: The number of employees in an organization e.g. business.
        ownershipFundingInfo:
          description: >-
            For an <a class="localLink"
            href="http://schema.org/Organization">Organization</a> (often but
            not necessarily a <a class="localLink"
            href="http://schema.org/NewsMediaOrganization">NewsMediaOrganization</a>),
            a description of organizational ownership structure; funding and
            grants. In a news/media setting, this is with particular reference
            to editorial independence.   Note that the <a class="localLink"
            href="http://schema.org/funder">funder</a> is also available and can
            be used to make basic funder information machine-readable.
          oneOf:
            - $ref: 'url.yaml#/URL'
            - type: string
            - $ref: 'creativework.yaml#/CreativeWork'
            - $ref: 'aboutpage.yaml#/AboutPage'
        owns:
          description: Products owned by the organization or person.
          oneOf:
            - $ref: 'ownershipinfo.yaml#/OwnershipInfo'
            - $ref: 'product.yaml#/Product'
        parentOrganization:
          $ref: 'organization.yaml#/Organization'
          description: >-
            The larger organization that this organization is a <a
            class="localLink"
            href="http://schema.org/subOrganization">subOrganization</a> of, if
            any.
        publishingPrinciples:
          description: >-
            The publishingPrinciples property indicates (typically via <a
            class="localLink" href="http://schema.org/URL">URL</a>) a document
            describing the editorial principles of an <a class="localLink"
            href="http://schema.org/Organization">Organization</a> (or
            individual e.g. a <a class="localLink"
            href="http://schema.org/Person">Person</a> writing a blog) that
            relate to their activities as a publisher, e.g. ethics or diversity
            policies. When applied to a <a class="localLink"
            href="http://schema.org/CreativeWork">CreativeWork</a> (e.g. <a
            class="localLink"
            href="http://schema.org/NewsArticle">NewsArticle</a>) the principles
            are those of the party primarily responsible for the creation of the
            <a class="localLink"
            href="http://schema.org/CreativeWork">CreativeWork</a>.<br/><br/>


            While such policies are most typically expressed in natural
            language, sometimes related information (e.g. indicating a <a
            class="localLink" href="http://schema.org/funder">funder</a>) can be
            expressed using schema.org terminology.
          oneOf:
            - $ref: 'url.yaml#/URL'
            - $ref: 'creativework.yaml#/CreativeWork'
        review:
          $ref: 'review.yaml#/Review'
          description: A review of the item.
        reviews:
          $ref: 'review.yaml#/Review'
          description: Review of the item.
        seeks:
          $ref: 'demand.yaml#/Demand'
          description: >-
            A pointer to products or services sought by the organization or
            person (demand).
        serviceArea:
          description: The geographic area where the service is provided.
          oneOf:
            - $ref: 'geoshape.yaml#/GeoShape'
            - $ref: 'place.yaml#/Place'
            - $ref: 'administrativearea.yaml#/AdministrativeArea'
        sponsor:
          description: >-
            A person or organization that supports a thing through a pledge,
            promise, or financial contribution. e.g. a sponsor of a Medical
            Study or a corporate sponsor of an event.
          oneOf:
            - $ref: 'organization.yaml#/Organization'
            - $ref: 'person.yaml#/Person'
        subOrganization:
          $ref: 'organization.yaml#/Organization'
          description: >-
            A relationship between two organizations where the first includes
            the second, e.g., as a subsidiary. See also: the more specific
            'department' property.
        taxID:
          description: >-
            The Tax / Fiscal ID of the organization or person, e.g. the TIN in
            the US or the CIF/NIF in Spain.
          type: string
        telephone:
          description: The telephone number.
          type: string
        unnamedSourcesPolicy:
          description: >-
            For an <a class="localLink"
            href="http://schema.org/Organization">Organization</a> (typically a
            <a class="localLink"
            href="http://schema.org/NewsMediaOrganization">NewsMediaOrganization</a>),
            a statement about policy on use of unnamed sources and the decision
            process required.
          oneOf:
            - $ref: 'url.yaml#/URL'
            - $ref: 'creativework.yaml#/CreativeWork'
        vatID:
          description: The Value-added Tax ID of the organization or person.
          type: string
      type: object
  description: 'An organization such as a school, NGO, corporation, club, etc.'
OrganizationRole:
  allOf:
    - $ref: 'role.yaml#/Role'
    - properties:
        numberedPosition:
          description: >-
            A number associated with a role in an organization, for example, the
            number on an athlete's jersey.
          type: number
      type: object
  description: A subclass of Role used to describe roles within organizations.
OrganizeAction:
  $ref: 'action.yaml#/Action'
  description: >-
    The act of manipulating/administering/supervising/controlling one or more
    objects.
OutletStore:
  $ref: 'store.yaml#/Store'
  description: An outlet store.
OwnershipInfo:
  allOf:
    - $ref: 'structuredvalue.yaml#/StructuredValue'
    - properties:
        acquiredFrom:
          description: The organization or person from which the product was acquired.
          oneOf:
            - $ref: 'organization.yaml#/Organization'
            - $ref: 'person.yaml#/Person'
        ownedFrom:
          description: The date and time of obtaining the product.
          format: date-time
          type: string
        ownedThrough:
          description: The date and time of giving up ownership on the product.
          format: date-time
          type: string
        typeOfGood:
          description: The product that this structured value is referring to.
          oneOf:
            - $ref: 'service.yaml#/Service'
            - $ref: 'product.yaml#/Product'
      type: object
  description: >-
    A structured value providing information about when a certain organization
    or person owned a certain product.
PaintAction:
  $ref: 'createaction.yaml#/CreateAction'
  description: >-
    The act of producing a painting, typically with paint and canvas as
    instruments.
Painting:
  $ref: 'creativework.yaml#/CreativeWork'
  description: A painting.
ParcelDelivery:
  allOf:
    - $ref: 'intangible.yaml#/Intangible'
    - properties:
        carrier:
          $ref: 'organization.yaml#/Organization'
          description: >-
            'carrier' is an out-dated term indicating the 'provider' for parcel
            delivery and flights.
        deliveryAddress:
          $ref: 'postaladdress.yaml#/PostalAddress'
          description: Destination address.
        deliveryStatus:
          $ref: 'deliveryevent.yaml#/DeliveryEvent'
          description: >-
            New entry added as the package passes through each leg of its
            journey (from shipment to final delivery).
        expectedArrivalFrom:
          description: The earliest date the package may arrive.
          format: date-time
          type: string
        expectedArrivalUntil:
          description: The latest date the package may arrive.
          format: date-time
          type: string
        hasDeliveryMethod:
          $ref: 'deliverymethod.yaml#/DeliveryMethod'
          description: Method used for delivery or shipping.
        itemShipped:
          $ref: 'product.yaml#/Product'
          description: Item(s) being shipped.
        originAddress:
          $ref: 'postaladdress.yaml#/PostalAddress'
          description: Shipper's address.
        partOfOrder:
          $ref: 'order.yaml#/Order'
          description: The overall order the items in this delivery were included in.
        provider:
          description: >-
            The service provider, service operator, or service performer; the
            goods producer. Another party (a seller) may offer those services or
            goods on behalf of the provider. A provider may also serve as the
            seller.
          oneOf:
            - $ref: 'organization.yaml#/Organization'
            - $ref: 'person.yaml#/Person'
        trackingNumber:
          description: Shipper tracking number.
          type: string
        trackingUrl:
          $ref: 'url.yaml#/URL'
          description: Tracking url for the parcel delivery.
      type: object
  description: >-
    The delivery of a parcel either via the postal service or a commercial
    service.
ParcelService:
  $ref: 'deliverymethod.yaml#/DeliveryMethod'
  description: >
    A private parcel service as the delivery mode available for a certain
    offer.<br/><br/>


    Commonly used values:<br/><br/>


    <ul>

    <li>http://purl.org/goodrelations/v1#DHL</li>

    <li>http://purl.org/goodrelations/v1#FederalExpress</li>

    <li>http://purl.org/goodrelations/v1#UPS</li>

    </ul>
ParentAudience:
  allOf:
    - $ref: 'peopleaudience.yaml#/PeopleAudience'
    - properties:
        childMaxAge:
          description: Maximal age of the child.
          type: number
        childMinAge:
          description: Minimal age of the child.
          type: number
      type: object
  description: >-
    A set of characteristics describing parents, who can be interested in
    viewing some content.
Park:
  $ref: 'civicstructure.yaml#/CivicStructure'
  description: A park.
ParkingFacility:
  $ref: 'civicstructure.yaml#/CivicStructure'
  description: A parking lot or other parking facility.
PawnShop:
  $ref: 'store.yaml#/Store'
  description: >-
    A shop that will buy, or lend money against the security of, personal
    possessions.
PayAction:
  allOf:
    - $ref: 'tradeaction.yaml#/TradeAction'
    - properties:
        purpose:
          description: A goal towards an action is taken. Can be concrete or abstract.
          oneOf:
            - $ref: 'thing.yaml#/Thing'
            - description: MedicalDevicePurpose type is not published yet in schema.org.
              type: object
        recipient:
          description: >-
            A sub property of participant. The participant who is at the
            receiving end of the action.
          oneOf:
            - $ref: 'audience.yaml#/Audience'
            - $ref: 'organization.yaml#/Organization'
            - $ref: 'person.yaml#/Person'
            - $ref: 'contactpoint.yaml#/ContactPoint'
      type: object
  description: An agent pays a price to a participant.
PaymentCard:
  description: >-
    A payment method using a credit, debit, store or other card to associate the
    payment with an account.
  properties:
    cashBack:
      description: >-
        A cardholder benefit that pays the cardholder a small percentage of
        their net expenditures.
      oneOf:
        - type: number
        - type: boolean
    contactlessPayment:
      description: >-
        A secure method for consumers to purchase products or services via
        debit, credit or smartcards by using RFID or NFC technology.
      type: boolean
    floorLimit:
      $ref: 'monetaryamount.yaml#/MonetaryAmount'
      description: >-
        A floor limit is the amount of money above which credit card
        transactions must be authorized.
PaymentChargeSpecification:
  allOf:
    - $ref: 'pricespecification.yaml#/PriceSpecification'
    - properties:
        appliesToDeliveryMethod:
          $ref: 'deliverymethod.yaml#/DeliveryMethod'
          description: >-
            The delivery method(s) to which the delivery charge or payment
            charge specification applies.
        appliesToPaymentMethod:
          $ref: 'paymentmethod.yaml#/PaymentMethod'
          description: >-
            The payment method(s) to which the payment charge specification
            applies.
      type: object
  description: The costs of settling the payment using a particular payment method.
PaymentMethod:
  $ref: 'enumeration.yaml#/Enumeration'
  description: >
    A payment method is a standardized procedure for transferring the monetary
    amount for a purchase. Payment methods are characterized by the legal and
    technical structures used, and by the organization or group carrying out the
    transaction.<br/><br/>


    Commonly used values:<br/><br/>


    <ul>

    <li>http://purl.org/goodrelations/v1#ByBankTransferInAdvance</li>

    <li>http://purl.org/goodrelations/v1#ByInvoice</li>

    <li>http://purl.org/goodrelations/v1#Cash</li>

    <li>http://purl.org/goodrelations/v1#CheckInAdvance</li>

    <li>http://purl.org/goodrelations/v1#COD</li>

    <li>http://purl.org/goodrelations/v1#DirectDebit</li>

    <li>http://purl.org/goodrelations/v1#GoogleCheckout</li>

    <li>http://purl.org/goodrelations/v1#PayPal</li>

    <li>http://purl.org/goodrelations/v1#PaySwarm</li>

    </ul>
PaymentService:
  $ref: 'financialproduct.yaml#/FinancialProduct'
  description: >-
    A Service to transfer funds from a person or organization to a beneficiary
    person or organization.
PaymentStatusType:
  $ref: 'enumeration.yaml#/Enumeration'
  description: 'A specific payment status. For example, PaymentDue, PaymentComplete, etc.'
PeopleAudience:
  allOf:
    - $ref: 'audience.yaml#/Audience'
    - properties:
        healthCondition:
          description: >-
            Specifying the health condition(s) of a patient, medical study, or
            other target audience. Note: MedicalCondition type is not published
            yet in schema.org.
          type: object
        requiredGender:
          description: Audiences defined by a person's gender.
          type: string
        requiredMaxAge:
          description: Audiences defined by a person's maximum age.
          type: integer
        requiredMinAge:
          description: Audiences defined by a person's minimum age.
          type: integer
        suggestedGender:
          description: The gender of the person or audience.
          type: string
        suggestedMaxAge:
          description: Maximal age recommended for viewing content.
          type: number
        suggestedMinAge:
          description: Minimal age recommended for viewing content.
          type: number
      type: object
  description: >-
    A set of characteristics belonging to people, e.g. who compose an item's
    target audience.
PerformAction:
  allOf:
    - $ref: 'playaction.yaml#/PlayAction'
    - properties:
        entertainmentBusiness:
          $ref: 'entertainmentbusiness.yaml#/EntertainmentBusiness'
          description: >-
            A sub property of location. The entertainment business where the
            action occurred.
      type: object
  description: The act of participating in performance arts.
PerformanceRole:
  allOf:
    - $ref: 'role.yaml#/Role'
    - properties:
        characterName:
          description: >-
            The name of a character played in some acting or performing role,
            i.e. in a PerformanceRole.
          type: string
      type: object
  description: >-
    A PerformanceRole is a Role that some entity places with regard to a
    theatrical performance, e.g. in a Movie, TVSeries etc.
PerformingArtsTheater:
  $ref: 'civicstructure.yaml#/CivicStructure'
  description: A theater or other performing art center.
PerformingGroup:
  $ref: 'organization.yaml#/Organization'
  description: 'A performance group, such as a band, an orchestra, or a circus.'
Periodical:
  $ref: 'creativeworkseries.yaml#/CreativeWorkSeries'
  description: >-
    A publication in any medium issued in successive parts bearing numerical or
    chronological designations and intended, such as a magazine, scholarly
    journal, or newspaper to continue indefinitely.<br/><br/>


    See also <a
    href="http://blog.schema.org/2014/09/schemaorg-support-for-bibliographic_2.html">blog
    post</a>.
Permit:
  allOf:
    - $ref: 'intangible.yaml#/Intangible'
    - properties:
        issuedBy:
          $ref: 'organization.yaml#/Organization'
          description: The organization issuing the ticket or permit.
        issuedThrough:
          $ref: 'service.yaml#/Service'
          description: The service through with the permit was granted.
        permitAudience:
          $ref: 'audience.yaml#/Audience'
          description: The target audience for this permit.
        validFor:
          $ref: 'duration.yaml#/Duration'
          description: The time validity of the permit.
        validFrom:
          description: The date when the item becomes valid.
          format: date-time
          type: string
        validIn:
          $ref: 'administrativearea.yaml#/AdministrativeArea'
          description: The geographic area where the permit is valid.
        validUntil:
          description: The date when the item is no longer valid.
          format: date
          type: string
      type: object
  description: 'A permit issued by an organization, e.g. a parking pass.'
Person:
  allOf:
    - $ref: 'thing.yaml#/Thing'
    - properties:
        additionalName:
          description: 'An additional name for a Person, can be used for a middle name.'
          type: string
        address:
          description: Physical address of the item.
          oneOf:
            - $ref: 'postaladdress.yaml#/PostalAddress'
            - type: string
        affiliation:
          $ref: 'organization.yaml#/Organization'
          description: >-
            An organization that this person is affiliated with. For example, a
            school/university, a club, or a team.
        alumniOf:
          description: An organization that the person is an alumni of.
          oneOf:
            - $ref: 'organization.yaml#/Organization'
            - $ref: 'educationalorganization.yaml#/EducationalOrganization'
        award:
          description: An award won by or for this item.
          type: string
        awards:
          description: Awards won by or for this item.
          type: string
        birthDate:
          description: Date of birth.
          format: date
          type: string
        birthPlace:
          $ref: 'place.yaml#/Place'
          description: The place where the person was born.
        brand:
          description: >-
            The brand(s) associated with a product or service, or the brand(s)
            maintained by an organization or business person.
          oneOf:
            - $ref: 'organization.yaml#/Organization'
            - $ref: 'brand.yaml#/Brand'
        children:
          $ref: 'person.yaml#/Person'
          description: A child of the person.
        colleague:
          description: A colleague of the person.
          oneOf:
            - $ref: 'person.yaml#/Person'
            - $ref: 'url.yaml#/URL'
        colleagues:
          $ref: 'person.yaml#/Person'
          description: A colleague of the person.
        contactPoint:
          $ref: 'contactpoint.yaml#/ContactPoint'
          description: A contact point for a person or organization.
        contactPoints:
          $ref: 'contactpoint.yaml#/ContactPoint'
          description: A contact point for a person or organization.
        deathDate:
          description: Date of death.
          format: date
          type: string
        deathPlace:
          $ref: 'place.yaml#/Place'
          description: The place where the person died.
        duns:
          description: >-
            The Dun &amp; Bradstreet DUNS number for identifying an organization
            or business person.
          type: string
        email:
          description: Email address.
          type: string
        familyName:
          description: >-
            Family name. In the U.S., the last name of an Person. This can be
            used along with givenName instead of the name property.
          type: string
        faxNumber:
          description: The fax number.
          type: string
        follows:
          $ref: 'person.yaml#/Person'
          description: The most generic uni-directional social relation.
        funder:
          description: >-
            A person or organization that supports (sponsors) something through
            some kind of financial contribution.
          oneOf:
            - $ref: 'organization.yaml#/Organization'
            - $ref: 'person.yaml#/Person'
        gender:
          description: >-
            Gender of the person. While http://schema.org/Male and
            http://schema.org/Female may be used, text strings are also
            acceptable for people who do not identify as a binary gender.
          oneOf:
            - $ref: 'gendertype.yaml#/GenderType'
            - type: string
        givenName:
          description: >-
            Given name. In the U.S., the first name of a Person. This can be
            used along with familyName instead of the name property.
          type: string
        globalLocationNumber:
          description: >-
            The <a href="http://www.gs1.org/gln">Global Location Number</a>
            (GLN, sometimes also referred to as International Location Number or
            ILN) of the respective organization, person, or place. The GLN is a
            13-digit number used to identify parties and physical locations.
          type: string
        hasOccupation:
          description: >-
            The Person's occupation. For past professions, use Role for
            expressing dates. Note: Occupation type is not published yet in
            schema.org.
          type: object
        hasOfferCatalog:
          $ref: 'offercatalog.yaml#/OfferCatalog'
          description: >-
            Indicates an OfferCatalog listing for this Organization, Person, or
            Service.
        hasPOS:
          $ref: 'place.yaml#/Place'
          description: Points-of-Sales operated by the organization or person.
        height:
          description: The height of the item.
          oneOf:
            - $ref: 'distance.yaml#/Distance'
            - $ref: 'quantitativevalue.yaml#/QuantitativeValue'
        homeLocation:
          description: A contact location for a person's residence.
          oneOf:
            - $ref: 'contactpoint.yaml#/ContactPoint'
            - $ref: 'place.yaml#/Place'
        honorificPrefix:
          description: An honorific prefix preceding a Person's name such as Dr/Mrs/Mr.
          type: string
        honorificSuffix:
          description: >-
            An honorific suffix preceding a Person's name such as M.D.
            /PhD/MSCSW.
          type: string
        isicV4:
          description: >-
            The International Standard of Industrial Classification of All
            Economic Activities (ISIC), Revision 4 code for a particular
            organization, business person, or place.
          type: string
        jobTitle:
          description: 'The job title of the person (for example, Financial Manager).'
          type: string
        knows:
          $ref: 'person.yaml#/Person'
          description: The most generic bi-directional social/work relation.
        knowsAbout:
          description: >-
            Of a <a class="localLink"
            href="http://schema.org/Person">Person</a>, and less typically of an
            <a class="localLink"
            href="http://schema.org/Organization">Organization</a>, to indicate
            a topic that is known about - suggesting possible expertise but not
            implying it. We do not distinguish skill levels here, or yet relate
            this to educational content, events, objectives or <a
            class="localLink" href="http://schema.org/JobPosting">JobPosting</a>
            descriptions.
          oneOf:
            - type: string
            - $ref: 'thing.yaml#/Thing'
            - $ref: 'url.yaml#/URL'
        knowsLanguage:
          description: >-
            Of a <a class="localLink"
            href="http://schema.org/Person">Person</a>, and less typically of an
            <a class="localLink"
            href="http://schema.org/Organization">Organization</a>, to indicate
            a known language. We do not distinguish skill levels or
            reading/writing/speaking/signing here. Use language codes from the
            <a href="http://tools.ietf.org/html/bcp47">IETF BCP 47 standard</a>.
          oneOf:
            - $ref: 'language.yaml#/Language'
            - type: string
        makesOffer:
          $ref: 'offer.yaml#/Offer'
          description: >-
            A pointer to products or services offered by the organization or
            person.
        memberOf:
          description: >-
            An Organization (or ProgramMembership) to which this Person or
            Organization belongs.
          oneOf:
            - $ref: 'programmembership.yaml#/ProgramMembership'
            - $ref: 'organization.yaml#/Organization'
        naics:
          description: >-
            The North American Industry Classification System (NAICS) code for a
            particular organization or business person.
          type: string
        nationality:
          $ref: 'country.yaml#/Country'
          description: Nationality of the person.
        netWorth:
          description: >-
            The total financial value of the person as calculated by subtracting
            assets from liabilities.
          oneOf:
            - $ref: 'pricespecification.yaml#/PriceSpecification'
            - $ref: 'monetaryamount.yaml#/MonetaryAmount'
        owns:
          description: Products owned by the organization or person.
          oneOf:
            - $ref: 'ownershipinfo.yaml#/OwnershipInfo'
            - $ref: 'product.yaml#/Product'
        parent:
          $ref: 'person.yaml#/Person'
          description: A parent of this person.
        parents:
          $ref: 'person.yaml#/Person'
          description: A parents of the person.
        performerIn:
          $ref: 'event.yaml#/Event'
          description: Event that this person is a performer or participant in.
        publishingPrinciples:
          description: >-
            The publishingPrinciples property indicates (typically via <a
            class="localLink" href="http://schema.org/URL">URL</a>) a document
            describing the editorial principles of an <a class="localLink"
            href="http://schema.org/Organization">Organization</a> (or
            individual e.g. a <a class="localLink"
            href="http://schema.org/Person">Person</a> writing a blog) that
            relate to their activities as a publisher, e.g. ethics or diversity
            policies. When applied to a <a class="localLink"
            href="http://schema.org/CreativeWork">CreativeWork</a> (e.g. <a
            class="localLink"
            href="http://schema.org/NewsArticle">NewsArticle</a>) the principles
            are those of the party primarily responsible for the creation of the
            <a class="localLink"
            href="http://schema.org/CreativeWork">CreativeWork</a>.<br/><br/>


            While such policies are most typically expressed in natural
            language, sometimes related information (e.g. indicating a <a
            class="localLink" href="http://schema.org/funder">funder</a>) can be
            expressed using schema.org terminology.
          oneOf:
            - $ref: 'creativework.yaml#/CreativeWork'
            - $ref: 'url.yaml#/URL'
        relatedTo:
          $ref: 'person.yaml#/Person'
          description: The most generic familial relation.
        seeks:
          $ref: 'demand.yaml#/Demand'
          description: >-
            A pointer to products or services sought by the organization or
            person (demand).
        sibling:
          $ref: 'person.yaml#/Person'
          description: A sibling of the person.
        siblings:
          $ref: 'person.yaml#/Person'
          description: A sibling of the person.
        sponsor:
          description: >-
            A person or organization that supports a thing through a pledge,
            promise, or financial contribution. e.g. a sponsor of a Medical
            Study or a corporate sponsor of an event.
          oneOf:
            - $ref: 'person.yaml#/Person'
            - $ref: 'organization.yaml#/Organization'
        spouse:
          $ref: 'person.yaml#/Person'
          description: The person's spouse.
        taxID:
          description: >-
            The Tax / Fiscal ID of the organization or person, e.g. the TIN in
            the US or the CIF/NIF in Spain.
          type: string
        telephone:
          description: The telephone number.
          type: string
        vatID:
          description: The Value-added Tax ID of the organization or person.
          type: string
        weight:
          $ref: 'quantitativevalue.yaml#/QuantitativeValue'
          description: The weight of the product or person.
        workLocation:
          description: A contact location for a person's place of work.
          oneOf:
            - $ref: 'place.yaml#/Place'
            - $ref: 'contactpoint.yaml#/ContactPoint'
        worksFor:
          $ref: 'organization.yaml#/Organization'
          description: Organizations that the person works for.
      type: object
  description: 'A person (alive, dead, undead, or fictional).'
PetStore:
  $ref: 'store.yaml#/Store'
  description: A pet store.
Pharmacy:
  $ref: 'medicalorganization.yaml#/MedicalOrganization'
  description: A pharmacy or drugstore.
Photograph:
  $ref: 'creativework.yaml#/CreativeWork'
  description: A photograph.
PhotographAction:
  $ref: 'createaction.yaml#/CreateAction'
  description: The act of capturing still images of objects using a camera.
Physician:
  allOf:
    - $ref: 'medicalorganization.yaml#/MedicalOrganization'
    - properties:
        availableService:
          description: A medical service available from this provider.
          oneOf:
            - description: MedicalTherapy type is not published yet in schema.org.
              type: object
            - description: MedicalProcedure type is not published yet in schema.org.
              type: object
            - description: MedicalTest type is not published yet in schema.org.
              type: object
        hospitalAffiliation:
          $ref: 'hospital.yaml#/Hospital'
          description: A hospital with which the physician or office is affiliated.
        medicalSpecialty:
          description: >-
            A medical specialty of the provider. Note: MedicalSpecialty type is
            not published yet in schema.org.
          type: object
      type: object
  description: A doctor's office.
Place:
  allOf:
    - $ref: 'thing.yaml#/Thing'
    - properties:
        additionalProperty:
          $ref: 'propertyvalue.yaml#/PropertyValue'
          description: >-
            A property-value pair representing an additional characteristics of
            the entitity, e.g. a product feature or another characteristic for
            which there is no matching property in schema.org.<br/><br/>


            Note: Publishers should be aware that applications designed to use
            specific schema.org properties (e.g. http://schema.org/width,
            http://schema.org/color, http://schema.org/gtin13, ...) will
            typically expect such data to be provided using those properties,
            rather than using the generic property/value mechanism.
        address:
          description: Physical address of the item.
          oneOf:
            - $ref: 'postaladdress.yaml#/PostalAddress'
            - type: string
        aggregateRating:
          $ref: 'aggregaterating.yaml#/AggregateRating'
          description: >-
            The overall rating, based on a collection of reviews or ratings, of
            the item.
        amenityFeature:
          $ref: 'locationfeaturespecification.yaml#/LocationFeatureSpecification'
          description: >-
            An amenity feature (e.g. a characteristic or service) of the
            Accommodation. This generic property does not make a statement about
            whether the feature is included in an offer for the main
            accommodation or available at extra costs.
        branchCode:
          description: >-
            A short textual code (also called "store code") that uniquely
            identifies a place of business. The code is typically assigned by
            the parentOrganization and used in structured URLs.<br/><br/>


            For example, in the URL
            http://www.starbucks.co.uk/store-locator/etc/detail/3047 the code
            "3047" is a branchCode for a particular branch.
          type: string
        containedIn:
          $ref: 'place.yaml#/Place'
          description: >-
            The basic containment relation between a place and one that contains
            it.
        containedInPlace:
          $ref: 'place.yaml#/Place'
          description: >-
            The basic containment relation between a place and one that contains
            it.
        containsPlace:
          $ref: 'place.yaml#/Place'
          description: >-
            The basic containment relation between a place and another that it
            contains.
        event:
          $ref: 'event.yaml#/Event'
          description: >-
            Upcoming or past event associated with this place, organization, or
            action.
        events:
          $ref: 'event.yaml#/Event'
          description: Upcoming or past events associated with this place or organization.
        faxNumber:
          description: The fax number.
          type: string
        geo:
          description: The geo coordinates of the place.
          oneOf:
            - $ref: 'geocoordinates.yaml#/GeoCoordinates'
            - $ref: 'geoshape.yaml#/GeoShape'
        geospatiallyContains:
          description: >-
            Represents a relationship between two geometries (or the places they
            represent), relating a containing geometry to a contained geometry.
            "a contains b iff no points of b lie in the exterior of a, and at
            least one point of the interior of b lies in the interior of a". As
            defined in <a
            href="https://en.wikipedia.org/wiki/DE-9IM">DE-9IM</a>.
          oneOf:
            - description: GeospatialGeometry type is not published yet in schema.org.
              type: object
            - $ref: 'place.yaml#/Place'
        geospatiallyCoveredBy:
          description: >-
            Represents a relationship between two geometries (or the places they
            represent), relating a geometry to another that covers it. As
            defined in <a
            href="https://en.wikipedia.org/wiki/DE-9IM">DE-9IM</a>.
          oneOf:
            - description: GeospatialGeometry type is not published yet in schema.org.
              type: object
            - $ref: 'place.yaml#/Place'
        geospatiallyCovers:
          description: >-
            Represents a relationship between two geometries (or the places they
            represent), relating a covering geometry to a covered geometry.
            "Every point of b is a point of (the interior or boundary of) a". As
            defined in <a
            href="https://en.wikipedia.org/wiki/DE-9IM">DE-9IM</a>.
          oneOf:
            - $ref: 'place.yaml#/Place'
            - description: GeospatialGeometry type is not published yet in schema.org.
              type: object
        geospatiallyCrosses:
          description: >-
            Represents a relationship between two geometries (or the places they
            represent), relating a geometry to another that crosses it: "a
            crosses b: they have some but not all interior points in common, and
            the dimension of the intersection is less than that of at least one
            of them". As defined in <a
            href="https://en.wikipedia.org/wiki/DE-9IM">DE-9IM</a>.
          oneOf:
            - $ref: 'place.yaml#/Place'
            - description: GeospatialGeometry type is not published yet in schema.org.
              type: object
        geospatiallyDisjoint:
          description: >-
            Represents spatial relations in which two geometries (or the places
            they represent) are topologically disjoint: they have no point in
            common. They form a set of disconnected geometries." (a symmetric
            relationship, as defined in <a
            href="https://en.wikipedia.org/wiki/DE-9IM">DE-9IM</a>)
          oneOf:
            - $ref: 'place.yaml#/Place'
            - description: GeospatialGeometry type is not published yet in schema.org.
              type: object
        geospatiallyEquals:
          description: >-
            Represents spatial relations in which two geometries (or the places
            they represent) are topologically equal, as defined in <a
            href="https://en.wikipedia.org/wiki/DE-9IM">DE-9IM</a>. "Two
            geometries are topologically equal if their interiors intersect and
            no part of the interior or boundary of one geometry intersects the
            exterior of the other" (a symmetric relationship)
          oneOf:
            - $ref: 'place.yaml#/Place'
            - description: GeospatialGeometry type is not published yet in schema.org.
              type: object
        geospatiallyIntersects:
          description: >-
            Represents spatial relations in which two geometries (or the places
            they represent) have at least one point in common. As defined in <a
            href="https://en.wikipedia.org/wiki/DE-9IM">DE-9IM</a>.
          oneOf:
            - $ref: 'place.yaml#/Place'
            - description: GeospatialGeometry type is not published yet in schema.org.
              type: object
        geospatiallyOverlaps:
          description: >-
            Represents a relationship between two geometries (or the places they
            represent), relating a geometry to another that geospatially
            overlaps it, i.e. they have some but not all points in common. As
            defined in <a
            href="https://en.wikipedia.org/wiki/DE-9IM">DE-9IM</a>.
          oneOf:
            - description: GeospatialGeometry type is not published yet in schema.org.
              type: object
            - $ref: 'place.yaml#/Place'
        geospatiallyTouches:
          description: >-
            Represents spatial relations in which two geometries (or the places
            they represent) touch: they have at least one boundary point in
            common, but no interior points." (a symmetric relationship, as
            defined in <a href="https://en.wikipedia.org/wiki/DE-9IM">DE-9IM</a>
            )
          oneOf:
            - $ref: 'place.yaml#/Place'
            - description: GeospatialGeometry type is not published yet in schema.org.
              type: object
        geospatiallyWithin:
          description: >-
            Represents a relationship between two geometries (or the places they
            represent), relating a geometry to one that contains it, i.e. it is
            inside (i.e. within) its interior. As defined in <a
            href="https://en.wikipedia.org/wiki/DE-9IM">DE-9IM</a>.
          oneOf:
            - description: GeospatialGeometry type is not published yet in schema.org.
              type: object
            - $ref: 'place.yaml#/Place'
        globalLocationNumber:
          description: >-
            The <a href="http://www.gs1.org/gln">Global Location Number</a>
            (GLN, sometimes also referred to as International Location Number or
            ILN) of the respective organization, person, or place. The GLN is a
            13-digit number used to identify parties and physical locations.
          type: string
        hasMap:
          description: A URL to a map of the place.
          oneOf:
            - $ref: 'url.yaml#/URL'
            - $ref: 'map.yaml#/Map'
        isAccessibleForFree:
          description: >-
            A flag to signal that the item, event, or place is accessible for
            free.
          type: boolean
        isicV4:
          description: >-
            The International Standard of Industrial Classification of All
            Economic Activities (ISIC), Revision 4 code for a particular
            organization, business person, or place.
          type: string
        logo:
          description: An associated logo.
          oneOf:
            - $ref: 'imageobject.yaml#/ImageObject'
            - $ref: 'url.yaml#/URL'
        map:
          $ref: 'url.yaml#/URL'
          description: A URL to a map of the place.
        maps:
          $ref: 'url.yaml#/URL'
          description: A URL to a map of the place.
        maximumAttendeeCapacity:
          description: The total number of individuals that may attend an event or venue.
          type: integer
        openingHoursSpecification:
          $ref: 'openinghoursspecification.yaml#/OpeningHoursSpecification'
          description: The opening hours of a certain place.
        photo:
          description: A photograph of this place.
          oneOf:
            - $ref: 'imageobject.yaml#/ImageObject'
            - $ref: 'photograph.yaml#/Photograph'
        photos:
          description: Photographs of this place.
          oneOf:
            - $ref: 'photograph.yaml#/Photograph'
            - $ref: 'imageobject.yaml#/ImageObject'
        publicAccess:
          description: >-
            A flag to signal that the <a class="localLink"
            href="http://schema.org/Place">Place</a> is open to public
            visitors.  If this property is omitted there is no assumed default
            boolean value
          type: boolean
        review:
          $ref: 'review.yaml#/Review'
          description: A review of the item.
        reviews:
          $ref: 'review.yaml#/Review'
          description: Review of the item.
        smokingAllowed:
          description: >-
            Indicates whether it is allowed to smoke in the place, e.g. in the
            restaurant, hotel or hotel room.
          type: boolean
        specialOpeningHoursSpecification:
          $ref: 'openinghoursspecification.yaml#/OpeningHoursSpecification'
          description: >-
            The special opening hours of a certain place.<br/><br/>


            Use this to explicitly override general opening hours brought in
            scope by <a class="localLink"
            href="http://schema.org/openingHoursSpecification">openingHoursSpecification</a>
            or <a class="localLink"
            href="http://schema.org/openingHours">openingHours</a>.
        telephone:
          description: The telephone number.
          type: string
      type: object
  description: 'Entities that have a somewhat fixed, physical extension.'
PlaceOfWorship:
  $ref: 'civicstructure.yaml#/CivicStructure'
  description: 'Place of worship, such as a church, synagogue, or mosque.'
PlanAction:
  allOf:
    - $ref: 'organizeaction.yaml#/OrganizeAction'
    - properties:
        scheduledTime:
          description: The time the object is scheduled to.
          format: date-time
          type: string
      type: object
  description: >-
    The act of planning the execution of an event/task/action/reservation/plan
    to a future date.
PlayAction:
  allOf:
    - $ref: 'action.yaml#/Action'
    - properties:
        audience:
          $ref: 'audience.yaml#/Audience'
          description: 'An intended audience, i.e. a group for whom something was created.'
        event:
          $ref: 'event.yaml#/Event'
          description: >-
            Upcoming or past event associated with this place, organization, or
            action.
      type: object
  description: >
    The act of playing/exercising/training/performing for enjoyment, leisure,
    recreation, Competition or exercise.<br/><br/>


    Related actions:<br/><br/>


    <ul>

    <li><a class="localLink"
    href="http://schema.org/ListenAction">ListenAction</a>: Unlike ListenAction
    (which is under ConsumeAction), PlayAction refers to performing for an
    audience or at an event, rather than consuming music.</li>

    <li><a class="localLink"
    href="http://schema.org/WatchAction">WatchAction</a>: Unlike WatchAction
    (which is under ConsumeAction), PlayAction refers to showing/displaying for
    an audience or at an event, rather than consuming visual content.</li>

    </ul>
Playground:
  $ref: 'civicstructure.yaml#/CivicStructure'
  description: A playground.
Plumber:
  $ref: 'homeandconstructionbusiness.yaml#/HomeAndConstructionBusiness'
  description: A plumbing service.
PoliceStation:
  description: A police station.
Pond:
  $ref: 'bodyofwater.yaml#/BodyOfWater'
  description: A pond.
PostalAddress:
  allOf:
    - $ref: 'contactpoint.yaml#/ContactPoint'
    - properties:
        addressCountry:
          description: >-
            The country. For example, USA. You can also provide the two-letter
            <a href="http://en.wikipedia.org/wiki/ISO_3166-1">ISO 3166-1 alpha-2
            country code</a>.
          oneOf:
            - $ref: 'country.yaml#/Country'
            - type: string
        addressLocality:
          description: 'The locality. For example, Mountain View.'
          type: string
        addressRegion:
          description: 'The region. For example, CA.'
          type: string
        postOfficeBoxNumber:
          description: The post office box number for PO box addresses.
          type: string
        postalCode:
          description: 'The postal code. For example, 94043.'
          type: string
        streetAddress:
          description: 'The street address. For example, 1600 Amphitheatre Pkwy.'
          type: string
      type: object
  description: The mailing address.
PostOffice:
  $ref: 'governmentoffice.yaml#/GovernmentOffice'
  description: A post office.
PrependAction:
  $ref: 'insertaction.yaml#/InsertAction'
  description: The act of inserting at the beginning if an ordered collection.
Preschool:
  $ref: 'educationalorganization.yaml#/EducationalOrganization'
  description: A preschool.
PresentationDigitalDocument:
  $ref: 'digitaldocument.yaml#/DigitalDocument'
  description: A file containing slides or used for a presentation.
PriceSpecification:
  allOf:
    - $ref: 'structuredvalue.yaml#/StructuredValue'
    - properties:
        eligibleQuantity:
          $ref: 'quantitativevalue.yaml#/QuantitativeValue'
          description: >-
            The interval and unit of measurement of ordering quantities for
            which the offer or price specification is valid. This allows e.g.
            specifying that a certain freight charge is valid only for a certain
            quantity.
        eligibleTransactionVolume:
          $ref: 'pricespecification.yaml#/PriceSpecification'
          description: >-
            The transaction volume, in a monetary unit, for which the offer or
            price specification is valid, e.g. for indicating a minimal
            purchasing volume, to express free shipping above a certain order
            volume, or to limit the acceptance of credit cards to purchases to a
            certain minimal amount.
        maxPrice:
          description: The highest price if the price is a range.
          type: number
        minPrice:
          description: The lowest price if the price is a range.
          type: number
        price:
          description: >
            The offer price of a product, or of a price component when attached
            to PriceSpecification and its subtypes.<br/><br/>


            Usage guidelines:<br/><br/>


            <ul>

            <li>Use the <a class="localLink"
            href="http://schema.org/priceCurrency">priceCurrency</a> property
            (with standard formats: <a
            href="http://en.wikipedia.org/wiki/ISO_4217">ISO 4217 currency
            format</a> e.g. "USD"; <a
            href="https://en.wikipedia.org/wiki/List_of_cryptocurrencies">Ticker
            symbol</a> for cryptocurrencies e.g. "BTC"; well known names for <a
            href="https://en.wikipedia.org/wiki/Local_exchange_trading_system">Local
            Exchange Tradings Systems</a> (LETS) and other currency types e.g.
            "Ithaca HOUR") instead of including <a
            href="http://en.wikipedia.org/wiki/Dollar_sign#Currencies_that_use_the_dollar_or_peso_sign">ambiguous
            symbols</a> such as '$' in the value.</li>

            <li>Use '.' (Unicode 'FULL STOP' (U+002E)) rather than ',' to
            indicate a decimal point. Avoid using these symbols as a readability
            separator.</li>

            <li>Note that both <a
            href="http://www.w3.org/TR/xhtml-rdfa-primer/#using-the-content-attribute">RDFa</a>
            and Microdata syntax allow the use of a "content=" attribute for
            publishing simple machine-readable values alongside more
            human-friendly formatting.</li>

            <li>Use values from 0123456789 (Unicode 'DIGIT ZERO' (U+0030) to
            'DIGIT NINE' (U+0039)) rather than superficially similiar Unicode
            symbols.</li>

            </ul>
          oneOf:
            - type: number
            - type: string
        priceCurrency:
          description: >-
            The currency of the price, or a price component when attached to <a
            class="localLink"
            href="http://schema.org/PriceSpecification">PriceSpecification</a>
            and its subtypes.<br/><br/>


            Use standard formats: <a
            href="http://en.wikipedia.org/wiki/ISO_4217">ISO 4217 currency
            format</a> e.g. "USD"; <a
            href="https://en.wikipedia.org/wiki/List_of_cryptocurrencies">Ticker
            symbol</a> for cryptocurrencies e.g. "BTC"; well known names for <a
            href="https://en.wikipedia.org/wiki/Local_exchange_trading_system">Local
            Exchange Tradings Systems</a> (LETS) and other currency types e.g.
            "Ithaca HOUR".
          type: string
        validFrom:
          description: The date when the item becomes valid.
          format: date-time
          type: string
        validThrough:
          description: >-
            The date after when the item is not valid. For example the end of an
            offer, salary period, or a period of opening hours.
          format: date-time
          type: string
        valueAddedTaxIncluded:
          description: >-
            Specifies whether the applicable value-added tax (VAT) is included
            in the price specification or not.
          type: boolean
      type: object
  description: >-
    A structured value representing a price or price range. Typically, only the
    subclasses of this type are used for markup. It is recommended to use <a
    class="localLink" href="http://schema.org/MonetaryAmount">MonetaryAmount</a>
    to describe independent amounts of money such as a salary, credit card
    limits, etc.
Product:
  allOf:
    - $ref: 'thing.yaml#/Thing'
    - properties:
        additionalProperty:
          $ref: 'propertyvalue.yaml#/PropertyValue'
          description: >-
            A property-value pair representing an additional characteristics of
            the entitity, e.g. a product feature or another characteristic for
            which there is no matching property in schema.org.<br/><br/>


            Note: Publishers should be aware that applications designed to use
            specific schema.org properties (e.g. http://schema.org/width,
            http://schema.org/color, http://schema.org/gtin13, ...) will
            typically expect such data to be provided using those properties,
            rather than using the generic property/value mechanism.
        aggregateRating:
          $ref: 'aggregaterating.yaml#/AggregateRating'
          description: >-
            The overall rating, based on a collection of reviews or ratings, of
            the item.
        audience:
          $ref: 'audience.yaml#/Audience'
          description: 'An intended audience, i.e. a group for whom something was created.'
        award:
          description: An award won by or for this item.
          type: string
        awards:
          description: Awards won by or for this item.
          type: string
        brand:
          description: >-
            The brand(s) associated with a product or service, or the brand(s)
            maintained by an organization or business person.
          oneOf:
            - $ref: 'organization.yaml#/Organization'
            - $ref: 'brand.yaml#/Brand'
        category:
          description: >-
            A category for the item. Greater signs or slashes can be used to
            informally indicate a category hierarchy.
          oneOf:
            - type: string
            - $ref: 'thing.yaml#/Thing'
            - description: >-
                PhysicalActivityCategory type is not published yet in
                schema.org.
              type: object
        color:
          description: The color of the product.
          type: string
        depth:
          description: The depth of the item.
          oneOf:
            - $ref: 'quantitativevalue.yaml#/QuantitativeValue'
            - $ref: 'distance.yaml#/Distance'
        gtin12:
          description: >-
            The GTIN-12 code of the product, or the product to which the offer
            refers. The GTIN-12 is the 12-digit GS1 Identification Key composed
            of a U.P.C. Company Prefix, Item Reference, and Check Digit used to
            identify trade items. See <a
            href="http://www.gs1.org/barcodes/technical/idkeys/gtin">GS1 GTIN
            Summary</a> for more details.
          type: string
        gtin13:
          description: >-
            The GTIN-13 code of the product, or the product to which the offer
            refers. This is equivalent to 13-digit ISBN codes and EAN UCC-13.
            Former 12-digit UPC codes can be converted into a GTIN-13 code by
            simply adding a preceeding zero. See <a
            href="http://www.gs1.org/barcodes/technical/idkeys/gtin">GS1 GTIN
            Summary</a> for more details.
          type: string
        gtin14:
          description: >-
            The GTIN-14 code of the product, or the product to which the offer
            refers. See <a
            href="http://www.gs1.org/barcodes/technical/idkeys/gtin">GS1 GTIN
            Summary</a> for more details.
          type: string
        gtin8:
          description: >-
            The <a
            href="http://apps.gs1.org/GDD/glossary/Pages/GTIN-8.aspx">GTIN-8</a>
            code of the product, or the product to which the offer refers. This
            code is also known as EAN/UCC-8 or 8-digit EAN. See <a
            href="http://www.gs1.org/barcodes/technical/idkeys/gtin">GS1 GTIN
            Summary</a> for more details.
          type: string
        height:
          description: The height of the item.
          oneOf:
            - $ref: 'distance.yaml#/Distance'
            - $ref: 'quantitativevalue.yaml#/QuantitativeValue'
        isAccessoryOrSparePartFor:
          $ref: 'product.yaml#/Product'
          description: >-
            A pointer to another product (or multiple products) for which this
            product is an accessory or spare part.
        isConsumableFor:
          $ref: 'product.yaml#/Product'
          description: >-
            A pointer to another product (or multiple products) for which this
            product is a consumable.
        isRelatedTo:
          description: >-
            A pointer to another, somehow related product (or multiple
            products).
          oneOf:
            - $ref: 'product.yaml#/Product'
            - $ref: 'service.yaml#/Service'
        isSimilarTo:
          description: >-
            A pointer to another, functionally similar product (or multiple
            products).
          oneOf:
            - $ref: 'product.yaml#/Product'
            - $ref: 'service.yaml#/Service'
        itemCondition:
          $ref: 'offeritemcondition.yaml#/OfferItemCondition'
          description: >-
            A predefined value from OfferItemCondition or a textual description
            of the condition of the product or service, or the products or
            services included in the offer.
        logo:
          description: An associated logo.
          oneOf:
            - $ref: 'url.yaml#/URL'
            - $ref: 'imageobject.yaml#/ImageObject'
        manufacturer:
          $ref: 'organization.yaml#/Organization'
          description: The manufacturer of the product.
        material:
          description: >-
            A material that something is made from, e.g. leather, wool, cotton,
            paper.
          oneOf:
            - $ref: 'product.yaml#/Product'
            - type: string
            - $ref: 'url.yaml#/URL'
        model:
          description: >-
            The model of the product. Use with the URL of a ProductModel or a
            textual representation of the model identifier. The URL of the
            ProductModel can be from an external source. It is recommended to
            additionally provide strong product identifiers via the
            gtin8/gtin13/gtin14 and mpn properties.
          oneOf:
            - $ref: 'productmodel.yaml#/ProductModel'
            - type: string
        mpn:
          description: >-
            The Manufacturer Part Number (MPN) of the product, or the product to
            which the offer refers.
          type: string
        offers:
          $ref: 'offer.yaml#/Offer'
          description: >-
            An offer to provide this item&#x2014;for example, an offer to sell a
            product, rent the DVD of a movie, perform a service, or give away
            tickets to an event.
        productID:
          description: >-
            The product identifier, such as ISBN. For example: <code>meta
            itemprop="productID" content="isbn:123-456-789"</code>.
          type: string
        productionDate:
          description: 'The date of production of the item, e.g. vehicle.'
          format: date
          type: string
        purchaseDate:
          description: The date the item e.g. vehicle was purchased by the current owner.
          format: date
          type: string
        releaseDate:
          description: >-
            The release date of a product or product model. This can be used to
            distinguish the exact variant of a product.
          format: date
          type: string
        review:
          $ref: 'review.yaml#/Review'
          description: A review of the item.
        reviews:
          $ref: 'review.yaml#/Review'
          description: Review of the item.
        sku:
          description: >-
            The Stock Keeping Unit (SKU), i.e. a merchant-specific identifier
            for a product or service, or the product to which the offer refers.
          type: string
        weight:
          $ref: 'quantitativevalue.yaml#/QuantitativeValue'
          description: The weight of the product or person.
        width:
          description: The width of the item.
          oneOf:
            - $ref: 'quantitativevalue.yaml#/QuantitativeValue'
            - $ref: 'distance.yaml#/Distance'
      type: object
  description: >-
    Any offered product or service. For example: a pair of shoes; a concert
    ticket; the rental of a car; a haircut; or an episode of a TV show streamed
    online.
ProductModel:
  allOf:
    - $ref: 'product.yaml#/Product'
    - properties:
        isVariantOf:
          $ref: 'productmodel.yaml#/ProductModel'
          description: >-
            A pointer to a base product from which this product is a variant. It
            is safe to infer that the variant inherits all product features from
            the base model, unless defined locally. This is not transitive.
        predecessorOf:
          $ref: 'productmodel.yaml#/ProductModel'
          description: >-
            A pointer from a previous, often discontinued variant of the product
            to its newer variant.
        successorOf:
          $ref: 'productmodel.yaml#/ProductModel'
          description: >-
            A pointer from a newer variant of a product  to its previous, often
            discontinued predecessor.
      type: object
  description: >-
    A datasheet or vendor specification of a product (in the sense of a
    prototypical description).
ProfessionalService:
  $ref: 'localbusiness.yaml#/LocalBusiness'
  description: >-
    Original definition: "provider of professional services."<br/><br/>


    The general <a class="localLink"
    href="http://schema.org/ProfessionalService">ProfessionalService</a> type
    for local businesses was deprecated due to confusion with <a
    class="localLink" href="http://schema.org/Service">Service</a>. For
    reference, the types that it included were: <a class="localLink"
    href="http://schema.org/Dentist">Dentist</a>,
            <a class="localLink" href="http://schema.org/AccountingService">AccountingService</a>, <a class="localLink" href="http://schema.org/Attorney">Attorney</a>, <a class="localLink" href="http://schema.org/Notary">Notary</a>, as well as types for several kinds of <a class="localLink" href="http://schema.org/HomeAndConstructionBusiness">HomeAndConstructionBusiness</a>: <a class="localLink" href="http://schema.org/Electrician">Electrician</a>, <a class="localLink" href="http://schema.org/GeneralContractor">GeneralContractor</a>,
            <a class="localLink" href="http://schema.org/HousePainter">HousePainter</a>, <a class="localLink" href="http://schema.org/Locksmith">Locksmith</a>, <a class="localLink" href="http://schema.org/Plumber">Plumber</a>, <a class="localLink" href="http://schema.org/RoofingContractor">RoofingContractor</a>. <a class="localLink" href="http://schema.org/LegalService">LegalService</a> was introduced as a more inclusive supertype of <a class="localLink" href="http://schema.org/Attorney">Attorney</a>.
ProfilePage:
  $ref: 'webpage.yaml#/WebPage'
  description: 'Web page type: Profile page.'
ProgramMembership:
  allOf:
    - $ref: 'intangible.yaml#/Intangible'
    - properties:
        hostingOrganization:
          $ref: 'organization.yaml#/Organization'
          description: >-
            The organization (airline, travelers' club, etc.) the membership is
            made with.
        member:
          description: >-
            A member of an Organization or a ProgramMembership. Organizations
            can be members of organizations; ProgramMembership is typically for
            individuals.
          oneOf:
            - $ref: 'person.yaml#/Person'
            - $ref: 'organization.yaml#/Organization'
        members:
          description: A member of this organization.
          oneOf:
            - $ref: 'person.yaml#/Person'
            - $ref: 'organization.yaml#/Organization'
        membershipNumber:
          description: A unique identifier for the membership.
          type: string
        programName:
          description: The program providing the membership.
          type: string
      type: object
  description: >-
    Used to describe membership in a loyalty programs (e.g. "StarAliance"),
    traveler clubs (e.g. "AAA"), purchase clubs ("Safeway Club"), etc.
Property:
  allOf:
    - $ref: 'Intangible.yaml#/Intangible'
    - type: object
      description: A property, used to indicate attributes and relationships of some Thing.
PropertyValue:
  allOf:
    - $ref: 'structuredvalue.yaml#/StructuredValue'
    - properties:
        maxValue:
          description: The upper value of some characteristic or property.
          type: number
        measurementTechnique:
          description: >-
            A technique or technology used in a <a class="localLink"
            href="http://schema.org/Dataset">Dataset</a> (or <a
            class="localLink"
            href="http://schema.org/DataDownload">DataDownload</a>, <a
            class="localLink"
            href="http://schema.org/DataCatalog">DataCatalog</a>),

            corresponding to the method used for measuring the corresponding
            variable(s) (described using <a class="localLink"
            href="http://schema.org/variableMeasured">variableMeasured</a>).
            This is oriented towards scientific and scholarly dataset
            publication but may have broader applicability; it is not intended
            as a full representation of measurement, but rather as a high level
            summary for dataset discovery.<br/><br/>


            For example, if <a class="localLink"
            href="http://schema.org/variableMeasured">variableMeasured</a> is:
            molecule concentration, <a class="localLink"
            href="http://schema.org/measurementTechnique">measurementTechnique</a>
            could be: "mass spectrometry" or "nmr spectroscopy" or "colorimetry"
            or "immunofluorescence".<br/><br/>


            If the <a class="localLink"
            href="http://schema.org/variableMeasured">variableMeasured</a> is
            "depression rating", the <a class="localLink"
            href="http://schema.org/measurementTechnique">measurementTechnique</a>
            could be "Zung Scale" or "HAM-D" or "Beck Depression
            Inventory".<br/><br/>


            If there are several <a class="localLink"
            href="http://schema.org/variableMeasured">variableMeasured</a>
            properties recorded for some given data object, use a <a
            class="localLink"
            href="http://schema.org/PropertyValue">PropertyValue</a> for each <a
            class="localLink"
            href="http://schema.org/variableMeasured">variableMeasured</a> and
            attach the corresponding <a class="localLink"
            href="http://schema.org/measurementTechnique">measurementTechnique</a>.
          oneOf:
            - $ref: 'url.yaml#/URL'
            - type: string
        minValue:
          description: The lower value of some characteristic or property.
          type: number
        propertyID:
          description: >-
            A commonly used identifier for the characteristic represented by the
            property, e.g. a manufacturer or a standard code for a property.
            propertyID can be

            (1) a prefixed string, mainly meant to be used with standards for
            product properties; (2) a site-specific, non-prefixed string (e.g.
            the primary key of the property or the vendor-specific id of the
            property), or (3)

            a URL indicating the type of the property, either pointing to an
            external vocabulary, or a Web resource that describes the property
            (e.g. a glossary entry).

            Standards bodies should promote a standard prefix for the
            identifiers of properties from their standards.
          oneOf:
            - $ref: 'url.yaml#/URL'
            - type: string
        unitCode:
          description: >-
            The unit of measurement given using the UN/CEFACT Common Code (3
            characters) or a URL. Other codes than the UN/CEFACT Common Code may
            be used with a prefix followed by a colon.
          oneOf:
            - $ref: 'url.yaml#/URL'
            - type: string
        unitText:
          description: >-
            A string or text indicating the unit of measurement. Useful if you
            cannot provide a standard unit code for

            <a href='unitCode'>unitCode</a>.
          type: string
        value:
          description: >
            The value of the quantitative value or property value
            node.<br/><br/>


            <ul>

            <li>For <a class="localLink"
            href="http://schema.org/QuantitativeValue">QuantitativeValue</a> and
            <a class="localLink"
            href="http://schema.org/MonetaryAmount">MonetaryAmount</a>, the
            recommended type for values is 'Number'.</li>

            <li>For <a class="localLink"
            href="http://schema.org/PropertyValue">PropertyValue</a>, it can be
            'Text;', 'Number', 'Boolean', or 'StructuredValue'.</li>

            </ul>
          oneOf:
            - type: number
            - type: boolean
            - type: string
            - $ref: 'structuredvalue.yaml#/StructuredValue'
        valueReference:
          description: >-
            A pointer to a secondary value that provides additional information
            on the original value, e.g. a reference temperature.
          oneOf:
            - $ref: 'propertyvalue.yaml#/PropertyValue'
            - $ref: 'structuredvalue.yaml#/StructuredValue'
            - $ref: 'quantitativevalue.yaml#/QuantitativeValue'
            - $ref: 'enumeration.yaml#/Enumeration'
            - $ref: 'qualitativevalue.yaml#/QualitativeValue'
      type: object
  description: >-
    A property-value pair, e.g. representing a feature of a product or place.
    Use the 'name' property for the name of the property. If there is an
    additional human-readable version of the value, put that into the
    'description' property.<br/><br/>


    Always use specific schema.org properties when a) they exist and b) you can
    populate them. Using PropertyValue as a substitute will typically not
    trigger the same effect as using the original, specific property.
PropertyValueSpecification:
  allOf:
    - $ref: 'intangible.yaml#/Intangible'
    - properties:
        defaultValue:
          description: >-
            The default value of the input.  For properties that expect a
            literal, the default is a literal value, for properties that expect
            an object, it's an ID reference to one of the current values.
          oneOf:
            - $ref: 'thing.yaml#/Thing'
            - type: string
        maxValue:
          description: The upper value of some characteristic or property.
          type: number
        minValue:
          description: The lower value of some characteristic or property.
          type: number
        multipleValues:
          description: >-
            Whether multiple values are allowed for the property.  Default is
            false.
          type: boolean
        readonlyValue:
          description: >-
            Whether or not a property is mutable.  Default is false. Specifying
            this for a property that also has a value makes it act similar to a
            "hidden" input in an HTML form.
          type: boolean
        stepValue:
          description: >-
            The stepValue attribute indicates the granularity that is expected
            (and required) of the value in a PropertyValueSpecification.
          type: number
        valueMaxLength:
          description: >-
            Specifies the allowed range for number of characters in a literal
            value.
          type: number
        valueMinLength:
          description: >-
            Specifies the minimum allowed range for number of characters in a
            literal value.
          type: number
        valueName:
          description: >-
            Indicates the name of the PropertyValueSpecification to be used in
            URL templates and form encoding in a manner analogous to HTML's
            input@name.
          type: string
        valuePattern:
          description: >-
            Specifies a regular expression for testing literal values according
            to the HTML spec.
          type: string
        valueRequired:
          description: >-
            Whether the property must be filled in to complete the action. 
            Default is false.
          type: boolean
      type: object
  description: A Property value specification.
PublicationEvent:
  allOf:
    - $ref: 'event.yaml#/Event'
    - properties:
        free:
          description: >-
            A flag to signal that the item, event, or place is accessible for
            free.
          type: boolean
        isAccessibleForFree:
          description: >-
            A flag to signal that the item, event, or place is accessible for
            free.
          type: boolean
        publishedBy:
          description: An agent associated with the publication event.
          oneOf:
            - $ref: 'person.yaml#/Person'
            - $ref: 'organization.yaml#/Organization'
        publishedOn:
          $ref: 'broadcastservice.yaml#/BroadcastService'
          description: A broadcast service associated with the publication event.
      type: object
  description: >-
    A PublicationEvent corresponds indifferently to the event of publication for
    a CreativeWork of any type e.g. a broadcast event, an on-demand event, a
    book/journal publication via a variety of delivery media.
PublicationIssue:
  allOf:
    - $ref: 'creativework.yaml#/CreativeWork'
    - properties:
        issueNumber:
          description: 'Identifies the issue of publication; for example, "iii" or "2".'
          oneOf:
            - type: string
            - type: integer
        pageEnd:
          description: The page on which the work ends; for example "138" or "xvi".
          oneOf:
            - type: string
            - type: integer
        pageStart:
          description: The page on which the work starts; for example "135" or "xiii".
          oneOf:
            - type: integer
            - type: string
        pagination:
          description: >-
            Any description of pages that is not separated into pageStart and
            pageEnd; for example, "1-6, 9, 55" or "10-12, 46-49".
          type: string
      type: object
  description: >-
    A part of a successively published publication such as a periodical or
    publication volume, often numbered, usually containing a grouping of works
    such as articles.<br/><br/>


    <a
    href="http://blog.schema.org/2014/09/schemaorg-support-for-bibliographic_2.html">blog
    post</a>.
PublicationVolume:
  allOf:
    - $ref: 'creativework.yaml#/CreativeWork'
    - properties:
        pageEnd:
          description: The page on which the work ends; for example "138" or "xvi".
          oneOf:
            - type: string
            - type: integer
        pageStart:
          description: The page on which the work starts; for example "135" or "xiii".
          oneOf:
            - type: string
            - type: integer
        pagination:
          description: >-
            Any description of pages that is not separated into pageStart and
            pageEnd; for example, "1-6, 9, 55" or "10-12, 46-49".
          type: string
        volumeNumber:
          description: >-
            Identifies the volume of publication or multi-part work; for
            example, "iii" or "2".
          oneOf:
            - type: integer
            - type: string
      type: object
  description: >
    A part of a successively published publication such as a periodical or
    multi-volume work, often numbered. It may represent a time span, such as a
    year.<br/><br/>


    <pre><code>  &lt;br/&gt;&lt;br/&gt;See also &lt;a
    href="http://blog.schema.org/2014/09/schemaorg-support-for-bibliographic_2.html"&gt;blog
    post&lt;/a&gt;.

    </code></pre>
PublicSwimmingPool:
  $ref: 'sportsactivitylocation.yaml#/SportsActivityLocation'
  description: A public swimming pool.
QAPage:
  $ref: 'webpage.yaml#/WebPage'
  description: >-
    A QAPage is a WebPage focussed on a specific Question and its Answer(s),
    e.g. in a question answering site or documenting Frequently Asked Questions
    (FAQs).
QualitativeValue:
  allOf:
    - $ref: 'enumeration.yaml#/Enumeration'
    - properties:
        additionalProperty:
          $ref: 'propertyvalue.yaml#/PropertyValue'
          description: >-
            A property-value pair representing an additional characteristics of
            the entitity, e.g. a product feature or another characteristic for
            which there is no matching property in schema.org.<br/><br/>


            Note: Publishers should be aware that applications designed to use
            specific schema.org properties (e.g. http://schema.org/width,
            http://schema.org/color, http://schema.org/gtin13, ...) will
            typically expect such data to be provided using those properties,
            rather than using the generic property/value mechanism.
        equal:
          $ref: 'qualitativevalue.yaml#/QualitativeValue'
          description: >-
            This ordering relation for qualitative values indicates that the
            subject is equal to the object.
        greater:
          $ref: 'qualitativevalue.yaml#/QualitativeValue'
          description: >-
            This ordering relation for qualitative values indicates that the
            subject is greater than the object.
        greaterOrEqual:
          $ref: 'qualitativevalue.yaml#/QualitativeValue'
          description: >-
            This ordering relation for qualitative values indicates that the
            subject is greater than or equal to the object.
        lesser:
          $ref: 'qualitativevalue.yaml#/QualitativeValue'
          description: >-
            This ordering relation for qualitative values indicates that the
            subject is lesser than the object.
        lesserOrEqual:
          $ref: 'qualitativevalue.yaml#/QualitativeValue'
          description: >-
            This ordering relation for qualitative values indicates that the
            subject is lesser than or equal to the object.
        nonEqual:
          $ref: 'qualitativevalue.yaml#/QualitativeValue'
          description: >-
            This ordering relation for qualitative values indicates that the
            subject is not equal to the object.
        valueReference:
          description: >-
            A pointer to a secondary value that provides additional information
            on the original value, e.g. a reference temperature.
          oneOf:
            - $ref: 'propertyvalue.yaml#/PropertyValue'
            - $ref: 'quantitativevalue.yaml#/QuantitativeValue'
            - $ref: 'structuredvalue.yaml#/StructuredValue'
            - $ref: 'enumeration.yaml#/Enumeration'
            - $ref: 'qualitativevalue.yaml#/QualitativeValue'
      type: object
  description: >-
    A predefined value for a product characteristic, e.g. the power cord plug
    type 'US' or the garment sizes 'S', 'M', 'L', and 'XL'.
QuantitativeValue:
  allOf:
    - $ref: 'structuredvalue.yaml#/StructuredValue'
    - properties:
        additionalProperty:
          $ref: 'propertyvalue.yaml#/PropertyValue'
          description: >-
            A property-value pair representing an additional characteristics of
            the entitity, e.g. a product feature or another characteristic for
            which there is no matching property in schema.org.<br/><br/>


            Note: Publishers should be aware that applications designed to use
            specific schema.org properties (e.g. http://schema.org/width,
            http://schema.org/color, http://schema.org/gtin13, ...) will
            typically expect such data to be provided using those properties,
            rather than using the generic property/value mechanism.
        maxValue:
          description: The upper value of some characteristic or property.
          type: number
        minValue:
          description: The lower value of some characteristic or property.
          type: number
        unitCode:
          description: >-
            The unit of measurement given using the UN/CEFACT Common Code (3
            characters) or a URL. Other codes than the UN/CEFACT Common Code may
            be used with a prefix followed by a colon.
          oneOf:
            - type: string
            - $ref: 'url.yaml#/URL'
        unitText:
          description: >-
            A string or text indicating the unit of measurement. Useful if you
            cannot provide a standard unit code for

            <a href='unitCode'>unitCode</a>.
          type: string
        value:
          description: >
            The value of the quantitative value or property value
            node.<br/><br/>


            <ul>

            <li>For <a class="localLink"
            href="http://schema.org/QuantitativeValue">QuantitativeValue</a> and
            <a class="localLink"
            href="http://schema.org/MonetaryAmount">MonetaryAmount</a>, the
            recommended type for values is 'Number'.</li>

            <li>For <a class="localLink"
            href="http://schema.org/PropertyValue">PropertyValue</a>, it can be
            'Text;', 'Number', 'Boolean', or 'StructuredValue'.</li>

            </ul>
          oneOf:
            - type: string
            - $ref: 'structuredvalue.yaml#/StructuredValue'
            - type: number
            - type: boolean
        valueReference:
          description: >-
            A pointer to a secondary value that provides additional information
            on the original value, e.g. a reference temperature.
          oneOf:
            - $ref: 'qualitativevalue.yaml#/QualitativeValue'
            - $ref: 'enumeration.yaml#/Enumeration'
            - $ref: 'quantitativevalue.yaml#/QuantitativeValue'
            - $ref: 'propertyvalue.yaml#/PropertyValue'
            - $ref: 'structuredvalue.yaml#/StructuredValue'
      type: object
  description: A point value or interval for product characteristics and other purposes.
Quantity:
  $ref: 'intangible.yaml#/Intangible'
  description: >-
    Quantities such as distance, time, mass, weight, etc. Particular instances
    of say Mass are entities like '3 Kg' or '4 milligrams'.
Question:
  allOf:
    - $ref: 'creativework.yaml#/CreativeWork'
    - properties:
        acceptedAnswer:
          description: >-
            The answer(s) that has been accepted as best, typically on a
            Question/Answer site. Sites vary in their selection mechanisms, e.g.
            drawing on community opinion and/or the view of the Question author.
          oneOf:
            - $ref: 'answer.yaml#/Answer'
            - $ref: 'itemlist.yaml#/ItemList'
        answerCount:
          description: The number of answers this question has received.
          type: integer
        downvoteCount:
          description: >-
            The number of downvotes this question, answer or comment has
            received from the community.
          type: integer
        suggestedAnswer:
          description: >-
            An answer (possibly one of several, possibly incorrect) to a
            Question, e.g. on a Question/Answer site.
          oneOf:
            - $ref: 'itemlist.yaml#/ItemList'
            - $ref: 'answer.yaml#/Answer'
        upvoteCount:
          description: >-
            The number of upvotes this question, answer or comment has received
            from the community.
          type: integer
      type: object
  description: >-
    A specific question - e.g. from a user seeking answers online, or collected
    in a Frequently Asked Questions (FAQ) document.
QuoteAction:
  $ref: 'tradeaction.yaml#/TradeAction'
  description: >-
    An agent quotes/estimates/appraises an object/product/service with a price
    at a location/store.
RadioChannel:
  $ref: 'broadcastchannel.yaml#/BroadcastChannel'
  description: >-
    A unique instance of a radio BroadcastService on a CableOrSatelliteService
    lineup.
RadioClip:
  $ref: 'clip.yaml#/Clip'
  description: A short radio program or a segment/part of a radio program.
RadioEpisode:
  $ref: 'episode.yaml#/Episode'
  description: A radio episode which can be part of a series or season.
RadioSeason:
  $ref: 'creativeworkseason.yaml#/CreativeWorkSeason'
  description: Season dedicated to radio broadcast and associated online delivery.
RadioSeries:
  allOf:
    - $ref: 'creativeworkseries.yaml#/CreativeWorkSeries'
    - properties:
        actor:
          $ref: 'person.yaml#/Person'
          description: >-
            An actor, e.g. in tv, radio, movie, video games etc., or in an
            event. Actors can be associated with individual items or with a
            series, episode, clip.
        actors:
          $ref: 'person.yaml#/Person'
          description: >-
            An actor, e.g. in tv, radio, movie, video games etc. Actors can be
            associated with individual items or with a series, episode, clip.
        containsSeason:
          $ref: 'creativeworkseason.yaml#/CreativeWorkSeason'
          description: A season that is part of the media series.
        director:
          $ref: 'person.yaml#/Person'
          description: >-
            A director of e.g. tv, radio, movie, video gaming etc. content, or
            of an event. Directors can be associated with individual items or
            with a series, episode, clip.
        directors:
          $ref: 'person.yaml#/Person'
          description: >-
            A director of e.g. tv, radio, movie, video games etc. content.
            Directors can be associated with individual items or with a series,
            episode, clip.
        episode:
          $ref: 'episode.yaml#/Episode'
          description: 'An episode of a tv, radio or game media within a series or season.'
        episodes:
          $ref: 'episode.yaml#/Episode'
          description: An episode of a TV/radio series or season.
        musicBy:
          description: The composer of the soundtrack.
          oneOf:
            - $ref: 'person.yaml#/Person'
            - $ref: 'musicgroup.yaml#/MusicGroup'
        numberOfEpisodes:
          description: The number of episodes in this season or series.
          type: integer
        numberOfSeasons:
          description: The number of seasons in this series.
          type: integer
        productionCompany:
          $ref: 'organization.yaml#/Organization'
          description: >-
            The production company or studio responsible for the item e.g.
            series, video game, episode etc.
        season:
          $ref: 'creativeworkseason.yaml#/CreativeWorkSeason'
          description: A season in a media series.
        seasons:
          $ref: 'creativeworkseason.yaml#/CreativeWorkSeason'
          description: A season in a media series.
        trailer:
          $ref: 'videoobject.yaml#/VideoObject'
          description: 'The trailer of a movie or tv/radio series, season, episode, etc.'
      type: object
  description: >-
    CreativeWorkSeries dedicated to radio broadcast and associated online
    delivery.
RadioStation:
  $ref: 'localbusiness.yaml#/LocalBusiness'
  description: A radio station.
Rating:
  allOf:
    - $ref: 'intangible.yaml#/Intangible'
    - properties:
        author:
          description: >-
            The author of this content or rating. Please note that author is
            special in that HTML 5 provides a special mechanism for indicating
            authorship via the rel tag. That is equivalent to this and may be
            used interchangeably.
          oneOf:
            - $ref: 'person.yaml#/Person'
            - $ref: 'organization.yaml#/Organization'
        bestRating:
          description: >-
            The highest value allowed in this rating system. If bestRating is
            omitted, 5 is assumed.
          oneOf:
            - type: string
            - type: number
        ratingValue:
          description: The rating for the content.
          oneOf:
            - type: string
            - type: number
        reviewAspect:
          description: >-
            This Review or Rating is relevant to this part or facet of the
            itemReviewed.
          type: string
        worstRating:
          description: >-
            The lowest value allowed in this rating system. If worstRating is
            omitted, 1 is assumed.
          oneOf:
            - type: string
            - type: number
      type: object
  description: 'A rating is an evaluation on a numeric scale, such as 1 to 5 stars.'
ReactAction:
  $ref: 'assessaction.yaml#/AssessAction'
  description: >-
    The act of responding instinctively and emotionally to an object, expressing
    a sentiment.
ReadAction:
  $ref: 'consumeaction.yaml#/ConsumeAction'
  description: The act of consuming written content.
RealEstateAgent:
  $ref: 'localbusiness.yaml#/LocalBusiness'
  description: A real-estate agent.
ReceiveAction:
  allOf:
    - $ref: 'transferaction.yaml#/TransferAction'
    - properties:
        deliveryMethod:
          $ref: 'deliverymethod.yaml#/DeliveryMethod'
          description: A sub property of instrument. The method of delivery.
        sender:
          description: >-
            A sub property of participant. The participant who is at the sending
            end of the action.
          oneOf:
            - $ref: 'person.yaml#/Person'
            - $ref: 'organization.yaml#/Organization'
            - $ref: 'audience.yaml#/Audience'
      type: object
  description: >
    The act of physically/electronically taking delivery of an object thathas
    been transferred from an origin to a destination. Reciprocal of
    SendAction.<br/><br/>


    Related actions:<br/><br/>


    <ul>

    <li><a class="localLink" href="http://schema.org/SendAction">SendAction</a>:
    The reciprocal of ReceiveAction.</li>

    <li><a class="localLink" href="http://schema.org/TakeAction">TakeAction</a>:
    Unlike TakeAction, ReceiveAction does not imply that the ownership has been
    transfered (e.g. I can receive a package, but it does not mean the package
    is now mine).</li>

    </ul>
Recipe:
  allOf:
    - $ref: 'howto.yaml#/HowTo'
    - properties:
        cookTime:
          $ref: 'duration.yaml#/Duration'
          description: >-
            The time it takes to actually cook the dish, in <a
            href="http://en.wikipedia.org/wiki/ISO_8601">ISO 8601 duration
            format</a>.
        cookingMethod:
          description: 'The method of cooking, such as Frying, Steaming, ...'
          type: string
        ingredients:
          description: 'A single ingredient used in the recipe, e.g. sugar, flour or garlic.'
          type: string
        nutrition:
          $ref: 'nutritioninformation.yaml#/NutritionInformation'
          description: Nutrition information about the recipe or menu item.
        recipeCategory:
          description: 'The category of the recipe—for example, appetizer, entree, etc.'
          type: string
        recipeCuisine:
          description: 'The cuisine of the recipe (for example, French or Ethiopian).'
          type: string
        recipeIngredient:
          description: 'A single ingredient used in the recipe, e.g. sugar, flour or garlic.'
          type: string
        recipeInstructions:
          description: >-
            A step in making the recipe, in the form of a single item (document,
            video, etc.) or an ordered list with HowToStep and/or HowToSection
            items.
          oneOf:
            - $ref: 'itemlist.yaml#/ItemList'
            - type: string
            - $ref: 'creativework.yaml#/CreativeWork'
        recipeYield:
          description: >-
            The quantity produced by the recipe (for example, number of people
            served, number of servings, etc).
          oneOf:
            - type: string
            - $ref: 'quantitativevalue.yaml#/QuantitativeValue'
        suitableForDiet:
          $ref: 'restricteddiet.yaml#/RestrictedDiet'
          description: >-
            Indicates a dietary restriction or guideline for which this recipe
            or menu item is suitable, e.g. diabetic, halal etc.
      type: object
  description: >-
    A recipe. For dietary restrictions covered by the recipe, a few common
    restrictions are enumerated via <a class="localLink"
    href="http://schema.org/suitableForDiet">suitableForDiet</a>. The <a
    class="localLink" href="http://schema.org/keywords">keywords</a> property
    can also be used to add more detail.
RecyclingCenter:
  $ref: 'localbusiness.yaml#/LocalBusiness'
  description: A recycling center.
RegisterAction:
  $ref: 'interactaction.yaml#/InteractAction'
  description: >
    The act of registering to be a user of a service, product or web
    page.<br/><br/>


    Related actions:<br/><br/>


    <ul>

    <li><a class="localLink" href="http://schema.org/JoinAction">JoinAction</a>:
    Unlike JoinAction, RegisterAction implies you are registering to be a user
    of a service, <em>not</em> a group/team of people.</li>

    <li>[FollowAction]]: Unlike FollowAction, RegisterAction doesn't imply that
    the agent is expecting to poll for updates from the object.</li>

    <li><a class="localLink"
    href="http://schema.org/SubscribeAction">SubscribeAction</a>: Unlike
    SubscribeAction, RegisterAction doesn't imply that the agent is expecting
    updates from the object.</li>

    </ul>
RejectAction:
  $ref: 'allocateaction.yaml#/AllocateAction'
  description: >
    The act of rejecting to/adopting an object.<br/><br/>


    Related actions:<br/><br/>


    <ul>

    <li><a class="localLink"
    href="http://schema.org/AcceptAction">AcceptAction</a>: The antonym of
    RejectAction.</li>

    </ul>
RentAction:
  allOf:
    - $ref: 'tradeaction.yaml#/TradeAction'
    - properties:
        landlord:
          description: >-
            A sub property of participant. The owner of the real estate
            property.
          oneOf:
            - $ref: 'person.yaml#/Person'
            - $ref: 'organization.yaml#/Organization'
        realEstateAgent:
          $ref: 'realestateagent.yaml#/RealEstateAgent'
          description: >-
            A sub property of participant. The real estate agent involved in the
            action.
      type: object
  description: >-
    The act of giving money in return for temporary use, but not ownership, of
    an object such as a vehicle or property. For example, an agent rents a
    property from a landlord in exchange for a periodic payment.
RentalCarReservation:
  allOf:
    - $ref: 'reservation.yaml#/Reservation'
    - properties:
        dropoffLocation:
          $ref: 'place.yaml#/Place'
          description: Where a rental car can be dropped off.
        dropoffTime:
          description: When a rental car can be dropped off.
          format: date-time
          type: string
        pickupLocation:
          $ref: 'place.yaml#/Place'
          description: >-
            Where a taxi will pick up a passenger or a rental car can be picked
            up.
        pickupTime:
          description: >-
            When a taxi will pickup a passenger or a rental car can be picked
            up.
          format: date-time
          type: string
      type: object
  description: >-
    A reservation for a rental car.<br/><br/>


    Note: This type is for information about actual reservations, e.g. in
    confirmation emails or HTML pages with individual confirmations of
    reservations.
ReplaceAction:
  allOf:
    - $ref: 'updateaction.yaml#/UpdateAction'
    - properties:
        replacee:
          $ref: 'thing.yaml#/Thing'
          description: A sub property of object. The object that is being replaced.
        replacer:
          $ref: 'thing.yaml#/Thing'
          description: A sub property of object. The object that replaces.
      type: object
  description: The act of editing a recipient by replacing an old object with a new object.
ReplyAction:
  allOf:
    - $ref: 'communicateaction.yaml#/CommunicateAction'
    - properties:
        resultComment:
          $ref: 'comment.yaml#/Comment'
          description: >-
            A sub property of result. The Comment created or sent as a result of
            this action.
      type: object
  description: >
    The act of responding to a question/message asked/sent by the object.
    Related to <a class="localLink"
    href="http://schema.org/AskAction">AskAction</a><br/><br/>


    Related actions:<br/><br/>


    <ul>

    <li><a class="localLink" href="http://schema.org/AskAction">AskAction</a>:
    Appears generally as an origin of a ReplyAction.</li>

    </ul>
Report:
  allOf:
    - $ref: 'article.yaml#/Article'
    - properties:
        reportNumber:
          description: >-
            The number or other unique designator assigned to a Report by the
            publishing organization.
          type: string
      type: object
  description: A Report generated by governmental or non-governmental organization.
Reservation:
  allOf:
    - $ref: 'intangible.yaml#/Intangible'
    - properties:
        bookingAgent:
          description: >-
            'bookingAgent' is an out-dated term indicating a 'broker' that
            serves as a booking agent.
          oneOf:
            - $ref: 'person.yaml#/Person'
            - $ref: 'organization.yaml#/Organization'
        bookingTime:
          description: The date and time the reservation was booked.
          format: date-time
          type: string
        broker:
          description: >-
            An entity that arranges for an exchange between a buyer and a
            seller.  In most cases a broker never acquires or releases ownership
            of a product or service involved in an exchange.  If it is not clear
            whether an entity is a broker, seller, or buyer, the latter two
            terms are preferred.
          oneOf:
            - $ref: 'person.yaml#/Person'
            - $ref: 'organization.yaml#/Organization'
        modifiedTime:
          description: The date and time the reservation was modified.
          format: date-time
          type: string
        priceCurrency:
          description: >-
            The currency of the price, or a price component when attached to <a
            class="localLink"
            href="http://schema.org/PriceSpecification">PriceSpecification</a>
            and its subtypes.<br/><br/>


            Use standard formats: <a
            href="http://en.wikipedia.org/wiki/ISO_4217">ISO 4217 currency
            format</a> e.g. "USD"; <a
            href="https://en.wikipedia.org/wiki/List_of_cryptocurrencies">Ticker
            symbol</a> for cryptocurrencies e.g. "BTC"; well known names for <a
            href="https://en.wikipedia.org/wiki/Local_exchange_trading_system">Local
            Exchange Tradings Systems</a> (LETS) and other currency types e.g.
            "Ithaca HOUR".
          type: string
        programMembershipUsed:
          $ref: 'programmembership.yaml#/ProgramMembership'
          description: >-
            Any membership in a frequent flyer, hotel loyalty program, etc.
            being applied to the reservation.
        provider:
          description: >-
            The service provider, service operator, or service performer; the
            goods producer. Another party (a seller) may offer those services or
            goods on behalf of the provider. A provider may also serve as the
            seller.
          oneOf:
            - $ref: 'organization.yaml#/Organization'
            - $ref: 'person.yaml#/Person'
        reservationFor:
          $ref: 'thing.yaml#/Thing'
          description: 'The thing -- flight, event, restaurant,etc. being reserved.'
        reservationId:
          description: A unique identifier for the reservation.
          type: string
        reservationStatus:
          $ref: 'reservationstatustype.yaml#/ReservationStatusType'
          description: The current status of the reservation.
        reservedTicket:
          $ref: 'ticket.yaml#/Ticket'
          description: A ticket associated with the reservation.
        totalPrice:
          description: >-
            The total price for the reservation or ticket, including applicable
            taxes, shipping, etc.
          oneOf:
            - $ref: 'pricespecification.yaml#/PriceSpecification'
            - type: string
            - type: number
        underName:
          description: The person or organization the reservation or ticket is for.
          oneOf:
            - $ref: 'organization.yaml#/Organization'
            - $ref: 'person.yaml#/Person'
      type: object
  description: >-
    Describes a reservation for travel, dining or an event. Some reservations
    require tickets. <br/><br/>


    Note: This type is for information about actual reservations, e.g. in
    confirmation emails or HTML pages with individual confirmations of
    reservations. For offers of tickets, restaurant reservations, flights, or
    rental cars, use <a class="localLink"
    href="http://schema.org/Offer">Offer</a>.
ReservationPackage:
  allOf:
    - $ref: 'reservation.yaml#/Reservation'
    - properties:
        subReservation:
          $ref: 'reservation.yaml#/Reservation'
          description: >-
            The individual reservations included in the package. Typically a
            repeated property.
      type: object
  description: >-
    A group of multiple reservations with common values for all
    sub-reservations.
ReservationStatusType:
  $ref: 'enumeration.yaml#/Enumeration'
  description: Enumerated status values for Reservation.
ReserveAction:
  $ref: 'planaction.yaml#/PlanAction'
  description: >
    Reserving a concrete object.<br/><br/>


    Related actions:<br/><br/>


    <ul>

    <li><a class="localLink"
    href="http://schema.org/ScheduleAction">ScheduleAction</a></a>: Unlike
    ScheduleAction, ReserveAction reserves concrete objects (e.g. a table, a
    hotel) towards a time slot / spatial allocation.</li>

    </ul>
Reservoir:
  $ref: 'bodyofwater.yaml#/BodyOfWater'
  description: >-
    A reservoir of water, typically an artificially created lake, like the Lake
    Kariba reservoir.
Residence:
  $ref: 'place.yaml#/Place'
  description: The place where a person lives.
Resort:
  $ref: 'lodgingbusiness.yaml#/LodgingBusiness'
  description: >-
    A resort is a place used for relaxation or recreation, attracting visitors
    for holidays or vacations. Resorts are places, towns or sometimes commercial
    establishment operated by a single company (Source: Wikipedia, the free
    encyclopedia, see <a
    href="http://en.wikipedia.org/wiki/Resort">http://en.wikipedia.org/wiki/Resort</a>).

    <br /><br />

    See also the <a href="/docs/hotels.html">dedicated document on the use of
    schema.org for marking up hotels and other forms of accommodations</a>.
Restaurant:
  $ref: 'foodestablishment.yaml#/FoodEstablishment'
  description: A restaurant.
RestrictedDiet:
  $ref: 'enumeration.yaml#/Enumeration'
  description: >-
    A diet restricted to certain foods or preparations for cultural, religious,
    health or lifestyle reasons.
ResumeAction:
  $ref: 'controlaction.yaml#/ControlAction'
  description: >-
    The act of resuming a device or application which was formerly paused (e.g.
    resume music playback or resume a timer).
ReturnAction:
  allOf:
    - $ref: 'transferaction.yaml#/TransferAction'
    - properties:
        recipient:
          description: >-
            A sub property of participant. The participant who is at the
            receiving end of the action.
          oneOf:
            - $ref: 'contactpoint.yaml#/ContactPoint'
            - $ref: 'organization.yaml#/Organization'
            - $ref: 'person.yaml#/Person'
            - $ref: 'audience.yaml#/Audience'
      type: object
  description: >-
    The act of returning to the origin that which was previously received
    (concrete objects) or taken (ownership).
Review:
  allOf:
    - $ref: 'creativework.yaml#/CreativeWork'
    - properties:
        itemReviewed:
          $ref: 'thing.yaml#/Thing'
          description: The item that is being reviewed/rated.
        reviewAspect:
          description: >-
            This Review or Rating is relevant to this part or facet of the
            itemReviewed.
          type: string
        reviewBody:
          description: The actual body of the review.
          type: string
        reviewRating:
          $ref: 'rating.yaml#/Rating'
          description: >-
            The rating given in this review. Note that reviews can themselves be
            rated. The <code>reviewRating</code> applies to rating given by the
            review. The <a class="localLink"
            href="http://schema.org/aggregateRating">aggregateRating</a>
            property applies to the review itself, as a creative work.
      type: object
  description: 'A review of an item - for example, of a restaurant, movie, or store.'
ReviewAction:
  allOf:
    - $ref: 'assessaction.yaml#/AssessAction'
    - properties:
        resultReview:
          $ref: 'review.yaml#/Review'
          description: >-
            A sub property of result. The review that resulted in the performing
            of the action.
      type: object
  description: >-
    The act of producing a balanced opinion about the object for an audience. An
    agent reviews an object with participants resulting in a review.
RiverBodyOfWater:
  $ref: 'bodyofwater.yaml#/BodyOfWater'
  description: 'A river (for example, the broad majestic Shannon).'
Role:
  allOf:
    - $ref: 'intangible.yaml#/Intangible'
    - properties:
        endDate:
          description: >-
            The end date and time of the item (in <a
            href="http://en.wikipedia.org/wiki/ISO_8601">ISO 8601 date
            format</a>).
          oneOf:
            - format: date-time
              type: string
            - format: date
              type: string
        namedPosition:
          description: >-
            A position played, performed or filled by a person or organization,
            as part of an organization. For example, an athlete in a SportsTeam
            might play in the position named 'Quarterback'.
          oneOf:
            - type: string
            - $ref: 'url.yaml#/URL'
        roleName:
          description: >-
            A role played, performed or filled by a person or organization. For
            example, the team of creators for a comic book might fill the roles
            named 'inker', 'penciller', and 'letterer'; or an athlete in a
            SportsTeam might play in the position named 'Quarterback'.
          oneOf:
            - $ref: 'url.yaml#/URL'
            - type: string
        startDate:
          description: >-
            The start date and time of the item (in <a
            href="http://en.wikipedia.org/wiki/ISO_8601">ISO 8601 date
            format</a>).
          oneOf:
            - format: date-time
              type: string
            - format: date
              type: string
      type: object
  description: >-
    Represents additional information about a relationship or property. For
    example a Role can be used to say that a 'member' role linking some
    SportsTeam to a player occurred during a particular time period. Or that a
    Person's 'actor' role in a Movie was for some particular characterName. Such
    properties can be attached to a Role entity, which is then associated with
    the main entities using ordinary properties like 'member' or
    'actor'.<br/><br/>


    See also <a href="http://blog.schema.org/2014/06/introducing-role.html">blog
    post</a>.
RoofingContractor:
  $ref: 'homeandconstructionbusiness.yaml#/HomeAndConstructionBusiness'
  description: A roofing contractor.
Room:
  $ref: 'accommodation.yaml#/Accommodation'
  description: >-
    A room is a distinguishable space within a structure, usually separated from
    other spaces by interior walls. (Source: Wikipedia, the free encyclopedia,
    see <a
    href="http://en.wikipedia.org/wiki/Room">http://en.wikipedia.org/wiki/Room</a>).

    <br /><br />

    See also the <a href="/docs/hotels.html">dedicated document on the use of
    schema.org for marking up hotels and other forms of accommodations</a>.
RsvpAction:
  allOf:
    - $ref: 'informaction.yaml#/InformAction'
    - properties:
        additionalNumberOfGuests:
          description: >-
            If responding yes, the number of guests who will attend in addition
            to the invitee.
          type: number
        comment:
          $ref: 'comment.yaml#/Comment'
          description: 'Comments, typically from users.'
        rsvpResponse:
          $ref: 'rsvpresponsetype.yaml#/RsvpResponseType'
          description: 'The response (yes, no, maybe) to the RSVP.'
      type: object
  description: >-
    The act of notifying an event organizer as to whether you expect to attend
    the event.
RsvpResponseType:
  $ref: 'enumeration.yaml#/Enumeration'
  description: >-
    RsvpResponseType is an enumeration type whose instances represent responding
    to an RSVP request.
RVPark:
  $ref: 'civicstructure.yaml#/CivicStructure'
  description: >-
    A place offering space for "Recreational Vehicles", Caravans, mobile homes
    and the like.
SaleEvent:
  $ref: 'event.yaml#/Event'
  description: 'Event type: Sales event.'
ScheduleAction:
  $ref: 'planaction.yaml#/PlanAction'
  description: >
    Scheduling future actions, events, or tasks.<br/><br/>


    Related actions:<br/><br/>


    <ul>

    <li><a class="localLink"
    href="http://schema.org/ReserveAction">ReserveAction</a>: Unlike
    ReserveAction, ScheduleAction allocates future actions (e.g. an event, a
    task, etc) towards a time slot / spatial allocation.</li>

    </ul>
ScholarlyArticle:
  $ref: 'article.yaml#/Article'
  description: A scholarly article.
School:
  $ref: 'educationalorganization.yaml#/EducationalOrganization'
  description: A school.
ScreeningEvent:
  allOf:
    - $ref: 'event.yaml#/Event'
    - properties:
        subtitleLanguage:
          description: >-
            Languages in which subtitles/captions are available, in <a
            href="http://tools.ietf.org/html/bcp47">IETF BCP 47 standard
            format</a>.
          oneOf:
            - type: string
            - $ref: 'language.yaml#/Language'
        videoFormat:
          description: >-
            The type of screening or video broadcast used (e.g. IMAX, 3D, SD,
            HD, etc.).
          type: string
        workPresented:
          $ref: 'movie.yaml#/Movie'
          description: The movie presented during this event.
      type: object
  description: A screening of a movie or other video.
Sculpture:
  $ref: 'creativework.yaml#/CreativeWork'
  description: A piece of sculpture.
SeaBodyOfWater:
  $ref: 'bodyofwater.yaml#/BodyOfWater'
  description: 'A sea (for example, the Caspian sea).'
SearchAction:
  allOf:
    - $ref: 'action.yaml#/Action'
    - properties:
        query:
          description: A sub property of instrument. The query used on this action.
          type: string
      type: object
  description: >
    The act of searching for an object.<br/><br/>


    Related actions:<br/><br/>


    <ul>

    <li><a class="localLink" href="http://schema.org/FindAction">FindAction</a>:
    SearchAction generally leads to a FindAction, but not necessarily.</li>

    </ul>
SearchResultsPage:
  $ref: 'webpage.yaml#/WebPage'
  description: 'Web page type: Search results page.'
Season:
  $ref: 'creativework.yaml#/CreativeWork'
  description: 'A media season e.g. tv, radio, video game etc.'
Seat:
  allOf:
    - $ref: 'intangible.yaml#/Intangible'
    - properties:
        seatNumber:
          description: 'The location of the reserved seat (e.g., 27).'
          type: string
        seatRow:
          description: 'The row location of the reserved seat (e.g., B).'
          type: string
        seatSection:
          description: The section location of the reserved seat (e.g. Orchestra).
          type: string
        seatingType:
          description: The type/class of the seat.
          oneOf:
            - type: string
            - $ref: 'qualitativevalue.yaml#/QualitativeValue'
      type: object
  description: 'Used to describe a seat, such as a reserved seat in an event reservation.'
SelfStorage:
  $ref: 'localbusiness.yaml#/LocalBusiness'
  description: A self-storage facility.
SellAction:
  allOf:
    - $ref: 'tradeaction.yaml#/TradeAction'
    - properties:
        buyer:
          $ref: 'person.yaml#/Person'
          description: >-
            A sub property of participant. The participant/person/organization
            that bought the object.
        warrantyPromise:
          $ref: 'warrantypromise.yaml#/WarrantyPromise'
          description: The warranty promise(s) included in the offer.
      type: object
  description: >-
    The act of taking money from a buyer in exchange for goods or services
    rendered. An agent sells an object, product, or service to a buyer for a
    price. Reciprocal of BuyAction.
SendAction:
  allOf:
    - $ref: 'transferaction.yaml#/TransferAction'
    - properties:
        deliveryMethod:
          $ref: 'deliverymethod.yaml#/DeliveryMethod'
          description: A sub property of instrument. The method of delivery.
        recipient:
          description: >-
            A sub property of participant. The participant who is at the
            receiving end of the action.
          oneOf:
            - $ref: 'organization.yaml#/Organization'
            - $ref: 'audience.yaml#/Audience'
            - $ref: 'contactpoint.yaml#/ContactPoint'
            - $ref: 'person.yaml#/Person'
      type: object
  description: >
    The act of physically/electronically dispatching an object for transfer from
    an origin to a destination.Related actions:<br/><br/>


    <ul>

    <li><a class="localLink"
    href="http://schema.org/ReceiveAction">ReceiveAction</a>: The reciprocal of
    SendAction.</li>

    <li><a class="localLink" href="http://schema.org/GiveAction">GiveAction</a>:
    Unlike GiveAction, SendAction does not imply the transfer of ownership (e.g.
    I can send you my laptop, but I'm not necessarily giving it to you).</li>

    </ul>
Series:
  $ref: 'intangible.yaml#/Intangible'
  description: >-
    A Series in schema.org is a group of related items, typically but not
    necessarily of the same kind. See also <a class="localLink"
    href="http://schema.org/CreativeWorkSeries">CreativeWorkSeries</a>, <a
    class="localLink" href="http://schema.org/EventSeries">EventSeries</a>.
Service:
  allOf:
    - $ref: 'intangible.yaml#/Intangible'
    - properties:
        aggregateRating:
          $ref: 'aggregaterating.yaml#/AggregateRating'
          description: >-
            The overall rating, based on a collection of reviews or ratings, of
            the item.
        areaServed:
          description: The geographic area where a service or offered item is provided.
          oneOf:
            - $ref: 'administrativearea.yaml#/AdministrativeArea'
            - type: string
            - $ref: 'place.yaml#/Place'
            - $ref: 'geoshape.yaml#/GeoShape'
        audience:
          $ref: 'audience.yaml#/Audience'
          description: 'An intended audience, i.e. a group for whom something was created.'
        availableChannel:
          $ref: 'servicechannel.yaml#/ServiceChannel'
          description: >-
            A means of accessing the service (e.g. a phone bank, a web site, a
            location, etc.).
        award:
          description: An award won by or for this item.
          type: string
        brand:
          description: >-
            The brand(s) associated with a product or service, or the brand(s)
            maintained by an organization or business person.
          oneOf:
            - $ref: 'brand.yaml#/Brand'
            - $ref: 'organization.yaml#/Organization'
        broker:
          description: >-
            An entity that arranges for an exchange between a buyer and a
            seller.  In most cases a broker never acquires or releases ownership
            of a product or service involved in an exchange.  If it is not clear
            whether an entity is a broker, seller, or buyer, the latter two
            terms are preferred.
          oneOf:
            - $ref: 'organization.yaml#/Organization'
            - $ref: 'person.yaml#/Person'
        category:
          description: >-
            A category for the item. Greater signs or slashes can be used to
            informally indicate a category hierarchy.
          oneOf:
            - $ref: 'thing.yaml#/Thing'
            - description: >-
                PhysicalActivityCategory type is not published yet in
                schema.org.
              type: object
            - type: string
        hasOfferCatalog:
          $ref: 'offercatalog.yaml#/OfferCatalog'
          description: >-
            Indicates an OfferCatalog listing for this Organization, Person, or
            Service.
        hoursAvailable:
          $ref: 'openinghoursspecification.yaml#/OpeningHoursSpecification'
          description: The hours during which this service or contact is available.
        isRelatedTo:
          description: >-
            A pointer to another, somehow related product (or multiple
            products).
          oneOf:
            - $ref: 'service.yaml#/Service'
            - $ref: 'product.yaml#/Product'
        isSimilarTo:
          description: >-
            A pointer to another, functionally similar product (or multiple
            products).
          oneOf:
            - $ref: 'service.yaml#/Service'
            - $ref: 'product.yaml#/Product'
        logo:
          description: An associated logo.
          oneOf:
            - $ref: 'url.yaml#/URL'
            - $ref: 'imageobject.yaml#/ImageObject'
        offers:
          $ref: 'offer.yaml#/Offer'
          description: >-
            An offer to provide this item&#x2014;for example, an offer to sell a
            product, rent the DVD of a movie, perform a service, or give away
            tickets to an event.
        produces:
          $ref: 'thing.yaml#/Thing'
          description: >-
            The tangible thing generated by the service, e.g. a passport,
            permit, etc.
        provider:
          description: >-
            The service provider, service operator, or service performer; the
            goods producer. Another party (a seller) may offer those services or
            goods on behalf of the provider. A provider may also serve as the
            seller.
          oneOf:
            - $ref: 'organization.yaml#/Organization'
            - $ref: 'person.yaml#/Person'
        providerMobility:
          description: >-
            Indicates the mobility of a provided service (e.g. 'static',
            'dynamic').
          type: string
        review:
          $ref: 'review.yaml#/Review'
          description: A review of the item.
        serviceArea:
          description: The geographic area where the service is provided.
          oneOf:
            - $ref: 'geoshape.yaml#/GeoShape'
            - $ref: 'administrativearea.yaml#/AdministrativeArea'
            - $ref: 'place.yaml#/Place'
        serviceAudience:
          $ref: 'audience.yaml#/Audience'
          description: The audience eligible for this service.
        serviceOutput:
          $ref: 'thing.yaml#/Thing'
          description: >-
            The tangible thing generated by the service, e.g. a passport,
            permit, etc.
        serviceType:
          description: >-
            The type of service being offered, e.g. veterans' benefits,
            emergency relief, etc.
          type: string
        termsOfService:
          description: Human-readable terms of service documentation.
          oneOf:
            - $ref: 'url.yaml#/URL'
            - type: string
      type: object
  description: >-
    A service provided by an organization, e.g. delivery service, print
    services, etc.
ServiceChannel:
  allOf:
    - $ref: 'intangible.yaml#/Intangible'
    - properties:
        availableLanguage:
          description: >-
            A language someone may use with or at the item, service or place.
            Please use one of the language codes from the <a
            href="http://tools.ietf.org/html/bcp47">IETF BCP 47 standard</a>.
            See also <a class="localLink"
            href="http://schema.org/inLanguage">inLanguage</a>
          oneOf:
            - $ref: 'language.yaml#/Language'
            - type: string
        processingTime:
          $ref: 'duration.yaml#/Duration'
          description: Estimated processing time for the service using this channel.
        providesService:
          $ref: 'service.yaml#/Service'
          description: The service provided by this channel.
        serviceLocation:
          $ref: 'place.yaml#/Place'
          description: >-
            The location (e.g. civic structure, local business, etc.) where a
            person can go to access the service.
        servicePhone:
          $ref: 'contactpoint.yaml#/ContactPoint'
          description: The phone number to use to access the service.
        servicePostalAddress:
          $ref: 'postaladdress.yaml#/PostalAddress'
          description: The address for accessing the service by mail.
        serviceSmsNumber:
          $ref: 'contactpoint.yaml#/ContactPoint'
          description: The number to access the service by text message.
        serviceUrl:
          $ref: 'url.yaml#/URL'
          description: The website to access the service.
      type: object
  description: >-
    A means for accessing a service, e.g. a government office location, web
    site, or phone number.
ShareAction:
  $ref: 'communicateaction.yaml#/CommunicateAction'
  description: >-
    The act of distributing content to people for their amusement or
    edification.
ShoeStore:
  $ref: 'store.yaml#/Store'
  description: A shoe store.
ShoppingCenter:
  $ref: 'localbusiness.yaml#/LocalBusiness'
  description: A shopping center or mall.
SingleFamilyResidence:
  allOf:
    - $ref: 'house.yaml#/House'
    - properties:
        numberOfRooms:
          description: >-
            The number of rooms (excluding bathrooms and closets) of the
            accommodation or lodging business.

            Typical unit code(s): ROM for room or C62 for no unit. The type of
            room can be put in the unitText property of the QuantitativeValue.
          oneOf:
            - type: number
            - $ref: 'quantitativevalue.yaml#/QuantitativeValue'
        occupancy:
          $ref: 'quantitativevalue.yaml#/QuantitativeValue'
          description: >-
            The allowed total occupancy for the accommodation in persons
            (including infants etc). For individual accommodations, this is not
            necessarily the legal maximum but defines the permitted usage as per
            the contractual agreement (e.g. a double room used by a single
            person).

            Typical unit code(s): C62 for person
      type: object
  description: 'Residence type: Single-family home.'
SiteNavigationElement:
  $ref: 'webpageelement.yaml#/WebPageElement'
  description: A navigation element of the page.
SkiResort:
  $ref: 'sportsactivitylocation.yaml#/SportsActivityLocation'
  description: A ski resort.
SocialEvent:
  $ref: 'event.yaml#/Event'
  description: 'Event type: Social event.'
SocialMediaPosting:
  allOf:
    - $ref: 'article.yaml#/Article'
    - properties:
        sharedContent:
          $ref: 'creativework.yaml#/CreativeWork'
          description: >-
            A CreativeWork such as an image, video, or audio clip shared as part
            of this posting.
      type: object
  description: >-
    A post to a social media platform, including blog posts, tweets, Facebook
    posts, etc.
SoftwareApplication:
  allOf:
    - $ref: 'creativework.yaml#/CreativeWork'
    - properties:
        applicationCategory:
          description: 'Type of software application, e.g. ''Game, Multimedia''.'
          oneOf:
            - type: string
            - $ref: 'url.yaml#/URL'
        applicationSubCategory:
          description: 'Subcategory of the application, e.g. ''Arcade Game''.'
          oneOf:
            - type: string
            - $ref: 'url.yaml#/URL'
        applicationSuite:
          description: >-
            The name of the application suite to which the application belongs
            (e.g. Excel belongs to Office).
          type: string
        availableOnDevice:
          description: >-
            Device required to run the application. Used in cases where a
            specific make/model is required to run the application.
          type: string
        countriesNotSupported:
          description: >-
            Countries for which the application is not supported. You can also
            provide the two-letter ISO 3166-1 alpha-2 country code.
          type: string
        countriesSupported:
          description: >-
            Countries for which the application is supported. You can also
            provide the two-letter ISO 3166-1 alpha-2 country code.
          type: string
        device:
          description: >-
            Device required to run the application. Used in cases where a
            specific make/model is required to run the application.
          type: string
        downloadUrl:
          $ref: 'url.yaml#/URL'
          description: 'If the file can be downloaded, URL to download the binary.'
        featureList:
          description: >-
            Features or modules provided by this application (and possibly
            required by other applications).
          oneOf:
            - $ref: 'url.yaml#/URL'
            - type: string
        fileSize:
          description: >-
            Size of the application / package (e.g. 18MB). In the absence of a
            unit (MB, KB etc.), KB will be assumed.
          type: string
        installUrl:
          $ref: 'url.yaml#/URL'
          description: >-
            URL at which the app may be installed, if different from the URL of
            the item.
        memoryRequirements:
          description: Minimum memory requirements.
          oneOf:
            - type: string
            - $ref: 'url.yaml#/URL'
        operatingSystem:
          description: 'Operating systems supported (Windows 7, OSX 10.6, Android 1.6).'
          type: string
        permissions:
          description: >-
            Permission(s) required to run the app (for example, a mobile app may
            require full internet access or may run only on wifi).
          type: string
        processorRequirements:
          description: Processor architecture required to run the application (e.g. IA64).
          type: string
        releaseNotes:
          description: Description of what changed in this version.
          oneOf:
            - $ref: 'url.yaml#/URL'
            - type: string
        requirements:
          description: >-
            Component dependency requirements for application. This includes
            runtime environments and shared libraries that are not included in
            the application distribution package, but required to run the
            application (Examples: DirectX, Java or .NET runtime).
          oneOf:
            - $ref: 'url.yaml#/URL'
            - type: string
        screenshot:
          description: A link to a screenshot image of the app.
          oneOf:
            - $ref: 'imageobject.yaml#/ImageObject'
            - $ref: 'url.yaml#/URL'
        softwareAddOn:
          $ref: 'softwareapplication.yaml#/SoftwareApplication'
          description: Additional content for a software application.
        softwareHelp:
          $ref: 'creativework.yaml#/CreativeWork'
          description: Software application help.
        softwareRequirements:
          description: >-
            Component dependency requirements for application. This includes
            runtime environments and shared libraries that are not included in
            the application distribution package, but required to run the
            application (Examples: DirectX, Java or .NET runtime).
          oneOf:
            - $ref: 'url.yaml#/URL'
            - type: string
        softwareVersion:
          description: Version of the software instance.
          type: string
        storageRequirements:
          description: Storage requirements (free space required).
          oneOf:
            - type: string
            - $ref: 'url.yaml#/URL'
        supportingData:
          $ref: 'datafeed.yaml#/DataFeed'
          description: Supporting data for a SoftwareApplication.
      type: object
  description: A software application.
SoftwareSourceCode:
  allOf:
    - $ref: 'creativework.yaml#/CreativeWork'
    - properties:
        codeRepository:
          $ref: 'url.yaml#/URL'
          description: >-
            Link to the repository where the un-compiled, human readable code
            and related code is located (SVN, github, CodePlex).
        codeSampleType:
          description: >-
            What type of code sample: full (compile ready) solution, code
            snippet, inline code, scripts, template.
          type: string
        programmingLanguage:
          description: The computer programming language.
          oneOf:
            - type: string
            - $ref: 'computerlanguage.yaml#/ComputerLanguage'
        runtime:
          description: >-
            Runtime platform or script interpreter dependencies (Example - Java
            v1, Python2.3, .Net Framework 3.0).
          type: string
        runtimePlatform:
          description: >-
            Runtime platform or script interpreter dependencies (Example - Java
            v1, Python2.3, .Net Framework 3.0).
          type: string
        sampleType:
          description: >-
            What type of code sample: full (compile ready) solution, code
            snippet, inline code, scripts, template.
          type: string
        targetProduct:
          $ref: 'softwareapplication.yaml#/SoftwareApplication'
          description: >-
            Target Operating System / Product to which the code applies.  If
            applies to several versions, just the product name can be used.
      type: object
  description: >-
    Computer programming source code. Example: Full (compile ready) solutions,
    code snippet samples, scripts, templates.
SomeProducts:
  allOf:
    - $ref: 'product.yaml#/Product'
    - properties:
        inventoryLevel:
          $ref: 'quantitativevalue.yaml#/QuantitativeValue'
          description: The current approximate inventory level for the item or items.
      type: object
  description: A placeholder for multiple similar products of the same kind.
Specialty:
  $ref: 'enumeration.yaml#/Enumeration'
  description: >-
    Any branch of a field in which people typically develop specific expertise,
    usually after significant study, time, and effort.
SportingGoodsStore:
  $ref: 'store.yaml#/Store'
  description: A sporting goods store.
SportsActivityLocation:
  $ref: 'localbusiness.yaml#/LocalBusiness'
  description: 'A sports location, such as a playing field.'
SportsClub:
  $ref: 'sportsactivitylocation.yaml#/SportsActivityLocation'
  description: A sports club.
SportsEvent:
  allOf:
    - $ref: 'event.yaml#/Event'
    - properties:
        awayTeam:
          description: The away team in a sports event.
          oneOf:
            - $ref: 'person.yaml#/Person'
            - $ref: 'sportsteam.yaml#/SportsTeam'
        competitor:
          description: A competitor in a sports event.
          oneOf:
            - $ref: 'sportsteam.yaml#/SportsTeam'
            - $ref: 'person.yaml#/Person'
        homeTeam:
          description: The home team in a sports event.
          oneOf:
            - $ref: 'sportsteam.yaml#/SportsTeam'
            - $ref: 'person.yaml#/Person'
      type: object
  description: 'Event type: Sports event.'
SportsOrganization:
  allOf:
    - $ref: 'organization.yaml#/Organization'
    - properties:
        sport:
          description: A type of sport (e.g. Baseball).
          oneOf:
            - type: string
            - $ref: 'url.yaml#/URL'
      type: object
  description: >-
    Represents the collection of all sports organizations, including sports
    teams, governing bodies, and sports associations.
SportsTeam:
  allOf:
    - $ref: 'sportsorganization.yaml#/SportsOrganization'
    - properties:
        athlete:
          $ref: 'person.yaml#/Person'
          description: >-
            A person that acts as performing member of a sports team; a player
            as opposed to a coach.
        coach:
          $ref: 'person.yaml#/Person'
          description: A person that acts in a coaching role for a sports team.
      type: object
  description: 'Organization: Sports team.'
SpreadsheetDigitalDocument:
  $ref: 'digitaldocument.yaml#/DigitalDocument'
  description: A spreadsheet file.
StadiumOrArena:
  description: A stadium.
State:
  $ref: 'administrativearea.yaml#/AdministrativeArea'
  description: A state or province of a country.
SteeringPositionValue:
  $ref: 'qualitativevalue.yaml#/QualitativeValue'
  description: A value indicating a steering position.
Store:
  $ref: 'localbusiness.yaml#/LocalBusiness'
  description: A retail good store.
StructuredValue:
  $ref: 'intangible.yaml#/Intangible'
  description: >-
    Structured values are used when the value of a property has a more complex
    structure than simply being a textual value or a reference to another thing.
SubscribeAction:
  $ref: 'interactaction.yaml#/InteractAction'
  description: >
    The act of forming a personal connection with someone/something (object)
    unidirectionally/asymmetrically to get updates pushed to.<br/><br/>


    Related actions:<br/><br/>


    <ul>

    <li><a class="localLink"
    href="http://schema.org/FollowAction">FollowAction</a>: Unlike FollowAction,
    SubscribeAction implies that the subscriber acts as a passive agent being
    constantly/actively pushed for updates.</li>

    <li><a class="localLink"
    href="http://schema.org/RegisterAction">RegisterAction</a>: Unlike
    RegisterAction, SubscribeAction implies that the agent is interested in
    continuing receiving updates from the object.</li>

    <li><a class="localLink" href="http://schema.org/JoinAction">JoinAction</a>:
    Unlike JoinAction, SubscribeAction implies that the agent is interested in
    continuing receiving updates from the object.</li>

    </ul>
SubwayStation:
  $ref: 'civicstructure.yaml#/CivicStructure'
  description: A subway station.
Suite:
  allOf:
    - $ref: 'accommodation.yaml#/Accommodation'
    - properties:
        bed:
          description: >-
            The type of bed or beds included in the accommodation. For the
            single case of just one bed of a certain type, you use bed directly
            with a text.
                  If you want to indicate the quantity of a certain kind of bed, use an instance of BedDetails. For more detailed information, use the amenityFeature property.
          oneOf:
            - type: string
            - description: BedType type is not published yet in schema.org.
              type: object
            - $ref: 'beddetails.yaml#/BedDetails'
        numberOfRooms:
          description: >-
            The number of rooms (excluding bathrooms and closets) of the
            accommodation or lodging business.

            Typical unit code(s): ROM for room or C62 for no unit. The type of
            room can be put in the unitText property of the QuantitativeValue.
          oneOf:
            - $ref: 'quantitativevalue.yaml#/QuantitativeValue'
            - type: number
        occupancy:
          $ref: 'quantitativevalue.yaml#/QuantitativeValue'
          description: >-
            The allowed total occupancy for the accommodation in persons
            (including infants etc). For individual accommodations, this is not
            necessarily the legal maximum but defines the permitted usage as per
            the contractual agreement (e.g. a double room used by a single
            person).

            Typical unit code(s): C62 for person
      type: object
  description: >-
    A suite in a hotel or other public accommodation, denotes a class of luxury
    accommodations, the key feature of which is multiple rooms (Source:
    Wikipedia, the free encyclopedia, see <a
    href="http://en.wikipedia.org/wiki/Suite_(hotel)">http://en.wikipedia.org/wiki/Suite_(hotel)</a>).

    <br /><br />

    See also the <a href="/docs/hotels.html">dedicated document on the use of
    schema.org for marking up hotels and other forms of accommodations</a>.
SuspendAction:
  $ref: 'controlaction.yaml#/ControlAction'
  description: >-
    The act of momentarily pausing a device or application (e.g. pause music
    playback or pause a timer).
Synagogue:
  $ref: 'placeofworship.yaml#/PlaceOfWorship'
  description: A synagogue.
Table:
  $ref: 'webpageelement.yaml#/WebPageElement'
  description: A table on a Web page.
TakeAction:
  $ref: 'transferaction.yaml#/TransferAction'
  description: >
    The act of gaining ownership of an object from an origin. Reciprocal of
    GiveAction.<br/><br/>


    Related actions:<br/><br/>


    <ul>

    <li><a class="localLink" href="http://schema.org/GiveAction">GiveAction</a>:
    The reciprocal of TakeAction.</li>

    <li><a class="localLink"
    href="http://schema.org/ReceiveAction">ReceiveAction</a>: Unlike
    ReceiveAction, TakeAction implies that ownership has been transfered.</li>

    </ul>
TattooParlor:
  $ref: 'healthandbeautybusiness.yaml#/HealthAndBeautyBusiness'
  description: A tattoo parlor.
Taxi:
  $ref: 'service.yaml#/Service'
  description: A taxi.
TaxiReservation:
  allOf:
    - $ref: 'reservation.yaml#/Reservation'
    - properties:
        partySize:
          description: Number of people the reservation should accommodate.
          oneOf:
            - type: integer
            - $ref: 'quantitativevalue.yaml#/QuantitativeValue'
        pickupLocation:
          $ref: 'place.yaml#/Place'
          description: >-
            Where a taxi will pick up a passenger or a rental car can be picked
            up.
        pickupTime:
          description: >-
            When a taxi will pickup a passenger or a rental car can be picked
            up.
          format: date-time
          type: string
      type: object
  description: >-
    A reservation for a taxi.<br/><br/>


    Note: This type is for information about actual reservations, e.g. in
    confirmation emails or HTML pages with individual confirmations of
    reservations. For offers of tickets, use <a class="localLink"
    href="http://schema.org/Offer">Offer</a>.
TaxiService:
  $ref: 'service.yaml#/Service'
  description: >-
    A service for a vehicle for hire with a driver for local travel. Fares are
    usually calculated based on distance traveled.
TaxiStand:
  $ref: 'civicstructure.yaml#/CivicStructure'
  description: A taxi stand.
TechArticle:
  allOf:
    - $ref: 'article.yaml#/Article'
    - properties:
        dependencies:
          description: Prerequisites needed to fulfill steps in article.
          type: string
        proficiencyLevel:
          description: >-
            Proficiency needed for this content; expected values: 'Beginner',
            'Expert'.
          type: string
      type: object
  description: >-
    A technical article - Example: How-to (task) topics, step-by-step,
    procedural troubleshooting, specifications, etc.
TelevisionChannel:
  $ref: 'broadcastchannel.yaml#/BroadcastChannel'
  description: >-
    A unique instance of a television BroadcastService on a
    CableOrSatelliteService lineup.
TelevisionStation:
  $ref: 'localbusiness.yaml#/LocalBusiness'
  description: A television station.
TennisComplex:
  $ref: 'sportsactivitylocation.yaml#/SportsActivityLocation'
  description: A tennis complex.
TextDigitalDocument:
  $ref: 'digitaldocument.yaml#/DigitalDocument'
  description: A file composed primarily of text.
TheaterEvent:
  $ref: 'event.yaml#/Event'
  description: 'Event type: Theater performance.'
TheaterGroup:
  $ref: 'performinggroup.yaml#/PerformingGroup'
  description: >-
    A theater group or company, for example, the Royal Shakespeare Company or
    Druid Theatre.
Thing:
  description: The most generic type of item.
  properties:
    additionalType:
      description: >-
        Description not found. Note: Type is set by OAS generator, schema.org
        has not provided any type.
      type: string
    alternateName:
      description: >-
        Description not found. Note: Type is set by OAS generator, schema.org
        has not provided any type.
      type: string
    description:
      description: >-
        Description not found. Note: Type is set by OAS generator, schema.org
        has not provided any type.
      type: string
    disambiguatingDescription:
      description: >-
        Description not found. Note: Type is set by OAS generator, schema.org
        has not provided any type.
      type: string
    identifier:
      description: >-
        Description not found. Note: Type is set by OAS generator, schema.org
        has not provided any type.
      type: string
    image:
      description: >-
        Description not found. Note: Type is set by OAS generator, schema.org
        has not provided any type.
      type: string
    mainEntityOfPage:
      description: >-
        Description not found. Note: Type is set by OAS generator, schema.org
        has not provided any type.
      type: string
    name:
      description: >-
        Description not found. Note: Type is set by OAS generator, schema.org
        has not provided any type.
      type: string
    potentialAction:
      description: >-
        Description not found. Note: Type is set by OAS generator, schema.org
        has not provided any type.
      type: string
    sameAs:
      description: >-
        Description not found. Note: Type is set by OAS generator, schema.org
        has not provided any type.
      type: string
    subjectOf:
      description: >-
        Description not found. Note: Type is set by OAS generator, schema.org
        has not provided any type.
      type: string
    url:
      description: >-
        Description not found. Note: Type is set by OAS generator, schema.org
        has not provided any type.
      type: string
Ticket:
  allOf:
    - $ref: 'intangible.yaml#/Intangible'
    - properties:
        dateIssued:
          description: The date the ticket was issued.
          format: date-time
          type: string
        issuedBy:
          $ref: 'organization.yaml#/Organization'
          description: The organization issuing the ticket or permit.
        priceCurrency:
          description: >-
            The currency of the price, or a price component when attached to <a
            class="localLink"
            href="http://schema.org/PriceSpecification">PriceSpecification</a>
            and its subtypes.<br/><br/>


            Use standard formats: <a
            href="http://en.wikipedia.org/wiki/ISO_4217">ISO 4217 currency
            format</a> e.g. "USD"; <a
            href="https://en.wikipedia.org/wiki/List_of_cryptocurrencies">Ticker
            symbol</a> for cryptocurrencies e.g. "BTC"; well known names for <a
            href="https://en.wikipedia.org/wiki/Local_exchange_trading_system">Local
            Exchange Tradings Systems</a> (LETS) and other currency types e.g.
            "Ithaca HOUR".
          type: string
        ticketNumber:
          description: The unique identifier for the ticket.
          type: string
        ticketToken:
          description: >-
            Reference to an asset (e.g., Barcode, QR code image or PDF) usable
            for entrance.
          oneOf:
            - $ref: 'url.yaml#/URL'
            - type: string
        ticketedSeat:
          $ref: 'seat.yaml#/Seat'
          description: The seat associated with the ticket.
        totalPrice:
          description: >-
            The total price for the reservation or ticket, including applicable
            taxes, shipping, etc.
          oneOf:
            - $ref: 'pricespecification.yaml#/PriceSpecification'
            - type: string
            - type: number
        underName:
          description: The person or organization the reservation or ticket is for.
          oneOf:
            - $ref: 'person.yaml#/Person'
            - $ref: 'organization.yaml#/Organization'
      type: object
  description: 'Used to describe a ticket to an event, a flight, a bus ride, etc.'
TieAction:
  $ref: 'achieveaction.yaml#/AchieveAction'
  description: The act of reaching a draw in a competitive activity.
TipAction:
  allOf:
    - $ref: 'tradeaction.yaml#/TradeAction'
    - properties:
        recipient:
          description: >-
            A sub property of participant. The participant who is at the
            receiving end of the action.
          oneOf:
            - $ref: 'audience.yaml#/Audience'
            - $ref: 'organization.yaml#/Organization'
            - $ref: 'contactpoint.yaml#/ContactPoint'
            - $ref: 'person.yaml#/Person'
      type: object
  description: >-
    The act of giving money voluntarily to a beneficiary in recognition of
    services rendered.
TireShop:
  $ref: 'store.yaml#/Store'
  description: A tire shop.
TouristAttraction:
  allOf:
    - $ref: 'place.yaml#/Place'
    - properties:
        availableLanguage:
          description: >-
            A language someone may use with or at the item, service or place.
            Please use one of the language codes from the <a
            href="http://tools.ietf.org/html/bcp47">IETF BCP 47 standard</a>.
            See also <a class="localLink"
            href="http://schema.org/inLanguage">inLanguage</a>
          oneOf:
            - $ref: 'language.yaml#/Language'
            - type: string
        touristType:
          description: >-
            Attraction suitable for type(s) of tourist. eg. Children, visitors
            from a particular country, etc.
          oneOf:
            - type: string
            - $ref: 'audience.yaml#/Audience'
      type: object
  description: >-
    A tourist attraction.  In principle any Thing can be a <a class="localLink"
    href="http://schema.org/TouristAttraction">TouristAttraction</a>, from a <a
    class="localLink" href="http://schema.org/Mountain">Mountain</a> and <a
    class="localLink"
    href="http://schema.org/LandmarksOrHistoricalBuildings">LandmarksOrHistoricalBuildings</a>
    to a <a class="localLink"
    href="http://schema.org/LocalBusiness">LocalBusiness</a>.  This Type can be
    used on its own to describe a general <a class="localLink"
    href="http://schema.org/TouristAttraction">TouristAttraction</a>, or be used
    as an <a class="localLink"
    href="http://schema.org/additionalType">additionalType</a> to add tourist
    attraction properties to any other type.  (See examples below)
TouristInformationCenter:
  $ref: 'localbusiness.yaml#/LocalBusiness'
  description: A tourist information center.
ToyStore:
  $ref: 'store.yaml#/Store'
  description: A toy store.
TrackAction:
  allOf:
    - $ref: 'findaction.yaml#/FindAction'
    - properties:
        deliveryMethod:
          $ref: 'deliverymethod.yaml#/DeliveryMethod'
          description: A sub property of instrument. The method of delivery.
      type: object
  description: >
    An agent tracks an object for updates.<br/><br/>


    Related actions:<br/><br/>


    <ul>

    <li><a class="localLink"
    href="http://schema.org/FollowAction">FollowAction</a>: Unlike FollowAction,
    TrackAction refers to the interest on the location of innanimates
    objects.</li>

    <li><a class="localLink"
    href="http://schema.org/SubscribeAction">SubscribeAction</a>: Unlike
    SubscribeAction, TrackAction refers to  the interest on the location of
    innanimate objects.</li>

    </ul>
TradeAction:
  allOf:
    - $ref: 'action.yaml#/Action'
    - properties:
        price:
          description: >
            The offer price of a product, or of a price component when attached
            to PriceSpecification and its subtypes.<br/><br/>


            Usage guidelines:<br/><br/>


            <ul>

            <li>Use the <a class="localLink"
            href="http://schema.org/priceCurrency">priceCurrency</a> property
            (with standard formats: <a
            href="http://en.wikipedia.org/wiki/ISO_4217">ISO 4217 currency
            format</a> e.g. "USD"; <a
            href="https://en.wikipedia.org/wiki/List_of_cryptocurrencies">Ticker
            symbol</a> for cryptocurrencies e.g. "BTC"; well known names for <a
            href="https://en.wikipedia.org/wiki/Local_exchange_trading_system">Local
            Exchange Tradings Systems</a> (LETS) and other currency types e.g.
            "Ithaca HOUR") instead of including <a
            href="http://en.wikipedia.org/wiki/Dollar_sign#Currencies_that_use_the_dollar_or_peso_sign">ambiguous
            symbols</a> such as '$' in the value.</li>

            <li>Use '.' (Unicode 'FULL STOP' (U+002E)) rather than ',' to
            indicate a decimal point. Avoid using these symbols as a readability
            separator.</li>

            <li>Note that both <a
            href="http://www.w3.org/TR/xhtml-rdfa-primer/#using-the-content-attribute">RDFa</a>
            and Microdata syntax allow the use of a "content=" attribute for
            publishing simple machine-readable values alongside more
            human-friendly formatting.</li>

            <li>Use values from 0123456789 (Unicode 'DIGIT ZERO' (U+0030) to
            'DIGIT NINE' (U+0039)) rather than superficially similiar Unicode
            symbols.</li>

            </ul>
          oneOf:
            - type: string
            - type: number
        priceSpecification:
          $ref: 'pricespecification.yaml#/PriceSpecification'
          description: >-
            One or more detailed price specifications, indicating the unit price
            and delivery or payment charges.
      type: object
  description: >-
    The act of participating in an exchange of goods and services for monetary
    compensation. An agent trades an object, product or service with a
    participant in exchange for a one time or periodic payment.
TrainReservation:
  $ref: 'reservation.yaml#/Reservation'
  description: >-
    A reservation for train travel.<br/><br/>


    Note: This type is for information about actual reservations, e.g. in
    confirmation emails or HTML pages with individual confirmations of
    reservations. For offers of tickets, use <a class="localLink"
    href="http://schema.org/Offer">Offer</a>.
TrainStation:
  $ref: 'civicstructure.yaml#/CivicStructure'
  description: A train station.
TrainTrip:
  allOf:
    - $ref: 'trip.yaml#/Trip'
    - properties:
        arrivalPlatform:
          description: The platform where the train arrives.
          type: string
        arrivalStation:
          $ref: 'trainstation.yaml#/TrainStation'
          description: The station where the train trip ends.
        departurePlatform:
          description: The platform from which the train departs.
          type: string
        departureStation:
          $ref: 'trainstation.yaml#/TrainStation'
          description: The station from which the train departs.
        trainName:
          description: The name of the train (e.g. The Orient Express).
          type: string
        trainNumber:
          description: The unique identifier for the train.
          type: string
      type: object
  description: A trip on a commercial train line.
TransferAction:
  allOf:
    - $ref: 'action.yaml#/Action'
    - properties:
        fromLocation:
          $ref: 'place.yaml#/Place'
          description: >-
            A sub property of location. The original location of the object or
            the agent before the action.
        toLocation:
          $ref: 'place.yaml#/Place'
          description: >-
            A sub property of location. The final location of the object or the
            agent after the action.
      type: object
  description: >-
    The act of transferring/moving (abstract or concrete) animate or inanimate
    objects from one place to another.
TravelAction:
  allOf:
    - $ref: 'moveaction.yaml#/MoveAction'
    - properties:
        distance:
          $ref: 'distance.yaml#/Distance'
          description: 'The distance travelled, e.g. exercising or travelling.'
      type: object
  description: >-
    The act of traveling from an fromLocation to a destination by a specified
    mode of transport, optionally with participants.
TravelAgency:
  $ref: 'localbusiness.yaml#/LocalBusiness'
  description: A travel agency.
Trip:
  allOf:
    - $ref: 'intangible.yaml#/Intangible'
    - properties:
        arrivalTime:
          description: The expected arrival time.
          format: date-time
          type: string
        departureTime:
          description: The expected departure time.
          format: date-time
          type: string
        hasPart:
          description: >-
            Indicates an item or CreativeWork that is part of this item, or
            CreativeWork (in some sense).
          oneOf:
            - $ref: 'trip.yaml#/Trip'
            - $ref: 'creativework.yaml#/CreativeWork'
        isPartOf:
          description: >-
            Indicates an item or CreativeWork that this item, or CreativeWork
            (in some sense), is part of.
          oneOf:
            - $ref: 'creativework.yaml#/CreativeWork'
            - $ref: 'trip.yaml#/Trip'
        itinerary:
          description: >-
            Destination(s) ( <a class="localLink"
            href="http://schema.org/Place">Place</a> ) that make up a trip. For
            a trip where destination order is important use <a class="localLink"
            href="http://schema.org/ItemList">ItemList</a> to specify that order
            (see examples).
          oneOf:
            - $ref: 'place.yaml#/Place'
            - $ref: 'itemlist.yaml#/ItemList'
        offers:
          $ref: 'offer.yaml#/Offer'
          description: >-
            An offer to provide this item&#x2014;for example, an offer to sell a
            product, rent the DVD of a movie, perform a service, or give away
            tickets to an event.
        provider:
          description: >-
            The service provider, service operator, or service performer; the
            goods producer. Another party (a seller) may offer those services or
            goods on behalf of the provider. A provider may also serve as the
            seller.
          oneOf:
            - $ref: 'person.yaml#/Person'
            - $ref: 'organization.yaml#/Organization'
      type: object
  description: A trip or journey. An itinerary of visits to one or more places.
TVClip:
  allOf:
    - $ref: 'clip.yaml#/Clip'
    - properties:
        partOfTVSeries:
          $ref: 'tvseries.yaml#/TVSeries'
          description: The TV series to which this episode or season belongs.
      type: object
  description: A short TV program or a segment/part of a TV program.
TVEpisode:
  allOf:
    - $ref: 'episode.yaml#/Episode'
    - properties:
        countryOfOrigin:
          $ref: 'country.yaml#/Country'
          description: >-
            The country of the principal offices of the production company or
            individual responsible for the movie or program.
        partOfTVSeries:
          $ref: 'tvseries.yaml#/TVSeries'
          description: The TV series to which this episode or season belongs.
        subtitleLanguage:
          description: >-
            Languages in which subtitles/captions are available, in <a
            href="http://tools.ietf.org/html/bcp47">IETF BCP 47 standard
            format</a>.
          oneOf:
            - type: string
            - $ref: 'language.yaml#/Language'
      type: object
  description: A TV episode which can be part of a series or season.
TVSeason:
  description: Season dedicated to TV broadcast and associated online delivery.
  properties:
    countryOfOrigin:
      $ref: 'country.yaml#/Country'
      description: >-
        The country of the principal offices of the production company or
        individual responsible for the movie or program.
    partOfTVSeries:
      $ref: 'tvseries.yaml#/TVSeries'
      description: The TV series to which this episode or season belongs.
TVSeries:
  description: CreativeWorkSeries dedicated to TV broadcast and associated online delivery.
  properties:
    actor:
      $ref: 'person.yaml#/Person'
      description: >-
        An actor, e.g. in tv, radio, movie, video games etc., or in an event.
        Actors can be associated with individual items or with a series,
        episode, clip.
    actors:
      $ref: 'person.yaml#/Person'
      description: >-
        An actor, e.g. in tv, radio, movie, video games etc. Actors can be
        associated with individual items or with a series, episode, clip.
    containsSeason:
      $ref: 'creativeworkseason.yaml#/CreativeWorkSeason'
      description: A season that is part of the media series.
    countryOfOrigin:
      $ref: 'country.yaml#/Country'
      description: >-
        The country of the principal offices of the production company or
        individual responsible for the movie or program.
    director:
      $ref: 'person.yaml#/Person'
      description: >-
        A director of e.g. tv, radio, movie, video gaming etc. content, or of an
        event. Directors can be associated with individual items or with a
        series, episode, clip.
    directors:
      $ref: 'person.yaml#/Person'
      description: >-
        A director of e.g. tv, radio, movie, video games etc. content. Directors
        can be associated with individual items or with a series, episode, clip.
    episode:
      $ref: 'episode.yaml#/Episode'
      description: 'An episode of a tv, radio or game media within a series or season.'
    episodes:
      $ref: 'episode.yaml#/Episode'
      description: An episode of a TV/radio series or season.
    musicBy:
      description: The composer of the soundtrack.
      oneOf:
        - $ref: 'person.yaml#/Person'
        - $ref: 'musicgroup.yaml#/MusicGroup'
    numberOfEpisodes:
      description: The number of episodes in this season or series.
      type: integer
    numberOfSeasons:
      description: The number of seasons in this series.
      type: integer
    productionCompany:
      $ref: 'organization.yaml#/Organization'
      description: >-
        The production company or studio responsible for the item e.g. series,
        video game, episode etc.
    season:
      $ref: 'creativeworkseason.yaml#/CreativeWorkSeason'
      description: A season in a media series.
    seasons:
      $ref: 'creativeworkseason.yaml#/CreativeWorkSeason'
      description: A season in a media series.
    trailer:
      $ref: 'videoobject.yaml#/VideoObject'
      description: 'The trailer of a movie or tv/radio series, season, episode, etc.'
TypeAndQuantityNode:
  allOf:
    - $ref: 'structuredvalue.yaml#/StructuredValue'
    - properties:
        amountOfThisGood:
          description: The quantity of the goods included in the offer.
          type: number
        businessFunction:
          $ref: 'businessfunction.yaml#/BusinessFunction'
          description: >-
            The business function (e.g. sell, lease, repair, dispose) of the
            offer or component of a bundle (TypeAndQuantityNode). The default is
            http://purl.org/goodrelations/v1#Sell.
        typeOfGood:
          description: The product that this structured value is referring to.
          oneOf:
            - $ref: 'service.yaml#/Service'
            - $ref: 'product.yaml#/Product'
        unitCode:
          description: >-
            The unit of measurement given using the UN/CEFACT Common Code (3
            characters) or a URL. Other codes than the UN/CEFACT Common Code may
            be used with a prefix followed by a colon.
          oneOf:
            - type: string
            - $ref: 'url.yaml#/URL'
        unitText:
          description: >-
            A string or text indicating the unit of measurement. Useful if you
            cannot provide a standard unit code for

            <a href='unitCode'>unitCode</a>.
          type: string
      type: object
  description: >-
    A structured value indicating the quantity, unit of measurement, and
    business function of goods included in a bundle offer.
UnitPriceSpecification:
  allOf:
    - $ref: 'pricespecification.yaml#/PriceSpecification'
    - properties:
        billingIncrement:
          description: >-
            This property specifies the minimal quantity and rounding increment
            that will be the basis for the billing. The unit of measurement is
            specified by the unitCode property.
          type: number
        priceType:
          description: >-
            A short text or acronym indicating multiple price specifications for
            the same offer, e.g. SRP for the suggested retail price or INVOICE
            for the invoice price, mostly used in the car industry.
          type: string
        referenceQuantity:
          $ref: 'quantitativevalue.yaml#/QuantitativeValue'
          description: >-
            The reference quantity for which a certain price applies, e.g. 1 EUR
            per 4 kWh of electricity. This property is a replacement for
            unitOfMeasurement for the advanced cases where the price does not
            relate to a standard unit.
        unitCode:
          description: >-
            The unit of measurement given using the UN/CEFACT Common Code (3
            characters) or a URL. Other codes than the UN/CEFACT Common Code may
            be used with a prefix followed by a colon.
          oneOf:
            - $ref: 'url.yaml#/URL'
            - type: string
        unitText:
          description: >-
            A string or text indicating the unit of measurement. Useful if you
            cannot provide a standard unit code for

            <a href='unitCode'>unitCode</a>.
          type: string
      type: object
  description: The price asked for a given offer by the respective organization or person.
UnRegisterAction:
  $ref: 'interactaction.yaml#/InteractAction'
  description: >
    The act of un-registering from a service.<br/><br/>


    Related actions:<br/><br/>


    <ul>

    <li><a class="localLink"
    href="http://schema.org/RegisterAction">RegisterAction</a>: antonym of
    UnRegisterAction.</li>

    <li><a class="localLink"
    href="http://schema.org/LeaveAction">LeaveAction</a>: Unlike LeaveAction,
    UnRegisterAction implies that you are unregistering from a service you werer
    previously registered, rather than leaving a team/group of people.</li>

    </ul>
UpdateAction:
  allOf:
    - $ref: 'action.yaml#/Action'
    - properties:
        collection:
          $ref: 'thing.yaml#/Thing'
          description: A sub property of object. The collection target of the action.
        targetCollection:
          $ref: 'thing.yaml#/Thing'
          description: A sub property of object. The collection target of the action.
      type: object
  description: The act of managing by changing/editing the state of the object.
URL:
  description: 'Data type: URL.'
  type: string
UseAction:
  $ref: 'consumeaction.yaml#/ConsumeAction'
  description: The act of applying an object to its intended purpose.
UserBlocks:
  $ref: 'userinteraction.yaml#/UserInteraction'
  description: >-
    UserInteraction and its subtypes is an old way of talking about users
    interacting with pages. It is generally better to use <a class="localLink"
    href="http://schema.org/Action">Action</a>-based vocabulary, alongside types
    such as <a class="localLink" href="http://schema.org/Comment">Comment</a>.
UserCheckins:
  $ref: 'userinteraction.yaml#/UserInteraction'
  description: >-
    UserInteraction and its subtypes is an old way of talking about users
    interacting with pages. It is generally better to use <a class="localLink"
    href="http://schema.org/Action">Action</a>-based vocabulary, alongside types
    such as <a class="localLink" href="http://schema.org/Comment">Comment</a>.
UserComments:
  allOf:
    - $ref: 'userinteraction.yaml#/UserInteraction'
    - properties:
        commentText:
          description: The text of the UserComment.
          type: string
        commentTime:
          description: The time at which the UserComment was made.
          oneOf:
            - format: date
              type: string
            - format: date-time
              type: string
        creator:
          description: >-
            The creator/author of this CreativeWork. This is the same as the
            Author property for CreativeWork.
          oneOf:
            - $ref: 'organization.yaml#/Organization'
            - $ref: 'person.yaml#/Person'
        discusses:
          $ref: 'creativework.yaml#/CreativeWork'
          description: Specifies the CreativeWork associated with the UserComment.
        replyToUrl:
          $ref: 'url.yaml#/URL'
          description: The URL at which a reply may be posted to the specified UserComment.
      type: object
  description: >-
    UserInteraction and its subtypes is an old way of talking about users
    interacting with pages. It is generally better to use <a class="localLink"
    href="http://schema.org/Action">Action</a>-based vocabulary, alongside types
    such as <a class="localLink" href="http://schema.org/Comment">Comment</a>.
UserDownloads:
  $ref: 'userinteraction.yaml#/UserInteraction'
  description: >-
    UserInteraction and its subtypes is an old way of talking about users
    interacting with pages. It is generally better to use <a class="localLink"
    href="http://schema.org/Action">Action</a>-based vocabulary, alongside types
    such as <a class="localLink" href="http://schema.org/Comment">Comment</a>.
UserInteraction:
  $ref: 'event.yaml#/Event'
  description: >-
    UserInteraction and its subtypes is an old way of talking about users
    interacting with pages. It is generally better to use <a class="localLink"
    href="http://schema.org/Action">Action</a>-based vocabulary, alongside types
    such as <a class="localLink" href="http://schema.org/Comment">Comment</a>.
UserLikes:
  $ref: 'userinteraction.yaml#/UserInteraction'
  description: >-
    UserInteraction and its subtypes is an old way of talking about users
    interacting with pages. It is generally better to use <a class="localLink"
    href="http://schema.org/Action">Action</a>-based vocabulary, alongside types
    such as <a class="localLink" href="http://schema.org/Comment">Comment</a>.
UserPageVisits:
  $ref: 'userinteraction.yaml#/UserInteraction'
  description: >-
    UserInteraction and its subtypes is an old way of talking about users
    interacting with pages. It is generally better to use <a class="localLink"
    href="http://schema.org/Action">Action</a>-based vocabulary, alongside types
    such as <a class="localLink" href="http://schema.org/Comment">Comment</a>.
UserPlays:
  $ref: 'userinteraction.yaml#/UserInteraction'
  description: >-
    UserInteraction and its subtypes is an old way of talking about users
    interacting with pages. It is generally better to use <a class="localLink"
    href="http://schema.org/Action">Action</a>-based vocabulary, alongside types
    such as <a class="localLink" href="http://schema.org/Comment">Comment</a>.
UserPlusOnes:
  $ref: 'userinteraction.yaml#/UserInteraction'
  description: >-
    UserInteraction and its subtypes is an old way of talking about users
    interacting with pages. It is generally better to use <a class="localLink"
    href="http://schema.org/Action">Action</a>-based vocabulary, alongside types
    such as <a class="localLink" href="http://schema.org/Comment">Comment</a>.
UserTweets:
  $ref: 'userinteraction.yaml#/UserInteraction'
  description: >-
    UserInteraction and its subtypes is an old way of talking about users
    interacting with pages. It is generally better to use <a class="localLink"
    href="http://schema.org/Action">Action</a>-based vocabulary, alongside types
    such as <a class="localLink" href="http://schema.org/Comment">Comment</a>.
Vehicle:
  allOf:
    - $ref: 'product.yaml#/Product'
    - properties:
        accelerationTime:
          $ref: 'quantitativevalue.yaml#/QuantitativeValue'
          description: >
            The time needed to accelerate the vehicle from a given start
            velocity to a given target velocity.<br/><br/>


            Typical unit code(s): SEC for seconds<br/><br/>


            <ul>

            <li>Note: There are unfortunately no standard unit codes for
            seconds/0..100 km/h or seconds/0..60 mph. Simply use "SEC" for
            seconds and indicate the velocities in the <a class="localLink"
            href="http://schema.org/name">name</a> of the <a class="localLink"
            href="http://schema.org/QuantitativeValue">QuantitativeValue</a>, or
            use <a class="localLink"
            href="http://schema.org/valueReference">valueReference</a> with a <a
            class="localLink"
            href="http://schema.org/QuantitativeValue">QuantitativeValue</a> of
            0..60 mph or 0..100 km/h to specify the reference speeds.</li>

            </ul>
        bodyType:
          description: >-
            Indicates the design and body style of the vehicle (e.g. station
            wagon, hatchback, etc.).
          oneOf:
            - $ref: 'qualitativevalue.yaml#/QualitativeValue'
            - $ref: 'url.yaml#/URL'
            - type: string
        cargoVolume:
          $ref: 'quantitativevalue.yaml#/QuantitativeValue'
          description: >-
            The available volume for cargo or luggage. For automobiles, this is
            usually the trunk volume.<br/><br/>


            Typical unit code(s): LTR for liters, FTQ for cubic
            foot/feet<br/><br/>


            Note: You can use <a class="localLink"
            href="http://schema.org/minValue">minValue</a> and <a
            class="localLink" href="http://schema.org/maxValue">maxValue</a> to
            indicate ranges.
        dateVehicleFirstRegistered:
          description: >-
            The date of the first registration of the vehicle with the
            respective public authorities.
          format: date
          type: string
        driveWheelConfiguration:
          description: >-
            The drive wheel configuration, i.e. which roadwheels will receive
            torque from the vehicle's engine via the drivetrain.
          oneOf:
            - $ref: 'drivewheelconfigurationvalue.yaml#/DriveWheelConfigurationValue'
            - type: string
        emissionsCO2:
          description: >-
            The CO2 emissions in g/km. When used in combination with a
            QuantitativeValue, put "g/km" into the unitText property of that
            value, since there is no UN/CEFACT Common Code for "g/km".
          type: number
        fuelCapacity:
          $ref: 'quantitativevalue.yaml#/QuantitativeValue'
          description: >-
            The capacity of the fuel tank or in the case of electric cars, the
            battery. If there are multiple components for storage, this should
            indicate the total of all storage of the same type.<br/><br/>


            Typical unit code(s): LTR for liters, GLL of US gallons, GLI for UK
            / imperial gallons, AMH for ampere-hours (for electrical vehicles).
        fuelConsumption:
          $ref: 'quantitativevalue.yaml#/QuantitativeValue'
          description: >
            The amount of fuel consumed for traveling a particular distance or
            temporal duration with the given vehicle (e.g. liters per 100
            km).<br/><br/>


            <ul>

            <li>Note 1: There are unfortunately no standard unit codes for
            liters per 100 km.  Use <a class="localLink"
            href="http://schema.org/unitText">unitText</a> to indicate the unit
            of measurement, e.g. L/100 km.</li>

            <li>Note 2: There are two ways of indicating the fuel consumption,
            <a class="localLink"
            href="http://schema.org/fuelConsumption">fuelConsumption</a> (e.g. 8
            liters per 100 km) and <a class="localLink"
            href="http://schema.org/fuelEfficiency">fuelEfficiency</a> (e.g. 30
            miles per gallon). They are reciprocal.</li>

            <li>Note 3: Often, the absolute value is useful only when related to
            driving speed ("at 80 km/h") or usage pattern ("city traffic"). You
            can use <a class="localLink"
            href="http://schema.org/valueReference">valueReference</a> to link
            the value for the fuel consumption to another value.</li>

            </ul>
        fuelEfficiency:
          $ref: 'quantitativevalue.yaml#/QuantitativeValue'
          description: >
            The distance traveled per unit of fuel used; most commonly miles per
            gallon (mpg) or kilometers per liter (km/L).<br/><br/>


            <ul>

            <li>Note 1: There are unfortunately no standard unit codes for miles
            per gallon or kilometers per liter. Use <a class="localLink"
            href="http://schema.org/unitText">unitText</a> to indicate the unit
            of measurement, e.g. mpg or km/L.</li>

            <li>Note 2: There are two ways of indicating the fuel consumption,
            <a class="localLink"
            href="http://schema.org/fuelConsumption">fuelConsumption</a> (e.g. 8
            liters per 100 km) and <a class="localLink"
            href="http://schema.org/fuelEfficiency">fuelEfficiency</a> (e.g. 30
            miles per gallon). They are reciprocal.</li>

            <li>Note 3: Often, the absolute value is useful only when related to
            driving speed ("at 80 km/h") or usage pattern ("city traffic"). You
            can use <a class="localLink"
            href="http://schema.org/valueReference">valueReference</a> to link
            the value for the fuel economy to another value.</li>

            </ul>
        fuelType:
          description: >-
            The type of fuel suitable for the engine or engines of the vehicle.
            If the vehicle has only one engine, this property can be attached
            directly to the vehicle.
          oneOf:
            - $ref: 'url.yaml#/URL'
            - $ref: 'qualitativevalue.yaml#/QualitativeValue'
            - type: string
        knownVehicleDamages:
          description: >-
            A textual description of known damages, both repaired and
            unrepaired.
          type: string
        meetsEmissionStandard:
          description: Indicates that the vehicle meets the respective emission standard.
          oneOf:
            - type: string
            - $ref: 'qualitativevalue.yaml#/QualitativeValue'
            - $ref: 'url.yaml#/URL'
        mileageFromOdometer:
          $ref: 'quantitativevalue.yaml#/QuantitativeValue'
          description: >-
            The total distance travelled by the particular vehicle since its
            initial production, as read from its odometer.<br/><br/>


            Typical unit code(s): KMT for kilometers, SMI for statute miles
        modelDate:
          description: >-
            The release date of a vehicle model (often used to differentiate
            versions of the same make and model).
          format: date
          type: string
        numberOfAirbags:
          description: The number or type of airbags in the vehicle.
          oneOf:
            - type: string
            - type: number
        numberOfAxles:
          description: |-
            The number of axles.<br/><br/>

            Typical unit code(s): C62
          oneOf:
            - type: number
            - $ref: 'quantitativevalue.yaml#/QuantitativeValue'
        numberOfDoors:
          description: |-
            The number of doors.<br/><br/>

            Typical unit code(s): C62
          oneOf:
            - type: number
            - $ref: 'quantitativevalue.yaml#/QuantitativeValue'
        numberOfForwardGears:
          description: >-
            The total number of forward gears available for the transmission
            system of the vehicle.<br/><br/>


            Typical unit code(s): C62
          oneOf:
            - type: number
            - $ref: 'quantitativevalue.yaml#/QuantitativeValue'
        numberOfPreviousOwners:
          description: >-
            The number of owners of the vehicle, including the current
            one.<br/><br/>


            Typical unit code(s): C62
          oneOf:
            - type: number
            - $ref: 'quantitativevalue.yaml#/QuantitativeValue'
        payload:
          $ref: 'quantitativevalue.yaml#/QuantitativeValue'
          description: >
            The permitted weight of passengers and cargo, EXCLUDING the weight
            of the empty vehicle.<br/><br/>


            Typical unit code(s): KGM for kilogram, LBR for pound<br/><br/>


            <ul>

            <li>Note 1: Many databases specify the permitted TOTAL weight
            instead, which is the sum of <a class="localLink"
            href="http://schema.org/weight">weight</a> and <a class="localLink"
            href="http://schema.org/payload">payload</a></li>

            <li>Note 2: You can indicate additional information in the <a
            class="localLink" href="http://schema.org/name">name</a> of the <a
            class="localLink"
            href="http://schema.org/QuantitativeValue">QuantitativeValue</a>
            node.</li>

            <li>Note 3: You may also link to a <a class="localLink"
            href="http://schema.org/QualitativeValue">QualitativeValue</a> node
            that provides additional information using <a class="localLink"
            href="http://schema.org/valueReference">valueReference</a>.</li>

            <li>Note 4: Note that you can use <a class="localLink"
            href="http://schema.org/minValue">minValue</a> and <a
            class="localLink" href="http://schema.org/maxValue">maxValue</a> to
            indicate ranges.</li>

            </ul>
        productionDate:
          description: 'The date of production of the item, e.g. vehicle.'
          format: date
          type: string
        purchaseDate:
          description: The date the item e.g. vehicle was purchased by the current owner.
          format: date
          type: string
        seatingCapacity:
          description: >-
            The number of persons that can be seated (e.g. in a vehicle), both
            in terms of the physical space available, and in terms of
            limitations set by law.<br/><br/>


            Typical unit code(s): C62 for persons
          oneOf:
            - type: number
            - $ref: 'quantitativevalue.yaml#/QuantitativeValue'
        speed:
          $ref: 'quantitativevalue.yaml#/QuantitativeValue'
          description: >-
            The speed range of the vehicle. If the vehicle is powered by an
            engine, the upper limit of the speed range (indicated by <a
            class="localLink" href="http://schema.org/maxValue">maxValue</a>
            should be the maximum speed achievable under regular
            conditions.<br/><br/>


            Typical unit code(s): KMH for km/h, HM for mile per hour (0.447 04
            m/s), KNT for knot<br/><br/>


            *Note 1: Use <a class="localLink"
            href="http://schema.org/minValue">minValue</a> and <a
            class="localLink" href="http://schema.org/maxValue">maxValue</a> to
            indicate the range. Typically, the minimal value is zero.

            * Note 2: There are many different ways of measuring the speed
            range. You can link to information about how the given value has
            been determined using the <a class="localLink"
            href="http://schema.org/valueReference">valueReference</a> property.
        steeringPosition:
          $ref: 'steeringpositionvalue.yaml#/SteeringPositionValue'
          description: >-
            The position of the steering wheel or similar device (mostly for
            cars).
        tongueWeight:
          $ref: 'quantitativevalue.yaml#/QuantitativeValue'
          description: >
            The permitted vertical load (TWR) of a trailer attached to the
            vehicle. Also referred to as Tongue Load Rating (TLR) or Vertical
            Load Rating (VLR)<br/><br/>


            Typical unit code(s): KGM for kilogram, LBR for pound<br/><br/>


            <ul>

            <li>Note 1: You can indicate additional information in the <a
            class="localLink" href="http://schema.org/name">name</a> of the <a
            class="localLink"
            href="http://schema.org/QuantitativeValue">QuantitativeValue</a>
            node.</li>

            <li>Note 2: You may also link to a <a class="localLink"
            href="http://schema.org/QualitativeValue">QualitativeValue</a> node
            that provides additional information using <a class="localLink"
            href="http://schema.org/valueReference">valueReference</a>.</li>

            <li>Note 3: Note that you can use <a class="localLink"
            href="http://schema.org/minValue">minValue</a> and <a
            class="localLink" href="http://schema.org/maxValue">maxValue</a> to
            indicate ranges.</li>

            </ul>
        trailerWeight:
          $ref: 'quantitativevalue.yaml#/QuantitativeValue'
          description: >-
            The permitted weight of a trailer attached to the vehicle.<br/><br/>


            Typical unit code(s): KGM for kilogram, LBR for pound

            * Note 1: You can indicate additional information in the <a
            class="localLink" href="http://schema.org/name">name</a> of the <a
            class="localLink"
            href="http://schema.org/QuantitativeValue">QuantitativeValue</a>
            node.

            * Note 2: You may also link to a <a class="localLink"
            href="http://schema.org/QualitativeValue">QualitativeValue</a> node
            that provides additional information using <a class="localLink"
            href="http://schema.org/valueReference">valueReference</a>.

            * Note 3: Note that you can use <a class="localLink"
            href="http://schema.org/minValue">minValue</a> and <a
            class="localLink" href="http://schema.org/maxValue">maxValue</a> to
            indicate ranges.
        vehicleConfiguration:
          description: >-
            A short text indicating the configuration of the vehicle, e.g. '5dr
            hatchback ST 2.5 MT 225 hp' or 'limited edition'.
          type: string
        vehicleEngine:
          $ref: 'enginespecification.yaml#/EngineSpecification'
          description: Information about the engine or engines of the vehicle.
        vehicleIdentificationNumber:
          description: >-
            The Vehicle Identification Number (VIN) is a unique serial number
            used by the automotive industry to identify individual motor
            vehicles.
          type: string
        vehicleInteriorColor:
          description: The color or color combination of the interior of the vehicle.
          type: string
        vehicleInteriorType:
          description: >-
            The type or material of the interior of the vehicle (e.g. synthetic
            fabric, leather, wood, etc.). While most interior types are
            characterized by the material used, an interior type can also be
            based on vehicle usage or target audience.
          type: string
        vehicleModelDate:
          description: >-
            The release date of a vehicle model (often used to differentiate
            versions of the same make and model).
          format: date
          type: string
        vehicleSeatingCapacity:
          description: >-
            The number of passengers that can be seated in the vehicle, both in
            terms of the physical space available, and in terms of limitations
            set by law.<br/><br/>


            Typical unit code(s): C62 for persons.
          oneOf:
            - type: number
            - $ref: 'quantitativevalue.yaml#/QuantitativeValue'
        vehicleSpecialUsage:
          description: >-
            Indicates whether the vehicle has been used for special purposes,
            like commercial rental, driving school, or as a taxi. The
            legislation in many countries requires this information to be
            revealed when offering a car for sale.
          oneOf:
            - description: CarUsageType type is not published yet in schema.org.
              type: object
            - type: string
        vehicleTransmission:
          description: >-
            The type of component used for transmitting the power from a
            rotating power source to the wheels or other relevant component(s)
            ("gearbox" for cars).
          oneOf:
            - $ref: 'qualitativevalue.yaml#/QualitativeValue'
            - type: string
            - $ref: 'url.yaml#/URL'
        weightTotal:
          $ref: 'quantitativevalue.yaml#/QuantitativeValue'
          description: >
            The permitted total weight of the loaded vehicle, including
            passengers and cargo and the weight of the empty vehicle.<br/><br/>


            Typical unit code(s): KGM for kilogram, LBR for pound<br/><br/>


            <ul>

            <li>Note 1: You can indicate additional information in the <a
            class="localLink" href="http://schema.org/name">name</a> of the <a
            class="localLink"
            href="http://schema.org/QuantitativeValue">QuantitativeValue</a>
            node.</li>

            <li>Note 2: You may also link to a <a class="localLink"
            href="http://schema.org/QualitativeValue">QualitativeValue</a> node
            that provides additional information using <a class="localLink"
            href="http://schema.org/valueReference">valueReference</a>.</li>

            <li>Note 3: Note that you can use <a class="localLink"
            href="http://schema.org/minValue">minValue</a> and <a
            class="localLink" href="http://schema.org/maxValue">maxValue</a> to
            indicate ranges.</li>

            </ul>
        wheelbase:
          $ref: 'quantitativevalue.yaml#/QuantitativeValue'
          description: >-
            The distance between the centers of the front and rear
            wheels.<br/><br/>


            Typical unit code(s): CMT for centimeters, MTR for meters, INH for
            inches, FOT for foot/feet
      type: object
  description: >-
    A vehicle is a device that is designed or used to transport people or cargo
    over land, water, air, or through space.
VideoGallery:
  $ref: 'collectionpage.yaml#/CollectionPage'
  description: 'Web page type: Video gallery page.'
VideoGame:
  description: >-
    A video game is an electronic game that involves human interaction with a
    user interface to generate visual feedback on a video device.
  properties:
    actor:
      $ref: 'person.yaml#/Person'
      description: >-
        An actor, e.g. in tv, radio, movie, video games etc., or in an event.
        Actors can be associated with individual items or with a series,
        episode, clip.
    actors:
      $ref: 'person.yaml#/Person'
      description: >-
        An actor, e.g. in tv, radio, movie, video games etc. Actors can be
        associated with individual items or with a series, episode, clip.
    cheatCode:
      $ref: 'creativework.yaml#/CreativeWork'
      description: Cheat codes to the game.
    director:
      $ref: 'person.yaml#/Person'
      description: >-
        A director of e.g. tv, radio, movie, video gaming etc. content, or of an
        event. Directors can be associated with individual items or with a
        series, episode, clip.
    directors:
      $ref: 'person.yaml#/Person'
      description: >-
        A director of e.g. tv, radio, movie, video games etc. content. Directors
        can be associated with individual items or with a series, episode, clip.
    gamePlatform:
      description: >-
        The electronic systems used to play <a
        href="http://en.wikipedia.org/wiki/Category:Video_game_platforms">video
        games</a>.
      oneOf:
        - $ref: 'url.yaml#/URL'
        - $ref: 'thing.yaml#/Thing'
        - type: string
    gameServer:
      $ref: 'gameserver.yaml#/GameServer'
      description: The server on which  it is possible to play the game.
    gameTip:
      $ref: 'creativework.yaml#/CreativeWork'
      description: 'Links to tips, tactics, etc.'
    musicBy:
      description: The composer of the soundtrack.
      oneOf:
        - $ref: 'person.yaml#/Person'
        - $ref: 'musicgroup.yaml#/MusicGroup'
    playMode:
      $ref: 'gameplaymode.yaml#/GamePlayMode'
      description: >-
        Indicates whether this game is multi-player, co-op or single-player. 
        The game can be marked as multi-player, co-op and single-player at the
        same time.
    trailer:
      $ref: 'videoobject.yaml#/VideoObject'
      description: 'The trailer of a movie or tv/radio series, season, episode, etc.'
VideoGameClip:
  $ref: 'clip.yaml#/Clip'
  description: A short segment/part of a video game.
VideoGameSeries:
  allOf:
    - $ref: 'creativeworkseries.yaml#/CreativeWorkSeries'
    - properties:
        actor:
          $ref: 'person.yaml#/Person'
          description: >-
            An actor, e.g. in tv, radio, movie, video games etc., or in an
            event. Actors can be associated with individual items or with a
            series, episode, clip.
        actors:
          $ref: 'person.yaml#/Person'
          description: >-
            An actor, e.g. in tv, radio, movie, video games etc. Actors can be
            associated with individual items or with a series, episode, clip.
        characterAttribute:
          $ref: 'thing.yaml#/Thing'
          description: >-
            A piece of data that represents a particular aspect of a fictional
            character (skill, power, character points, advantage, disadvantage).
        cheatCode:
          $ref: 'creativework.yaml#/CreativeWork'
          description: Cheat codes to the game.
        containsSeason:
          $ref: 'creativeworkseason.yaml#/CreativeWorkSeason'
          description: A season that is part of the media series.
        director:
          $ref: 'person.yaml#/Person'
          description: >-
            A director of e.g. tv, radio, movie, video gaming etc. content, or
            of an event. Directors can be associated with individual items or
            with a series, episode, clip.
        directors:
          $ref: 'person.yaml#/Person'
          description: >-
            A director of e.g. tv, radio, movie, video games etc. content.
            Directors can be associated with individual items or with a series,
            episode, clip.
        episode:
          $ref: 'episode.yaml#/Episode'
          description: 'An episode of a tv, radio or game media within a series or season.'
        episodes:
          $ref: 'episode.yaml#/Episode'
          description: An episode of a TV/radio series or season.
        gameItem:
          $ref: 'thing.yaml#/Thing'
          description: >-
            An item is an object within the game world that can be collected by
            a player or, occasionally, a non-player character.
        gameLocation:
          description: Real or fictional location of the game (or part of game).
          oneOf:
            - $ref: 'place.yaml#/Place'
            - $ref: 'url.yaml#/URL'
            - $ref: 'postaladdress.yaml#/PostalAddress'
        gamePlatform:
          description: >-
            The electronic systems used to play <a
            href="http://en.wikipedia.org/wiki/Category:Video_game_platforms">video
            games</a>.
          oneOf:
            - $ref: 'url.yaml#/URL'
            - type: string
            - $ref: 'thing.yaml#/Thing'
        musicBy:
          description: The composer of the soundtrack.
          oneOf:
            - $ref: 'person.yaml#/Person'
            - $ref: 'musicgroup.yaml#/MusicGroup'
        numberOfEpisodes:
          description: The number of episodes in this season or series.
          type: integer
        numberOfPlayers:
          $ref: 'quantitativevalue.yaml#/QuantitativeValue'
          description: >-
            Indicate how many people can play this game (minimum, maximum, or
            range).
        numberOfSeasons:
          description: The number of seasons in this series.
          type: integer
        playMode:
          $ref: 'gameplaymode.yaml#/GamePlayMode'
          description: >-
            Indicates whether this game is multi-player, co-op or
            single-player.  The game can be marked as multi-player, co-op and
            single-player at the same time.
        productionCompany:
          $ref: 'organization.yaml#/Organization'
          description: >-
            The production company or studio responsible for the item e.g.
            series, video game, episode etc.
        quest:
          $ref: 'thing.yaml#/Thing'
          description: >-
            The task that a player-controlled character, or group of characters
            may complete in order to gain a reward.
        season:
          $ref: 'creativeworkseason.yaml#/CreativeWorkSeason'
          description: A season in a media series.
        seasons:
          $ref: 'creativeworkseason.yaml#/CreativeWorkSeason'
          description: A season in a media series.
        trailer:
          $ref: 'videoobject.yaml#/VideoObject'
          description: 'The trailer of a movie or tv/radio series, season, episode, etc.'
      type: object
  description: A video game series.
VideoObject:
  allOf:
    - $ref: 'mediaobject.yaml#/MediaObject'
    - properties:
        actor:
          $ref: 'person.yaml#/Person'
          description: >-
            An actor, e.g. in tv, radio, movie, video games etc., or in an
            event. Actors can be associated with individual items or with a
            series, episode, clip.
        actors:
          $ref: 'person.yaml#/Person'
          description: >-
            An actor, e.g. in tv, radio, movie, video games etc. Actors can be
            associated with individual items or with a series, episode, clip.
        caption:
          description: The caption for this object.
          type: string
        director:
          $ref: 'person.yaml#/Person'
          description: >-
            A director of e.g. tv, radio, movie, video gaming etc. content, or
            of an event. Directors can be associated with individual items or
            with a series, episode, clip.
        directors:
          $ref: 'person.yaml#/Person'
          description: >-
            A director of e.g. tv, radio, movie, video games etc. content.
            Directors can be associated with individual items or with a series,
            episode, clip.
        musicBy:
          description: The composer of the soundtrack.
          oneOf:
            - $ref: 'musicgroup.yaml#/MusicGroup'
            - $ref: 'person.yaml#/Person'
        thumbnail:
          $ref: 'imageobject.yaml#/ImageObject'
          description: Thumbnail image for an image or video.
        transcript:
          description: >-
            If this MediaObject is an AudioObject or VideoObject, the transcript
            of that object.
          type: string
        videoFrameSize:
          description: The frame size of the video.
          type: string
        videoQuality:
          description: The quality of the video.
          type: string
      type: object
  description: A video file.
ViewAction:
  $ref: 'consumeaction.yaml#/ConsumeAction'
  description: The act of consuming static visual content.
VisualArtsEvent:
  $ref: 'event.yaml#/Event'
  description: 'Event type: Visual arts event.'
VisualArtwork:
  allOf:
    - $ref: 'creativework.yaml#/CreativeWork'
    - properties:
        artEdition:
          description: >-
            The number of copies when multiple copies of a piece of artwork are
            produced - e.g. for a limited edition of 20 prints, 'artEdition'
            refers to the total number of copies (in this example "20").
          oneOf:
            - type: string
            - type: integer
        artMedium:
          description: >-
            The material used. (e.g. Oil, Watercolour, Acrylic, Linoprint,
            Marble, Cyanotype, Digital, Lithograph, DryPoint, Intaglio, Pastel,
            Woodcut, Pencil, Mixed Media, etc.)
          oneOf:
            - $ref: 'url.yaml#/URL'
            - type: string
        artform:
          description: >-
            e.g. Painting, Drawing, Sculpture, Print, Photograph, Assemblage,
            Collage, etc.
          oneOf:
            - $ref: 'url.yaml#/URL'
            - type: string
        artist:
          $ref: 'person.yaml#/Person'
          description: |-
            The primary artist for a work
                in a medium other than pencils or digital line art--for example, if the
                primary artwork is done in watercolors or digital paints.
        artworkSurface:
          description: >-
            The supporting materials for the artwork, e.g. Canvas, Paper, Wood,
            Board, etc.
          oneOf:
            - $ref: 'url.yaml#/URL'
            - type: string
        colorist:
          $ref: 'person.yaml#/Person'
          description: The individual who adds color to inked drawings.
        depth:
          description: The depth of the item.
          oneOf:
            - $ref: 'distance.yaml#/Distance'
            - $ref: 'quantitativevalue.yaml#/QuantitativeValue'
        height:
          description: The height of the item.
          oneOf:
            - $ref: 'quantitativevalue.yaml#/QuantitativeValue'
            - $ref: 'distance.yaml#/Distance'
        inker:
          $ref: 'person.yaml#/Person'
          description: >-
            The individual who traces over the pencil drawings in ink after
            pencils are complete.
        letterer:
          $ref: 'person.yaml#/Person'
          description: >-
            The individual who adds lettering, including speech balloons and
            sound effects, to artwork.
        penciler:
          $ref: 'person.yaml#/Person'
          description: The individual who draws the primary narrative artwork.
        surface:
          description: >-
            A material used as a surface in some artwork, e.g. Canvas, Paper,
            Wood, Board, etc.
          oneOf:
            - $ref: 'url.yaml#/URL'
            - type: string
        width:
          description: The width of the item.
          oneOf:
            - $ref: 'quantitativevalue.yaml#/QuantitativeValue'
            - $ref: 'distance.yaml#/Distance'
      type: object
  description: A work of art that is primarily visual in character.
Volcano:
  $ref: 'landform.yaml#/Landform'
  description: 'A volcano, like Fuji san.'
VoteAction:
  allOf:
    - $ref: 'chooseaction.yaml#/ChooseAction'
    - properties:
        candidate:
          $ref: 'person.yaml#/Person'
          description: A sub property of object. The candidate subject of this action.
      type: object
  description: >-
    The act of expressing a preference from a fixed/finite/structured set of
    choices/options.
WantAction:
  $ref: 'reactaction.yaml#/ReactAction'
  description: The act of expressing a desire about the object. An agent wants an object.
WarrantyPromise:
  allOf:
    - $ref: 'structuredvalue.yaml#/StructuredValue'
    - properties:
        durationOfWarranty:
          $ref: 'quantitativevalue.yaml#/QuantitativeValue'
          description: >-
            The duration of the warranty promise. Common unitCode values are ANN
            for year, MON for months, or DAY for days.
        warrantyScope:
          $ref: 'warrantyscope.yaml#/WarrantyScope'
          description: The scope of the warranty promise.
      type: object
  description: >-
    A structured value representing the duration and scope of services that will
    be provided to a customer free of charge in case of a defect or malfunction
    of a product.
WarrantyScope:
  $ref: 'enumeration.yaml#/Enumeration'
  description: >
    A range of of services that will be provided to a customer free of charge in
    case of a defect or malfunction of a product.<br/><br/>


    Commonly used values:<br/><br/>


    <ul>

    <li>http://purl.org/goodrelations/v1#Labor-BringIn</li>

    <li>http://purl.org/goodrelations/v1#PartsAndLabor-BringIn</li>

    <li>http://purl.org/goodrelations/v1#PartsAndLabor-PickUp</li>

    </ul>
WatchAction:
  $ref: 'consumeaction.yaml#/ConsumeAction'
  description: The act of consuming dynamic/moving visual content.
Waterfall:
  $ref: 'bodyofwater.yaml#/BodyOfWater'
  description: 'A waterfall, like Niagara.'
WearAction:
  $ref: 'useaction.yaml#/UseAction'
  description: The act of dressing oneself in clothing.
WebApplication:
  allOf:
    - $ref: 'softwareapplication.yaml#/SoftwareApplication'
    - properties:
        browserRequirements:
          description: >-
            Specifies browser requirements in human-readable text. For example,
            'requires HTML5 support'.
          type: string
      type: object
  description: Web applications.
WebPage:
  allOf:
    - $ref: 'creativework.yaml#/CreativeWork'
    - properties:
        breadcrumb:
          description: >-
            A set of links that can help a user understand and navigate a
            website hierarchy.
          oneOf:
            - $ref: 'breadcrumblist.yaml#/BreadcrumbList'
            - type: string
        lastReviewed:
          description: >-
            Date on which the content on this web page was last reviewed for
            accuracy and/or completeness.
          format: date
          type: string
        mainContentOfPage:
          $ref: 'webpageelement.yaml#/WebPageElement'
          description: Indicates if this web page element is the main subject of the page.
        primaryImageOfPage:
          $ref: 'imageobject.yaml#/ImageObject'
          description: Indicates the main image on the page.
        relatedLink:
          $ref: 'url.yaml#/URL'
          description: >-
            A link related to this web page, for example to other related web
            pages.
        reviewedBy:
          description: >-
            People or organizations that have reviewed the content on this web
            page for accuracy and/or completeness.
          oneOf:
            - $ref: 'organization.yaml#/Organization'
            - $ref: 'person.yaml#/Person'
        significantLink:
          $ref: 'url.yaml#/URL'
          description: >-
            One of the more significant URLs on the page. Typically, these are
            the non-navigation links that are clicked on the most.
        significantLinks:
          $ref: 'url.yaml#/URL'
          description: >-
            The most significant URLs on the page. Typically, these are the
            non-navigation links that are clicked on the most.
        speakable:
          description: >-
            Indicates sections of a Web page that are particularly 'speakable'
            in the sense of being highlighted as being especially appropriate
            for text-to-speech conversion. Other sections of a page may also be
            usefully spoken in particular circumstances; the 'speakable'
            property serves to indicate the parts most likely to be generally
            useful for speech.<br/><br/>


            The <em>speakable</em> property can be repeated an arbitrary number
            of times, with three kinds of possible 'content-locator'
            values:<br/><br/>


            1.) <em>id-value</em> URL references - uses <em>id-value</em> of an
            element in the page being annotated. The simplest use of
            <em>speakable</em> has (potentially relative) URL values,
            referencing identified sections of the document concerned.<br/><br/>


            2.) CSS Selectors - addresses content in the annotated page, eg. via
            class attribute. Use the <a class="localLink"
            href="http://schema.org/cssSelector">cssSelector</a>
            property.<br/><br/>


            3.)  XPaths - addresses content via XPaths (assuming an XML view of
            the content). Use the <a class="localLink"
            href="http://schema.org/xpath">xpath</a> property.<br/><br/>


            For more sophisticated markup of speakable sections beyond simple ID
            references, either CSS selectors or XPath expressions to pick out
            document section(s) as speakable. For this

            we define a supporting type, <a class="localLink"
            href="http://schema.org/SpeakableSpecification">SpeakableSpecification</a> 
            which is defined to be a possible value of the <em>speakable</em>
            property.
          oneOf:
            - $ref: 'url.yaml#/URL'
            - description: SpeakableSpecification type is not published yet in schema.org.
              type: object
        specialty:
          $ref: 'specialty.yaml#/Specialty'
          description: >-
            One of the domain specialities to which this web page's content
            applies.
      type: object
  description: >-
    A web page. Every web page is implicitly assumed to be declared to be of
    type WebPage, so the various properties about that webpage, such as
    <code>breadcrumb</code> may be used. We recommend explicit declaration if
    these properties are specified, but if they are found outside of an
    itemscope, they will be assumed to be about the page.
WebPageElement:
  allOf:
    - $ref: 'creativework.yaml#/CreativeWork'
    - properties:
        cssSelector:
          description: >-
            A CSS selector, e.g. of a <a class="localLink"
            href="http://schema.org/SpeakableSpecification">SpeakableSpecification</a>
            or <a class="localLink"
            href="http://schema.org/WebPageElement">WebPageElement</a>. In the
            latter case, multiple matches within a page can constitute a single
            conceptual "Web page element". Note: CssSelectorType type is not
            published yet in schema.org.
          type: object
        xpath:
          description: >-
            An XPath, e.g. of a <a class="localLink"
            href="http://schema.org/SpeakableSpecification">SpeakableSpecification</a>
            or <a class="localLink"
            href="http://schema.org/WebPageElement">WebPageElement</a>. In the
            latter case, multiple matches within a page can constitute a single
            conceptual "Web page element". Note: XPathType type is not published
            yet in schema.org.
          type: object
      type: object
  description: 'A web page element, like a table or an image.'
WebSite:
  allOf:
    - $ref: 'creativework.yaml#/CreativeWork'
    - properties:
        issn:
          description: >-
            The International Standard Serial Number (ISSN) that identifies this
            serial publication. You can repeat this property to identify
            different formats of, or the linking ISSN (ISSN-L) for, this serial
            publication.
          type: string
      type: object
  description: >-
    A WebSite is a set of related web pages and other items typically served
    from a single web domain and accessible via URLs.
WholesaleStore:
  $ref: 'store.yaml#/Store'
  description: A wholesale store.
WinAction:
  allOf:
    - $ref: 'achieveaction.yaml#/AchieveAction'
    - properties:
        loser:
          $ref: 'person.yaml#/Person'
          description: A sub property of participant. The loser of the action.
      type: object
  description: The act of achieving victory in a competitive activity.
Winery:
  $ref: 'foodestablishment.yaml#/FoodEstablishment'
  description: A winery.
WPAdBlock:
  $ref: 'webpageelement.yaml#/WebPageElement'
  description: An advertising section of the page.
WPFooter:
  $ref: 'webpageelement.yaml#/WebPageElement'
  description: The footer section of the page.
WPHeader:
  $ref: 'webpageelement.yaml#/WebPageElement'
  description: The header section of the page.
WPSideBar:
  $ref: 'webpageelement.yaml#/WebPageElement'
  description: A sidebar section of the page.
WriteAction:
  allOf:
    - $ref: 'createaction.yaml#/CreateAction'
    - properties:
        inLanguage:
          description: >-
            The language of the content or performance or used in an action.
            Please use one of the language codes from the <a
            href="http://tools.ietf.org/html/bcp47">IETF BCP 47 standard</a>.
            See also <a class="localLink"
            href="http://schema.org/availableLanguage">availableLanguage</a>.
          oneOf:
            - type: string
            - $ref: 'language.yaml#/Language'
        language:
          $ref: 'language.yaml#/Language'
          description: A sub property of instrument. The language used on this action.
      type: object
  description: The act of authoring written creative content.
Zoo:
  $ref: 'civicstructure.yaml#/CivicStructure'
  description: A zoo.
