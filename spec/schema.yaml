# this file is auto-generated. do not change.
AboutPage:
  $ref: 'webpage.yaml#/WebPage'
AcceptAction:
  $ref: 'allocateaction.yaml#/AllocateAction'
Accommodation:
  description: >-
    An accommodation is a place that can accommodate human beings, e.g. a hotel
    room, a camping pitch, or a meeting room. Many accommodations are for
    overnight stays, but this is not a mandatory requirement.

    For more specific types of accommodations not defined in schema.org, one can
    use additionalType with external vocabularies.

    <br /><br />

    See also the <a href="/docs/hotels.html">dedicated document on the use of
    schema.org for marking up hotels and other forms of accommodations</a>.
  allOf:
    - $ref: 'place.yaml#/Place'
    - type: object
      properties:
        permittedUsage:
          type: string
          description: Indications regarding the permitted usage of the accommodation.
        numberOfRooms:
          oneOf:
            - type: number
            - $ref: 'quantitativevalue.yaml#/QuantitativeValue'
          description: >-
            The number of rooms (excluding bathrooms and closets) of the
            accommodation or lodging business.

            Typical unit code(s): ROM for room or C62 for no unit. The type of
            room can be put in the unitText property of the QuantitativeValue.
        petsAllowed:
          oneOf:
            - type: string
            - type: boolean
          description: >-
            Indicates whether pets are allowed to enter the accommodation or
            lodging business. More detailed information can be put in a text
            value.
        amenityFeature:
          $ref: 'locationfeaturespecification.yaml#/LocationFeatureSpecification'
          description: >-
            An amenity feature (e.g. a characteristic or service) of the
            Accommodation. This generic property does not make a statement about
            whether the feature is included in an offer for the main
            accommodation or available at extra costs.
        floorSize:
          $ref: 'quantitativevalue.yaml#/QuantitativeValue'
          description: >-
            The size of the accommodation, e.g. in square meter or squarefoot.

            Typical unit code(s): MTK for square meter, FTK for square foot, or
            YDK for square yard
AccountingService:
  $ref: 'financialservice.yaml#/FinancialService'
AchieveAction:
  $ref: 'action.yaml#/Action'
Action:
  description: >-
    An action performed by a direct agent and indirect participants upon a
    direct object. Optionally happens at a location with the help of an
    inanimate instrument. The execution of the action may produce a result.
    Specific action sub-type documentation specifies the exact expectation of
    each argument/role.<br/><br/>


    See also <a
    href="http://blog.schema.org/2014/04/announcing-schemaorg-actions.html">blog
    post</a> and <a href="http://schema.org/docs/actions.html">Actions overview
    document</a>.
  allOf:
    - $ref: 'thing.yaml#/Thing'
    - type: object
      properties:
        object:
          $ref: 'thing.yaml#/Thing'
          description: >-
            The object upon which the action is carried out, whose state is kept
            intact or changed. Also known as the semantic roles patient,
            affected or undergoer (which change their state) or theme (which
            doesn't). e.g. John read <em>a book</em>.
        participant:
          oneOf:
            - $ref: 'person.yaml#/Person'
            - $ref: 'organization.yaml#/Organization'
          description: >-
            Other co-agents that participated in the action indirectly. e.g.
            John wrote a book with <em>Steve</em>.
        error:
          $ref: 'thing.yaml#/Thing'
          description: 'For failed actions, more information on the cause of the failure.'
        endTime:
          type: string
          format: date-time
          description: >-
            The endTime of something. For a reserved event or service (e.g.
            FoodEstablishmentReservation), the time that it is expected to end.
            For actions that span a period of time, when the action was
            performed. e.g. John wrote a book from January to
            <em>December</em>.<br/><br/>


            Note that Event uses startDate/endDate instead of startTime/endTime,
            even when describing dates with times. This situation may be
            clarified in future revisions.
        startTime:
          type: string
          format: date-time
          description: >-
            The startTime of something. For a reserved event or service (e.g.
            FoodEstablishmentReservation), the time that it is expected to
            start. For actions that span a period of time, when the action was
            performed. e.g. John wrote a book from <em>January</em> to
            December.<br/><br/>


            Note that Event uses startDate/endDate instead of startTime/endTime,
            even when describing dates with times. This situation may be
            clarified in future revisions.
        location:
          oneOf:
            - $ref: 'place.yaml#/Place'
            - type: string
            - $ref: 'postaladdress.yaml#/PostalAddress'
          description: >-
            The location of for example where the event is happening, an
            organization is located, or where an action takes place.
        target:
          $ref: 'entrypoint.yaml#/EntryPoint'
          description: Indicates a target EntryPoint for an Action.
        actionStatus:
          $ref: 'actionstatustype.yaml#/ActionStatusType'
          description: Indicates the current disposition of the Action.
        instrument:
          $ref: 'thing.yaml#/Thing'
          description: >-
            The object that helped the agent perform the action. e.g. John wrote
            a book with <em>a pen</em>.
        result:
          $ref: 'thing.yaml#/Thing'
          description: The result produced in the action. e.g. John wrote <em>a book</em>.
        agent:
          oneOf:
            - $ref: 'organization.yaml#/Organization'
            - $ref: 'person.yaml#/Person'
          description: >-
            The direct performer or driver of the action (animate or inanimate).
            e.g. <em>John</em> wrote a book.
ActionStatusType:
  $ref: 'enumeration.yaml#/Enumeration'
ActivateAction:
  $ref: 'controlaction.yaml#/ControlAction'
AddAction:
  $ref: 'updateaction.yaml#/UpdateAction'
AdministrativeArea:
  $ref: 'place.yaml#/Place'
AdultEntertainment:
  $ref: 'entertainmentbusiness.yaml#/EntertainmentBusiness'
AggregateOffer:
  description: >-
    When a single product is associated with multiple offers (for example, the
    same pair of shoes is offered by different merchants), then AggregateOffer
    can be used.
  allOf:
    - $ref: 'offer.yaml#/Offer'
    - type: object
      properties:
        offerCount:
          type: integer
          description: The number of offers for the product.
        highPrice:
          oneOf:
            - type: number
            - type: string
          description: The highest price of all offers available.
        offers:
          $ref: 'offer.yaml#/Offer'
          description: >-
            An offer to provide this item&#x2014;for example, an offer to sell a
            product, rent the DVD of a movie, perform a service, or give away
            tickets to an event.
        lowPrice:
          oneOf:
            - type: string
            - type: number
          description: The lowest price of all offers available.
AggregateRating:
  description: The average rating based on multiple ratings or reviews.
  allOf:
    - $ref: 'rating.yaml#/Rating'
    - type: object
      properties:
        reviewCount:
          type: integer
          description: The count of total number of reviews.
        ratingCount:
          type: integer
          description: The count of total number of ratings.
        itemReviewed:
          $ref: 'thing.yaml#/Thing'
          description: The item that is being reviewed/rated.
AgreeAction:
  $ref: 'reactaction.yaml#/ReactAction'
Airline:
  description: An organization that provides flights for passengers.
  allOf:
    - $ref: 'organization.yaml#/Organization'
    - type: object
      properties:
        boardingPolicy:
          $ref: 'boardingpolicytype.yaml#/BoardingPolicyType'
          description: >-
            The type of boarding policy used by the airline (e.g. zone-based or
            group-based).
        iataCode:
          type: string
          description: IATA identifier for an airline or airport.
Airport:
  description: An airport.
  allOf:
    - $ref: 'civicstructure.yaml#/CivicStructure'
    - type: object
      properties:
        icaoCode:
          type: string
          description: ICAO identifier for an airport.
        iataCode:
          type: string
          description: IATA identifier for an airline or airport.
AlignmentObject:
  description: >-
    An intangible item that describes an alignment between a learning resource
    and a node in an educational framework.
  allOf:
    - $ref: 'intangible.yaml#/Intangible'
    - type: object
      properties:
        targetName:
          type: string
          description: The name of a node in an established educational framework.
        targetUrl:
          $ref: 'url.yaml#/URL'
          description: The URL of a node in an established educational framework.
        educationalFramework:
          type: string
          description: The framework to which the resource being described is aligned.
        alignmentType:
          type: string
          description: >-
            A category of alignment between the learning resource and the
            framework node. Recommended values include: 'assesses', 'teaches',
            'requires', 'textComplexity', 'readingLevel', 'educationalSubject',
            and 'educationalLevel'.
        targetDescription:
          type: string
          description: The description of a node in an established educational framework.
AllocateAction:
  description: The act of organizing tasks/objects/events by associating resources to it.
  allOf:
    - $ref: 'organizeaction.yaml#/OrganizeAction'
    - type: object
      properties:
        purpose:
          oneOf:
            - type: object
              description: >-
                Type: MedicalDevicePurpose This type is not published yet in
                schema.org.
            - $ref: 'thing.yaml#/Thing'
          description: A goal towards an action is taken. Can be concrete or abstract.
AmusementPark:
  $ref: 'entertainmentbusiness.yaml#/EntertainmentBusiness'
AnimalShelter:
  $ref: 'localbusiness.yaml#/LocalBusiness'
Answer:
  $ref: 'comment.yaml#/Comment'
Apartment:
  description: >-
    An apartment (in American English) or flat (in British English) is a
    self-contained housing unit (a type of residential real estate) that
    occupies only part of a building (Source: Wikipedia, the free encyclopedia,
    see <a
    href="http://en.wikipedia.org/wiki/Apartment">http://en.wikipedia.org/wiki/Apartment</a>).
  allOf:
    - $ref: 'accommodation.yaml#/Accommodation'
    - type: object
      properties:
        occupancy:
          $ref: 'quantitativevalue.yaml#/QuantitativeValue'
          description: >-
            The allowed total occupancy for the accommodation in persons
            (including infants etc). For individual accommodations, this is not
            necessarily the legal maximum but defines the permitted usage as per
            the contractual agreement (e.g. a double room used by a single
            person).

            Typical unit code(s): C62 for person
        numberOfRooms:
          oneOf:
            - $ref: 'quantitativevalue.yaml#/QuantitativeValue'
            - type: number
          description: >-
            The number of rooms (excluding bathrooms and closets) of the
            accommodation or lodging business.

            Typical unit code(s): ROM for room or C62 for no unit. The type of
            room can be put in the unitText property of the QuantitativeValue.
ApartmentComplex:
  $ref: 'residence.yaml#/Residence'
APIReference:
  description: Reference documentation for application programming interfaces (APIs).
  allOf:
    - $ref: 'techarticle.yaml#/TechArticle'
    - type: object
      properties:
        assemblyVersion:
          type: string
          description: 'Associated product/technology version. e.g., .NET Framework 4.5.'
        programmingModel:
          type: string
          description: Indicates whether API is managed or unmanaged.
        targetPlatform:
          type: string
          description: 'Type of app development: phone, Metro style, desktop, XBox, etc.'
        assembly:
          type: string
          description: 'Library file name e.g., mscorlib.dll, system.web.dll.'
        executableLibraryName:
          type: string
          description: 'Library file name e.g., mscorlib.dll, system.web.dll.'
AppendAction:
  $ref: 'insertaction.yaml#/InsertAction'
ApplyAction:
  $ref: 'organizeaction.yaml#/OrganizeAction'
Aquarium:
  $ref: 'CivicStructure.yaml#/CivicStructure'
ArriveAction:
  $ref: 'moveaction.yaml#/MoveAction'
ArtGallery:
  $ref: 'EntertainmentBusiness.yaml#/EntertainmentBusiness'
Article:
  description: >-
    An article, such as a news article or piece of investigative report.
    Newspapers and magazines have articles of many different types and this is
    intended to cover them all.<br/><br/>


    See also <a
    href="http://blog.schema.org/2014/09/schemaorg-support-for-bibliographic_2.html">blog
    post</a>.
  allOf:
    - $ref: 'creativework.yaml#/CreativeWork'
    - type: object
      properties:
        speakable:
          oneOf:
            - type: object
              description: >-
                Type: SpeakableSpecification This type is not published yet in
                schema.org.
            - $ref: 'url.yaml#/URL'
          description: >-
            Indicates sections of a Web page that are particularly 'speakable'
            in the sense of being highlighted as being especially appropriate
            for text-to-speech conversion. Other sections of a page may also be
            usefully spoken in particular circumstances; the 'speakable'
            property serves to indicate the parts most likely to be generally
            useful for speech.<br/><br/>


            The <em>speakable</em> property can be repeated an arbitrary number
            of times, with three kinds of possible 'content-locator'
            values:<br/><br/>


            1.) <em>id-value</em> URL references - uses <em>id-value</em> of an
            element in the page being annotated. The simplest use of
            <em>speakable</em> has (potentially relative) URL values,
            referencing identified sections of the document concerned.<br/><br/>


            2.) CSS Selectors - addresses content in the annotated page, eg. via
            class attribute. Use the <a class="localLink"
            href="http://schema.org/cssSelector">cssSelector</a>
            property.<br/><br/>


            3.)  XPaths - addresses content via XPaths (assuming an XML view of
            the content). Use the <a class="localLink"
            href="http://schema.org/xpath">xpath</a> property.<br/><br/>


            For more sophisticated markup of speakable sections beyond simple ID
            references, either CSS selectors or XPath expressions to pick out
            document section(s) as speakable. For this

            we define a supporting type, <a class="localLink"
            href="http://schema.org/SpeakableSpecification">SpeakableSpecification</a> 
            which is defined to be a possible value of the <em>speakable</em>
            property.
        backstory:
          oneOf:
            - $ref: 'creativework.yaml#/CreativeWork'
            - type: string
          description: >-
            For an <a class="localLink"
            href="http://schema.org/Article">Article</a>, typically a <a
            class="localLink"
            href="http://schema.org/NewsArticle">NewsArticle</a>, the backstory
            property provides a textual summary giving a brief explanation of
            why and how an article was created. In a journalistic setting this
            could include information about reporting process, methods,
            interviews, data sources, etc.
        articleSection:
          type: string
          description: >-
            Articles may belong to one or more 'sections' in a magazine or
            newspaper, such as Sports, Lifestyle, etc.
        pageStart:
          oneOf:
            - type: string
            - type: integer
          description: The page on which the work starts; for example "135" or "xiii".
        articleBody:
          type: string
          description: The actual body of the article.
        pageEnd:
          oneOf:
            - type: integer
            - type: string
          description: The page on which the work ends; for example "138" or "xvi".
        wordCount:
          type: integer
          description: The number of words in the text of the Article.
        pagination:
          type: string
          description: >-
            Any description of pages that is not separated into pageStart and
            pageEnd; for example, "1-6, 9, 55" or "10-12, 46-49".
AskAction:
  description: >
    The act of posing a question / favor to someone.<br/><br/>


    Related actions:<br/><br/>


    <ul>

    <li><a class="localLink"
    href="http://schema.org/ReplyAction">ReplyAction</a>: Appears generally as a
    response to AskAction.</li>

    </ul>
  allOf:
    - $ref: 'CommunicateAction.yaml#/CommunicateAction'
    - type: object
      properties:
        question:
          $ref: 'Question.yaml#/Question'
          description: A sub property of object. A question.
AssessAction:
  $ref: 'action.yaml#/Action'
AssignAction:
  $ref: 'allocateaction.yaml#/AllocateAction'
Attorney:
  $ref: 'legalservice.yaml#/LegalService'
Audience:
  description: 'Intended audience for an item, i.e. the group for whom the item was created.'
  allOf:
    - $ref: 'intangible.yaml#/Intangible'
    - type: object
      properties:
        audienceType:
          type: string
          description: >-
            The target group associated with a given audience (e.g. veterans,
            car owners, musicians, etc.).
        geographicArea:
          $ref: 'administrativearea.yaml#/AdministrativeArea'
          description: The geographic area associated with the audience.
AudioObject:
  description: An audio file.
  allOf:
    - $ref: 'MediaObject.yaml#/MediaObject'
    - type: object
      properties:
        transcript:
          type: string
          description: >-
            If this MediaObject is an AudioObject or VideoObject, the transcript
            of that object.
AuthorizeAction:
  description: The act of granting permission to an object.
  allOf:
    - $ref: 'allocateaction.yaml#/AllocateAction'
    - type: object
      properties:
        recipient:
          oneOf:
            - $ref: 'person.yaml#/Person'
            - $ref: 'contactpoint.yaml#/ContactPoint'
            - $ref: 'organization.yaml#/Organization'
            - $ref: 'audience.yaml#/Audience'
          description: >-
            A sub property of participant. The participant who is at the
            receiving end of the action.
AutoBodyShop:
  $ref: 'automotivebusiness.yaml#/AutomotiveBusiness'
AutoDealer:
  $ref: 'AutomotiveBusiness.yaml#/AutomotiveBusiness'
AutomatedTeller:
  $ref: 'financialservice.yaml#/FinancialService'
AutomotiveBusiness:
  $ref: 'localbusiness.yaml#/LocalBusiness'
AutoPartsStore:
  description: An auto parts store.
AutoRental:
  $ref: 'automotivebusiness.yaml#/AutomotiveBusiness'
AutoRepair:
  $ref: 'automotivebusiness.yaml#/AutomotiveBusiness'
AutoWash:
  $ref: 'automotivebusiness.yaml#/AutomotiveBusiness'
Bakery:
  $ref: 'foodestablishment.yaml#/FoodEstablishment'
BankAccount:
  description: >-
    A product or service offered by a bank whereby one may deposit, withdraw or
    transfer money and in some cases be paid interest.
  allOf:
    - $ref: 'FinancialProduct.yaml#/FinancialProduct'
    - type: object
      properties:
        accountOverdraftLimit:
          $ref: 'MonetaryAmount.yaml#/MonetaryAmount'
          description: >-
            An overdraft is an extension of credit from a lending institution
            when an account reaches zero. An overdraft allows the individual to
            continue withdrawing money even if the account has no funds in it.
            Basically the bank allows people to borrow a set amount of money.
        accountMinimumInflow:
          $ref: 'MonetaryAmount.yaml#/MonetaryAmount'
          description: A minimum amount that has to be paid in every month.
        bankAccountType:
          oneOf:
            - $ref: 'URL.yaml#/URL'
            - type: string
          description: The type of a bank account.
BankOrCreditUnion:
  $ref: 'financialservice.yaml#/FinancialService'
Barcode:
  $ref: 'imageobject.yaml#/ImageObject'
BarOrPub:
  $ref: 'foodestablishment.yaml#/FoodEstablishment'
Beach:
  $ref: 'civicstructure.yaml#/CivicStructure'
BeautySalon:
  $ref: 'healthandbeautybusiness.yaml#/HealthAndBeautyBusiness'
BedAndBreakfast:
  $ref: 'lodgingbusiness.yaml#/LodgingBusiness'
BedDetails:
  description: >-
    An entity holding detailed information about the available bed types, e.g.
    the quantity of twin beds for a hotel room. For the single case of just one
    bed of a certain type, you can use bed directly with a text. See also <a
    class="localLink" href="http://schema.org/BedType">BedType</a> (under
    development).
  allOf:
    - $ref: 'Intangible.yaml#/Intangible'
    - type: object
      properties:
        numberOfBeds:
          type: number
          description: >-
            The quantity of the given bed type available in the HotelRoom,
            Suite, House, or Apartment.
        typeOfBed:
          oneOf:
            - type: object
              description: 'Type: BedType This type is not published yet in schema.org.'
            - type: string
          description: >-
            The type of bed to which the BedDetail refers, i.e. the type of bed
            available in the quantity indicated by quantity.
BefriendAction:
  $ref: 'interactaction.yaml#/InteractAction'
BikeStore:
  $ref: 'store.yaml#/Store'
Blog:
  description: A blog.
  allOf:
    - $ref: 'creativework.yaml#/CreativeWork'
    - type: object
      properties:
        blogPosts:
          $ref: 'blogposting.yaml#/BlogPosting'
          description: The postings that are part of this blog.
        issn:
          type: string
          description: >-
            The International Standard Serial Number (ISSN) that identifies this
            serial publication. You can repeat this property to identify
            different formats of, or the linking ISSN (ISSN-L) for, this serial
            publication.
        blogPost:
          $ref: 'blogposting.yaml#/BlogPosting'
          description: A posting that is part of this blog.
BlogPosting:
  $ref: 'socialmediaposting.yaml#/SocialMediaPosting'
BoardingPolicyType:
  $ref: 'enumeration.yaml#/Enumeration'
BodyOfWater:
  $ref: 'landform.yaml#/Landform'
Book:
  description: A book.
  allOf:
    - $ref: 'creativework.yaml#/CreativeWork'
    - type: object
      properties:
        illustrator:
          $ref: 'person.yaml#/Person'
          description: The illustrator of the book.
        abridged:
          type: boolean
          description: Indicates whether the book is an abridged edition.
        bookEdition:
          type: string
          description: The edition of the book.
        bookFormat:
          $ref: 'bookformattype.yaml#/BookFormatType'
          description: The format of the book.
        isbn:
          type: string
          description: The ISBN of the book.
        numberOfPages:
          type: integer
          description: The number of pages in the book.
BookFormatType:
  $ref: 'enumeration.yaml#/Enumeration'
BookmarkAction:
  $ref: 'organizeaction.yaml#/OrganizeAction'
BookSeries:
  $ref: 'creativeworkseries.yaml#/CreativeWorkSeries'
BookStore:
  $ref: 'store.yaml#/Store'
BorrowAction:
  description: >
    The act of obtaining an object under an agreement to return it at a later
    date. Reciprocal of LendAction.<br/><br/>


    Related actions:<br/><br/>


    <ul>

    <li><a class="localLink" href="http://schema.org/LendAction">LendAction</a>:
    Reciprocal of BorrowAction.</li>

    </ul>
  allOf:
    - $ref: 'TransferAction.yaml#/TransferAction'
    - type: object
      properties:
        lender:
          oneOf:
            - $ref: 'Organization.yaml#/Organization'
            - $ref: 'Person.yaml#/Person'
          description: >-
            A sub property of participant. The person that lends the object
            being borrowed.
BowlingAlley:
  $ref: 'sportsactivitylocation.yaml#/SportsActivityLocation'
Brand:
  description: >-
    A brand is a name used by an organization or business person for labeling a
    product, product group, or similar.
  allOf:
    - $ref: 'intangible.yaml#/Intangible'
    - type: object
      properties:
        review:
          $ref: 'review.yaml#/Review'
          description: A review of the item.
        aggregateRating:
          $ref: 'aggregaterating.yaml#/AggregateRating'
          description: >-
            The overall rating, based on a collection of reviews or ratings, of
            the item.
        logo:
          oneOf:
            - $ref: 'url.yaml#/URL'
            - $ref: 'imageobject.yaml#/ImageObject'
          description: An associated logo.
BreadcrumbList:
  $ref: 'itemlist.yaml#/ItemList'
Brewery:
  $ref: 'foodestablishment.yaml#/FoodEstablishment'
Bridge:
  $ref: 'CivicStructure.yaml#/CivicStructure'
BroadcastChannel:
  description: A unique instance of a BroadcastService on a CableOrSatelliteService lineup.
  allOf:
    - $ref: 'intangible.yaml#/Intangible'
    - type: object
      properties:
        broadcastChannelId:
          type: string
          description: >-
            The unique address by which the BroadcastService can be identified
            in a provider lineup. In US, this is typically a number.
        providesBroadcastService:
          $ref: 'broadcastservice.yaml#/BroadcastService'
          description: The BroadcastService offered on this channel.
        inBroadcastLineup:
          $ref: 'cableorsatelliteservice.yaml#/CableOrSatelliteService'
          description: The CableOrSatelliteService offering the channel.
        broadcastFrequency:
          oneOf:
            - type: string
            - type: object
              description: >-
                Type: BroadcastFrequencySpecification This type is not published
                yet in schema.org.
          description: >-
            The frequency used for over-the-air broadcasts. Numeric values or
            simple ranges e.g. 87-99. In addition a shortcut idiom is supported
            for frequences of AM and FM radio channels, e.g. "87 FM".
        broadcastServiceTier:
          type: string
          description: >-
            The type of service required to have access to the channel (e.g.
            Standard or Premium).
        genre:
          oneOf:
            - type: string
            - $ref: 'url.yaml#/URL'
          description: 'Genre of the creative work, broadcast channel or group.'
BroadcastEvent:
  description: An over the air or online broadcast event.
  allOf:
    - $ref: 'publicationevent.yaml#/PublicationEvent'
    - type: object
      properties:
        broadcastOfEvent:
          $ref: 'event.yaml#/Event'
          description: >-
            The event being broadcast such as a sporting event or awards
            ceremony.
        isLiveBroadcast:
          type: boolean
          description: True is the broadcast is of a live event.
        videoFormat:
          type: string
          description: >-
            The type of screening or video broadcast used (e.g. IMAX, 3D, SD,
            HD, etc.).
BroadcastService:
  description: >-
    A delivery service through which content is provided via broadcast over the
    air or online.
  allOf:
    - $ref: 'service.yaml#/Service'
    - type: object
      properties:
        hasBroadcastChannel:
          $ref: 'broadcastchannel.yaml#/BroadcastChannel'
          description: A broadcast channel of a broadcast service.
        area:
          $ref: 'place.yaml#/Place'
          description: >-
            The area within which users can expect to reach the broadcast
            service.
        broadcastDisplayName:
          type: string
          description: >-
            The name displayed in the channel guide. For many US affiliates, it
            is the network name.
        broadcastTimezone:
          type: string
          description: >-
            The timezone in <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO
            8601 format</a> for which the service bases its broadcasts
        broadcastFrequency:
          oneOf:
            - type: string
            - type: object
              description: >-
                Type: BroadcastFrequencySpecification This type is not published
                yet in schema.org.
          description: >-
            The frequency used for over-the-air broadcasts. Numeric values or
            simple ranges e.g. 87-99. In addition a shortcut idiom is supported
            for frequences of AM and FM radio channels, e.g. "87 FM".
        broadcastAffiliateOf:
          $ref: 'organization.yaml#/Organization'
          description: The media network(s) whose content is broadcast on this station.
        broadcaster:
          $ref: 'organization.yaml#/Organization'
          description: The organization owning or operating the broadcast service.
        videoFormat:
          type: string
          description: >-
            The type of screening or video broadcast used (e.g. IMAX, 3D, SD,
            HD, etc.).
        parentService:
          $ref: 'broadcastservice.yaml#/BroadcastService'
          description: >-
            A broadcast service to which the broadcast service may belong to
            such as regional variations of a national channel.
BuddhistTemple:
  $ref: 'placeofworship.yaml#/PlaceOfWorship'
BusinessAudience:
  description: >-
    A set of characteristics belonging to businesses, e.g. who compose an item's
    target audience.
  allOf:
    - $ref: 'audience.yaml#/Audience'
    - type: object
      properties:
        yearsInOperation:
          $ref: 'quantitativevalue.yaml#/QuantitativeValue'
          description: The age of the business.
        numberOfEmployees:
          $ref: 'quantitativevalue.yaml#/QuantitativeValue'
          description: The number of employees in an organization e.g. business.
        yearlyRevenue:
          $ref: 'quantitativevalue.yaml#/QuantitativeValue'
          description: The size of the business in annual revenue.
BusinessEntityType:
  $ref: 'Enumeration.yaml#/Enumeration'
BusinessEvent:
  $ref: 'Event.yaml#/Event'
BusinessFunction:
  $ref: 'enumeration.yaml#/Enumeration'
BusReservation:
  $ref: 'reservation.yaml#/Reservation'
BusStation:
  $ref: 'civicstructure.yaml#/CivicStructure'
BusStop:
  $ref: 'civicstructure.yaml#/CivicStructure'
BusTrip:
  description: A trip on a commercial bus line.
  allOf:
    - $ref: 'trip.yaml#/Trip'
    - type: object
      properties:
        arrivalBusStop:
          oneOf:
            - $ref: 'busstop.yaml#/BusStop'
            - $ref: 'busstation.yaml#/BusStation'
          description: The stop or station from which the bus arrives.
        busNumber:
          type: string
          description: The unique identifier for the bus.
        busName:
          type: string
          description: The name of the bus (e.g. Bolt Express).
        departureBusStop:
          oneOf:
            - $ref: 'busstop.yaml#/BusStop'
            - $ref: 'busstation.yaml#/BusStation'
          description: The stop or station from which the bus departs.
BuyAction:
  description: >-
    The act of giving money to a seller in exchange for goods or services
    rendered. An agent buys an object, product, or service from a seller for a
    price. Reciprocal of SellAction.
  allOf:
    - $ref: 'tradeaction.yaml#/TradeAction'
    - type: object
      properties:
        vendor:
          oneOf:
            - $ref: 'person.yaml#/Person'
            - $ref: 'organization.yaml#/Organization'
          description: '''vendor'' is an earlier term for ''seller''.'
        seller:
          oneOf:
            - $ref: 'person.yaml#/Person'
            - $ref: 'organization.yaml#/Organization'
          description: >-
            An entity which offers (sells / leases / lends / loans) the services
            / goods.  A seller may also be a provider.
        warrantyPromise:
          $ref: 'warrantypromise.yaml#/WarrantyPromise'
          description: The warranty promise(s) included in the offer.
CableOrSatelliteService:
  $ref: 'service.yaml#/Service'
CafeOrCoffeeShop:
  $ref: 'foodestablishment.yaml#/FoodEstablishment'
Campground:
  description: >-
    A camping site, campsite, or campground is a place used for overnight stay
    in the outdoors. In British English a campsite is an area, usually divided
    into a number of pitches, where people can camp overnight using tents or
    camper vans or caravans; this British English use of the word is synonymous
    with the American English expression campground. In American English the
    term campsite generally means an area where an individual, family, group, or
    military unit can pitch a tent or parks a camper; a campground may contain
    many campsites (Source: Wikipedia, the free encyclopedia, see <a
    href="http://en.wikipedia.org/wiki/Campsite">http://en.wikipedia.org/wiki/Campsite</a>).

    <br /><br />

    See also the <a href="/docs/hotels.html">dedicated document on the use of
    schema.org for marking up hotels and other forms of accommodations</a>.
CampingPitch:
  $ref: 'accommodation.yaml#/Accommodation'
Canal:
  $ref: 'BodyOfWater.yaml#/BodyOfWater'
CancelAction:
  $ref: 'planaction.yaml#/PlanAction'
Car:
  description: 'A car is a wheeled, self-powered motor vehicle used for transportation.'
  allOf:
    - $ref: 'vehicle.yaml#/Vehicle'
    - type: object
      properties:
        roofLoad:
          $ref: 'quantitativevalue.yaml#/QuantitativeValue'
          description: >
            The permitted total weight of cargo and installations (e.g. a roof
            rack) on top of the vehicle.<br/><br/>


            Typical unit code(s): KGM for kilogram, LBR for pound<br/><br/>


            <ul>

            <li>Note 1: You can indicate additional information in the <a
            class="localLink" href="http://schema.org/name">name</a> of the <a
            class="localLink"
            href="http://schema.org/QuantitativeValue">QuantitativeValue</a>
            node.</li>

            <li>Note 2: You may also link to a <a class="localLink"
            href="http://schema.org/QualitativeValue">QualitativeValue</a> node
            that provides additional information using <a class="localLink"
            href="http://schema.org/valueReference">valueReference</a></li>

            <li>Note 3: Note that you can use <a class="localLink"
            href="http://schema.org/minValue">minValue</a> and <a
            class="localLink" href="http://schema.org/maxValue">maxValue</a> to
            indicate ranges.</li>

            </ul>
        acrissCode:
          type: string
          description: >-
            The ACRISS Car Classification Code is a code used by many car rental
            companies, for classifying vehicles. ACRISS stands for Association
            of Car Rental Industry Systems and Standards.
Casino:
  $ref: 'entertainmentbusiness.yaml#/EntertainmentBusiness'
CatholicChurch:
  $ref: 'placeofworship.yaml#/PlaceOfWorship'
Cemetery:
  $ref: 'civicstructure.yaml#/CivicStructure'
CheckAction:
  $ref: 'findaction.yaml#/FindAction'
CheckInAction:
  $ref: 'communicateaction.yaml#/CommunicateAction'
CheckOutAction:
  $ref: 'communicateaction.yaml#/CommunicateAction'
CheckoutPage:
  $ref: 'webpage.yaml#/WebPage'
ChildCare:
  $ref: 'localbusiness.yaml#/LocalBusiness'
ChildrensEvent:
  $ref: 'Event.yaml#/Event'
ChooseAction:
  description: >-
    The act of expressing a preference from a set of options or a large or
    unbounded set of choices/options.
  allOf:
    - $ref: 'assessaction.yaml#/AssessAction'
    - type: object
      properties:
        actionOption:
          oneOf:
            - $ref: 'thing.yaml#/Thing'
            - type: string
          description: A sub property of object. The options subject to this action.
        option:
          oneOf:
            - $ref: 'thing.yaml#/Thing'
            - type: string
          description: A sub property of object. The options subject to this action.
Church:
  $ref: 'PlaceOfWorship.yaml#/PlaceOfWorship'
City:
  $ref: 'administrativearea.yaml#/AdministrativeArea'
CityHall:
  $ref: 'governmentbuilding.yaml#/GovernmentBuilding'
CivicStructure:
  description: 'A public structure, such as a town hall or concert hall.'
  allOf:
    - $ref: 'place.yaml#/Place'
    - type: object
      properties:
        openingHours:
          type: string
          description: >
            The general opening hours for a business. Opening hours can be
            specified as a weekly time range, starting with days, then times per
            day. Multiple days can be listed with commas ',' separating each
            day. Day or time ranges are specified using a hyphen '-'.<br/><br/>


            <ul>

            <li>Days are specified using the following two-letter combinations:
            <code>Mo</code>, <code>Tu</code>, <code>We</code>, <code>Th</code>,
            <code>Fr</code>, <code>Sa</code>, <code>Su</code>.</li>

            <li>Times are specified using 24:00 time. For example, 3pm is
            specified as <code>15:00</code>. </li>

            <li>Here is an example: <code>&lt;time itemprop="openingHours"
            datetime=&quot;Tu,Th 16:00-20:00&quot;&gt;Tuesdays and Thursdays
            4-8pm&lt;/time&gt;</code>.</li>

            <li>If a business is open 7 days a week, then it can be specified as
            <code>&lt;time itemprop=&quot;openingHours&quot;
            datetime=&quot;Mo-Su&quot;&gt;Monday through Sunday, all
            day&lt;/time&gt;</code>.</li>

            </ul>
ClaimReview:
  description: >-
    A fact-checking review of claims made (or reported) in some creative work
    (referenced via itemReviewed).
  allOf:
    - $ref: 'review.yaml#/Review'
    - type: object
      properties:
        claimReviewed:
          type: string
          description: A short summary of the specific claims reviewed in a ClaimReview.
Clip:
  description: A short TV or radio program or a segment/part of a program.
  allOf:
    - $ref: 'CreativeWork.yaml#/CreativeWork'
    - type: object
      properties:
        partOfEpisode:
          $ref: 'Episode.yaml#/Episode'
          description: The episode to which this clip belongs.
        directors:
          $ref: 'Person.yaml#/Person'
          description: >-
            A director of e.g. tv, radio, movie, video games etc. content.
            Directors can be associated with individual items or with a series,
            episode, clip.
        partOfSeason:
          $ref: 'CreativeWorkSeason.yaml#/CreativeWorkSeason'
          description: The season to which this episode belongs.
        musicBy:
          oneOf:
            - $ref: 'MusicGroup.yaml#/MusicGroup'
            - $ref: 'Person.yaml#/Person'
          description: The composer of the soundtrack.
        clipNumber:
          oneOf:
            - type: string
            - type: integer
          description: Position of the clip within an ordered group of clips.
        actors:
          $ref: 'Person.yaml#/Person'
          description: >-
            An actor, e.g. in tv, radio, movie, video games etc. Actors can be
            associated with individual items or with a series, episode, clip.
        actor:
          $ref: 'Person.yaml#/Person'
          description: >-
            An actor, e.g. in tv, radio, movie, video games etc., or in an
            event. Actors can be associated with individual items or with a
            series, episode, clip.
        director:
          $ref: 'Person.yaml#/Person'
          description: >-
            A director of e.g. tv, radio, movie, video gaming etc. content, or
            of an event. Directors can be associated with individual items or
            with a series, episode, clip.
        partOfSeries:
          $ref: 'CreativeWorkSeries.yaml#/CreativeWorkSeries'
          description: The series to which this episode or season belongs.
ClothingStore:
  $ref: 'store.yaml#/Store'
Code:
  $ref: 'creativework.yaml#/CreativeWork'
CollectionPage:
  $ref: 'webpage.yaml#/WebPage'
CollegeOrUniversity:
  $ref: 'EducationalOrganization.yaml#/EducationalOrganization'
ComedyClub:
  $ref: 'entertainmentbusiness.yaml#/EntertainmentBusiness'
ComedyEvent:
  $ref: 'event.yaml#/Event'
Comment:
  description: >-
    A comment on an item - for example, a comment on a blog post. The comment's
    content is expressed via the <a class="localLink"
    href="http://schema.org/text">text</a> property, and its topic via <a
    class="localLink" href="http://schema.org/about">about</a>, properties
    shared with all CreativeWorks.
  allOf:
    - $ref: 'creativework.yaml#/CreativeWork'
    - type: object
      properties:
        upvoteCount:
          type: integer
          description: >-
            The number of upvotes this question, answer or comment has received
            from the community.
        parentItem:
          $ref: 'question.yaml#/Question'
          description: 'The parent of a question, answer or item in general.'
        downvoteCount:
          type: integer
          description: >-
            The number of downvotes this question, answer or comment has
            received from the community.
CommentAction:
  description: The act of generating a comment about a subject.
  allOf:
    - $ref: 'communicateaction.yaml#/CommunicateAction'
    - type: object
      properties:
        resultComment:
          $ref: 'comment.yaml#/Comment'
          description: >-
            A sub property of result. The Comment created or sent as a result of
            this action.
CommunicateAction:
  description: >-
    The act of conveying information to another person via a communication
    medium (instrument) such as speech, email, or telephone conversation.
  allOf:
    - $ref: 'interactaction.yaml#/InteractAction'
    - type: object
      properties:
        about:
          $ref: 'thing.yaml#/Thing'
          description: The subject matter of the content.
        language:
          $ref: 'language.yaml#/Language'
          description: A sub property of instrument. The language used on this action.
        recipient:
          oneOf:
            - $ref: 'person.yaml#/Person'
            - $ref: 'audience.yaml#/Audience'
            - $ref: 'contactpoint.yaml#/ContactPoint'
            - $ref: 'organization.yaml#/Organization'
          description: >-
            A sub property of participant. The participant who is at the
            receiving end of the action.
        inLanguage:
          oneOf:
            - type: string
            - $ref: 'language.yaml#/Language'
          description: >-
            The language of the content or performance or used in an action.
            Please use one of the language codes from the <a
            href="http://tools.ietf.org/html/bcp47">IETF BCP 47 standard</a>.
            See also <a class="localLink"
            href="http://schema.org/availableLanguage">availableLanguage</a>.
CompoundPriceSpecification:
  description: >-
    A compound price specification is one that bundles multiple prices that all
    apply in combination for different dimensions of consumption. Use the name
    property of the attached unit price specification for indicating the
    dimension of a price component (e.g. "electricity" or "final cleaning").
  allOf:
    - $ref: 'pricespecification.yaml#/PriceSpecification'
    - type: object
      properties:
        priceComponent:
          $ref: 'unitpricespecification.yaml#/UnitPriceSpecification'
          description: >-
            This property links to all <a class="localLink"
            href="http://schema.org/UnitPriceSpecification">UnitPriceSpecification</a>
            nodes that apply in parallel for the <a class="localLink"
            href="http://schema.org/CompoundPriceSpecification">CompoundPriceSpecification</a>
            node.
ComputerLanguage:
  $ref: 'intangible.yaml#/Intangible'
ComputerStore:
  $ref: 'store.yaml#/Store'
ConfirmAction:
  $ref: 'informaction.yaml#/InformAction'
ConsumeAction:
  description: The act of ingesting information/resources/food.
  allOf:
    - $ref: 'action.yaml#/Action'
    - type: object
      properties:
        actionAccessibilityRequirement:
          type: object
          description: >-
            A set of requirements that a must be fulfilled in order to perform
            an Action. If more than one value is specied, fulfilling one set of
            requirements will allow the Action to be performed.
        expectsAcceptanceOf:
          $ref: 'offer.yaml#/Offer'
          description: >-
            An Offer which must be accepted before the user can perform the
            Action. For example, the user may need to buy a movie before being
            able to watch it.
ContactPage:
  $ref: 'webpage.yaml#/WebPage'
ContactPoint:
  description: 'A contact point&#x2014;for example, a Customer Complaints department.'
  allOf:
    - $ref: 'structuredvalue.yaml#/StructuredValue'
    - type: object
      properties:
        productSupported:
          oneOf:
            - type: string
            - $ref: 'product.yaml#/Product'
          description: >-
            The product or service this support contact point is related to
            (such as product support for a particular product line). This can be
            a specific product or product line (e.g. "iPhone") or a general
            category of products or services (e.g. "smartphones").
        serviceArea:
          oneOf:
            - $ref: 'geoshape.yaml#/GeoShape'
            - $ref: 'place.yaml#/Place'
            - $ref: 'administrativearea.yaml#/AdministrativeArea'
          description: The geographic area where the service is provided.
        email:
          type: string
          description: Email address.
        telephone:
          type: string
          description: The telephone number.
        contactType:
          type: string
          description: >-
            A person or organization can have different contact points, for
            different purposes. For example, a sales contact point, a PR contact
            point and so on. This property is used to specify the kind of
            contact point.
        availableLanguage:
          oneOf:
            - type: string
            - $ref: 'language.yaml#/Language'
          description: >-
            A language someone may use with or at the item, service or place.
            Please use one of the language codes from the <a
            href="http://tools.ietf.org/html/bcp47">IETF BCP 47 standard</a>.
            See also <a class="localLink"
            href="http://schema.org/inLanguage">inLanguage</a>
        areaServed:
          oneOf:
            - $ref: 'place.yaml#/Place'
            - $ref: 'administrativearea.yaml#/AdministrativeArea'
            - type: string
            - $ref: 'geoshape.yaml#/GeoShape'
          description: The geographic area where a service or offered item is provided.
        hoursAvailable:
          $ref: 'openinghoursspecification.yaml#/OpeningHoursSpecification'
          description: The hours during which this service or contact is available.
        contactOption:
          $ref: 'contactpointoption.yaml#/ContactPointOption'
          description: >-
            An option available on this contact point (e.g. a toll-free number
            or support for hearing-impaired callers).
        faxNumber:
          type: string
          description: The fax number.
ContactPointOption:
  $ref: 'Enumeration.yaml#/Enumeration'
Continent:
  $ref: 'landform.yaml#/Landform'
ControlAction:
  $ref: 'action.yaml#/Action'
ConvenienceStore:
  $ref: 'store.yaml#/Store'
Conversation:
  $ref: 'creativework.yaml#/CreativeWork'
CookAction:
  description: The act of producing/preparing food.
  allOf:
    - $ref: 'createaction.yaml#/CreateAction'
    - type: object
      properties:
        recipe:
          $ref: 'recipe.yaml#/Recipe'
          description: >-
            A sub property of instrument. The recipe/instructions used to
            perform the action.
        foodEvent:
          $ref: 'foodevent.yaml#/FoodEvent'
          description: >-
            A sub property of location. The specific food event where the action
            occurred.
        foodEstablishment:
          oneOf:
            - $ref: 'foodestablishment.yaml#/FoodEstablishment'
            - $ref: 'place.yaml#/Place'
          description: >-
            A sub property of location. The specific food establishment where
            the action occurred.
Corporation:
  description: 'Organization: A business corporation.'
  allOf:
    - $ref: 'organization.yaml#/Organization'
    - type: object
      properties:
        tickerSymbol:
          type: string
          description: >-
            The exchange traded instrument associated with a Corporation object.
            The tickerSymbol is expressed as an exchange and an instrument name
            separated by a space character. For the exchange component of the
            tickerSymbol attribute, we recommend using the controlled vocabulary
            of Market Identifier Codes (MIC) specified in ISO15022.
Country:
  $ref: 'administrativearea.yaml#/AdministrativeArea'
Course:
  description: >-
    A description of an educational course which may be offered as distinct
    instances at which take place at different times or take place at different
    locations, or be offered through different media or modes of study. An
    educational course is a sequence of one or more educational events and/or
    creative works which aims to build knowledge, competence or ability of
    learners.
  allOf:
    - $ref: 'creativework.yaml#/CreativeWork'
    - type: object
      properties:
        courseCode:
          type: string
          description: >-
            The identifier for the <a class="localLink"
            href="http://schema.org/Course">Course</a> used by the course <a
            class="localLink" href="http://schema.org/provider">provider</a>
            (e.g. CS101 or 6.001).
        educationalCredentialAwarded:
          oneOf:
            - $ref: 'url.yaml#/URL'
            - type: string
          description: >-
            A description of the qualification, award, certificate, diploma or
            other educational credential awarded as a consequence of successful
            completion of this course.
        coursePrerequisites:
          oneOf:
            - type: string
            - $ref: 'course.yaml#/Course'
            - $ref: 'alignmentobject.yaml#/AlignmentObject'
          description: >-
            Requirements for taking the Course. May be completion of another <a
            class="localLink" href="http://schema.org/Course">Course</a> or a
            textual description like "permission of instructor". Requirements
            may be a pre-requisite competency, referenced using <a
            class="localLink"
            href="http://schema.org/AlignmentObject">AlignmentObject</a>.
        hasCourseInstance:
          $ref: 'courseinstance.yaml#/CourseInstance'
          description: >-
            An offering of the course at a specific time and place or through
            specific media or mode of study or to a specific section of
            students.
CourseInstance:
  description: >-
    An instance of a <a class="localLink"
    href="http://schema.org/Course">Course</a> which is distinct from other
    instances because it is offered at a different time or location or through
    different media or modes of study or to a specific section of students.
  allOf:
    - $ref: 'event.yaml#/Event'
    - type: object
      properties:
        courseMode:
          oneOf:
            - type: string
            - $ref: 'url.yaml#/URL'
          description: >-
            The medium or means of delivery of the course instance or the mode
            of study, either as a text label (e.g. "online", "onsite" or
            "blended"; "synchronous" or "asynchronous"; "full-time" or
            "part-time") or as a URL reference to a term from a controlled
            vocabulary (e.g. https://ceds.ed.gov/element/001311#Asynchronous ).
        instructor:
          $ref: 'person.yaml#/Person'
          description: >-
            A person assigned to instruct or provide instructional assistance
            for the <a class="localLink"
            href="http://schema.org/CourseInstance">CourseInstance</a>.
Courthouse:
  $ref: 'governmentbuilding.yaml#/GovernmentBuilding'
CreateAction:
  $ref: 'action.yaml#/Action'
CreativeWork:
  description: >-
    The most generic kind of creative work, including books, movies,
    photographs, software programs, etc.
  allOf:
    - $ref: 'thing.yaml#/Thing'
    - type: object
      properties:
        expires:
          type: string
          format: date
          description: >-
            Date the content expires and is no longer useful or available. For
            example a <a class="localLink"
            href="http://schema.org/VideoObject">VideoObject</a> or <a
            class="localLink"
            href="http://schema.org/NewsArticle">NewsArticle</a> whose
            availability or relevance is time-limited, or a <a class="localLink"
            href="http://schema.org/ClaimReview">ClaimReview</a> fact check
            whose publisher wants to indicate that it may no longer be relevant
            (or helpful to highlight) after some date.
        text:
          type: string
          description: The textual content of this CreativeWork.
        alternativeHeadline:
          type: string
          description: A secondary title of the CreativeWork.
        interactivityType:
          type: string
          description: >-
            The predominant mode of learning supported by the learning resource.
            Acceptable values are 'active', 'expositive', or 'mixed'.
        encodings:
          $ref: 'mediaobject.yaml#/MediaObject'
          description: A media object that encodes this CreativeWork.
        accessModeSufficient:
          type: string
          description: >-
            A list of single or combined accessModes that are sufficient to
            understand all the intellectual content of a resource. Expected
            values include:  auditory, tactile, textual, visual.
        video:
          $ref: 'videoobject.yaml#/VideoObject'
          description: An embedded video object.
        schemaVersion:
          oneOf:
            - $ref: 'url.yaml#/URL'
            - type: string
          description: >-
            Indicates (by URL or string) a particular version of a schema used
            in some CreativeWork. For example, a document could declare a
            schemaVersion using an URL such as http://schema.org/version/2.0/ if
            precise indication of schema version was required by some
            application.
        review:
          $ref: 'review.yaml#/Review'
          description: A review of the item.
        author:
          oneOf:
            - $ref: 'organization.yaml#/Organization'
            - $ref: 'person.yaml#/Person'
          description: >-
            The author of this content or rating. Please note that author is
            special in that HTML 5 provides a special mechanism for indicating
            authorship via the rel tag. That is equivalent to this and may be
            used interchangeably.
        workExample:
          $ref: 'creativework.yaml#/CreativeWork'
          description: >-
            Example/instance/realization/derivation of the concept of this
            creative work. eg. The paperback edition, first edition, or eBook.
        isBasedOn:
          oneOf:
            - $ref: 'url.yaml#/URL'
            - $ref: 'creativework.yaml#/CreativeWork'
            - $ref: 'product.yaml#/Product'
          description: >-
            A resource that was used in the creation of this resource. This term
            can be repeated for multiple sources. For example,
            http://example.com/great-multiplication-intro.html.
        contentRating:
          oneOf:
            - type: string
            - $ref: 'rating.yaml#/Rating'
          description: >-
            Official rating of a piece of content&#x2014;for example,'MPAA
            PG-13'.
        associatedMedia:
          $ref: 'mediaobject.yaml#/MediaObject'
          description: >-
            A media object that encodes this CreativeWork. This property is a
            synonym for encoding.
        spatialCoverage:
          $ref: 'place.yaml#/Place'
          description: >-
            The spatialCoverage of a CreativeWork indicates the place(s) which
            are the focus of the content. It is a subproperty of
                  contentLocation intended primarily for more technical and detailed materials. For example with a Dataset, it indicates
                  areas that the dataset describes: a dataset of New York weather would have spatialCoverage which was the place: the state of New York.
        publisher:
          oneOf:
            - $ref: 'organization.yaml#/Organization'
            - $ref: 'person.yaml#/Person'
          description: The publisher of the creative work.
        comment:
          $ref: 'comment.yaml#/Comment'
          description: 'Comments, typically from users.'
        educationalUse:
          type: string
          description: >-
            The purpose of a work in the context of education; for example,
            'assignment', 'group work'.
        isAccessibleForFree:
          type: boolean
          description: >-
            A flag to signal that the item, event, or place is accessible for
            free.
        thumbnailUrl:
          $ref: 'url.yaml#/URL'
          description: A thumbnail image relevant to the Thing.
        genre:
          oneOf:
            - $ref: 'url.yaml#/URL'
            - type: string
          description: 'Genre of the creative work, broadcast channel or group.'
        accountablePerson:
          $ref: 'person.yaml#/Person'
          description: >-
            Specifies the Person that is legally accountable for the
            CreativeWork.
        accessibilityControl:
          type: string
          description: >-
            Identifies input methods that are sufficient to fully control the
            described resource (<a
            href="http://www.w3.org/wiki/WebSchemas/Accessibility">WebSchemas
            wiki lists possible values</a>).
        funder:
          oneOf:
            - $ref: 'person.yaml#/Person'
            - $ref: 'organization.yaml#/Organization'
          description: >-
            A person or organization that supports (sponsors) something through
            some kind of financial contribution.
        isPartOf:
          oneOf:
            - $ref: 'trip.yaml#/Trip'
            - $ref: 'creativework.yaml#/CreativeWork'
          description: >-
            Indicates an item or CreativeWork that this item, or CreativeWork
            (in some sense), is part of.
        publication:
          $ref: 'publicationevent.yaml#/PublicationEvent'
          description: A publication event associated with the item.
        provider:
          oneOf:
            - $ref: 'person.yaml#/Person'
            - $ref: 'organization.yaml#/Organization'
          description: >-
            The service provider, service operator, or service performer; the
            goods producer. Another party (a seller) may offer those services or
            goods on behalf of the provider. A provider may also serve as the
            seller.
        version:
          oneOf:
            - type: string
            - type: number
          description: The version of the CreativeWork embodied by a specified resource.
        fileFormat:
          oneOf:
            - $ref: 'url.yaml#/URL'
            - type: string
          description: >-
            Media type, typically MIME format (see <a
            href="http://www.iana.org/assignments/media-types/media-types.xhtml">IANA
            site</a>) of the content e.g. application/zip of a
            SoftwareApplication binary. In cases where a CreativeWork has
            several media type representations, 'encoding' can be used to
            indicate each MediaObject alongside particular fileFormat
            information. Unregistered or niche file formats can be indicated
            instead via the most appropriate URL, e.g. defining Web page or a
            Wikipedia entry.
        contributor:
          oneOf:
            - $ref: 'organization.yaml#/Organization'
            - $ref: 'person.yaml#/Person'
          description: A secondary contributor to the CreativeWork or Event.
        accessibilityHazard:
          type: string
          description: >-
            A characteristic of the described resource that is physiologically
            dangerous to some users. Related to WCAG 2.0 guideline 2.3 (<a
            href="http://www.w3.org/wiki/WebSchemas/Accessibility">WebSchemas
            wiki lists possible values</a>).
        publisherImprint:
          $ref: 'organization.yaml#/Organization'
          description: The publishing division which published the comic.
        contentReferenceTime:
          type: string
          format: date-time
          description: >-
            The specific time described by a creative work, for works (e.g.
            articles, video objects etc.) that emphasise a particular moment
            within an Event.
        accessMode:
          type: string
          description: >-
            The human sensory perceptual system or cognitive faculty through
            which a person may process or perceive information. Expected values
            include: auditory, tactile, textual, visual, colorDependent,
            chartOnVisual, chemOnVisual, diagramOnVisual, mathOnVisual,
            musicOnVisual, textOnVisual.
        awards:
          type: string
          description: Awards won by or for this item.
        reviews:
          $ref: 'review.yaml#/Review'
          description: Review of the item.
        producer:
          oneOf:
            - $ref: 'organization.yaml#/Organization'
            - $ref: 'person.yaml#/Person'
          description: >-
            The person or organization who produced the work (e.g. music album,
            movie, tv/radio series etc.).
        contentLocation:
          $ref: 'place.yaml#/Place'
          description: >-
            The location depicted or described in the content. For example, the
            location in a photograph or painting.
        typicalAgeRange:
          type: string
          description: 'The typical expected age range, e.g. ''7-9'', ''11-''.'
        audience:
          $ref: 'audience.yaml#/Audience'
          description: 'An intended audience, i.e. a group for whom something was created.'
        exampleOfWork:
          $ref: 'creativework.yaml#/CreativeWork'
          description: >-
            A creative work that this work is an
            example/instance/realization/derivation of.
        position:
          oneOf:
            - type: string
            - type: integer
          description: The position of an item in a series or sequence of items.
        accessibilityFeature:
          type: string
          description: >-
            Content features of the resource, such as accessible media,
            alternatives and supported enhancements for accessibility (<a
            href="http://www.w3.org/wiki/WebSchemas/Accessibility">WebSchemas
            wiki lists possible values</a>).
        mainEntity:
          $ref: 'thing.yaml#/Thing'
          description: >-
            Indicates the primary entity described in some page or other
            CreativeWork.
        translationOfWork:
          $ref: 'creativework.yaml#/CreativeWork'
          description: >-
            The work that this work has been translated from. e.g. 物种起源 is a
            translationOf “On the Origin of Species”
        correction:
          oneOf:
            - $ref: 'url.yaml#/URL'
            - type: string
            - type: object
              description: >-
                Type: CorrectionComment This type is not published yet in
                schema.org.
          description: >-
            Indicates a correction to a <a class="localLink"
            href="http://schema.org/CreativeWork">CreativeWork</a>, either via a
            <a class="localLink"
            href="http://schema.org/CorrectionComment">CorrectionComment</a>,
            textually or in another document.
        dateCreated:
          oneOf:
            - type: string
              format: date
            - type: string
              format: date-time
          description: >-
            The date on which the CreativeWork was created or the item was added
            to a DataFeed.
        accessibilitySummary:
          type: string
          description: >-
            A human-readable summary of specific accessibility features or
            deficiencies, consistent with the other accessibility metadata but
            expressing subtleties such as "short descriptions are present but
            long descriptions will be needed for non-visual users" or "short
            descriptions are present and no long descriptions are needed."
        sdDatePublished:
          type: string
          format: date
          description: >-
            Indicates the date on which the current structured data was
            generated / published. Typically used alongside <a class="localLink"
            href="http://schema.org/sdPublisher">sdPublisher</a>
        headline:
          type: string
          description: Headline of the article.
        creator:
          oneOf:
            - $ref: 'person.yaml#/Person'
            - $ref: 'organization.yaml#/Organization'
          description: >-
            The creator/author of this CreativeWork. This is the same as the
            Author property for CreativeWork.
        hasPart:
          oneOf:
            - $ref: 'creativework.yaml#/CreativeWork'
            - $ref: 'trip.yaml#/Trip'
          description: >-
            Indicates an item or CreativeWork that is part of this item, or
            CreativeWork (in some sense).
        editor:
          $ref: 'person.yaml#/Person'
          description: Specifies the Person who edited the CreativeWork.
        copyrightHolder:
          oneOf:
            - $ref: 'organization.yaml#/Organization'
            - $ref: 'person.yaml#/Person'
          description: The party holding the legal copyright to the CreativeWork.
        encodingFormat:
          oneOf:
            - type: string
            - $ref: 'url.yaml#/URL'
          description: >-
            Media type typically expressed using a MIME format (see <a
            href="http://www.iana.org/assignments/media-types/media-types.xhtml">IANA
            site</a> and <a
            href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types">MDN
            reference</a>) e.g. application/zip for a SoftwareApplication
            binary, audio/mpeg for .mp3 etc.).<br/><br/>


            In cases where a <a class="localLink"
            href="http://schema.org/CreativeWork">CreativeWork</a> has several
            media type representations, <a class="localLink"
            href="http://schema.org/encoding">encoding</a> can be used to
            indicate each <a class="localLink"
            href="http://schema.org/MediaObject">MediaObject</a> alongside
            particular <a class="localLink"
            href="http://schema.org/encodingFormat">encodingFormat</a>
            information.<br/><br/>


            Unregistered or niche encoding and file formats can be indicated
            instead via the most appropriate URL, e.g. defining Web page or a
            Wikipedia/Wikidata entry.
        locationCreated:
          $ref: 'place.yaml#/Place'
          description: >-
            The location where the CreativeWork was created, which may not be
            the same as the location depicted in the CreativeWork.
        award:
          type: string
          description: An award won by or for this item.
        mentions:
          $ref: 'thing.yaml#/Thing'
          description: >-
            Indicates that the CreativeWork contains a reference to, but is not
            necessarily about a concept.
        license:
          oneOf:
            - $ref: 'url.yaml#/URL'
            - $ref: 'creativework.yaml#/CreativeWork'
          description: >-
            A license document that applies to this content, typically indicated
            by URL.
        isFamilyFriendly:
          type: boolean
          description: Indicates whether this content is family friendly.
        temporalCoverage:
          oneOf:
            - type: string
            - $ref: 'url.yaml#/URL'
            - type: string
              format: date-time
          description: >-
            The temporalCoverage of a CreativeWork indicates the period that the
            content applies to, i.e. that it describes, either as a DateTime or
            as a textual string indicating a time period in <a
            href="https://en.wikipedia.org/wiki/ISO_8601#Time_intervals">ISO
            8601 time interval format</a>. In
                  the case of a Dataset it will typically indicate the relevant time period in a precise notation (e.g. for a 2011 census dataset, the year 2011 would be written "2011/2012"). Other forms of content e.g. ScholarlyArticle, Book, TVSeries or TVEpisode may indicate their temporalCoverage in broader terms - textually or via well-known URL.
                  Written works such as books may sometimes have precise temporal coverage too, e.g. a work set in 1939 - 1945 can be indicated in ISO 8601 interval format format via "1939/1945".
        isBasedOnUrl:
          oneOf:
            - $ref: 'product.yaml#/Product'
            - $ref: 'creativework.yaml#/CreativeWork'
            - $ref: 'url.yaml#/URL'
          description: >-
            A resource that was used in the creation of this resource. This term
            can be repeated for multiple sources. For example,
            http://example.com/great-multiplication-intro.html.
        commentCount:
          type: integer
          description: >-
            The number of comments this CreativeWork (e.g. Article, Question or
            Answer) has received. This is most applicable to works published in
            Web sites with commenting system; additional comments may exist
            elsewhere.
        workTranslation:
          $ref: 'creativework.yaml#/CreativeWork'
          description: >-
            A work that is a translation of the content of this work. e.g. 西遊記
            has an English workTranslation “Journey to the West”,a German
            workTranslation “Monkeys Pilgerfahrt” and a Vietnamese  translation
            Tây du ký bình khảo.
        sourceOrganization:
          $ref: 'organization.yaml#/Organization'
          description: The Organization on whose behalf the creator was working.
        about:
          $ref: 'thing.yaml#/Thing'
          description: The subject matter of the content.
        timeRequired:
          $ref: 'duration.yaml#/Duration'
          description: >-
            Approximate or typical time it takes to work with or through this
            learning resource for the typical intended target audience, e.g.
            'P30M', 'P1H25M'.
        encoding:
          $ref: 'mediaobject.yaml#/MediaObject'
          description: >-
            A media object that encodes this CreativeWork. This property is a
            synonym for associatedMedia.
        keywords:
          type: string
          description: >-
            Keywords or tags used to describe this content. Multiple entries in
            a keywords list are typically delimited by commas.
        sponsor:
          oneOf:
            - $ref: 'organization.yaml#/Organization'
            - $ref: 'person.yaml#/Person'
          description: >-
            A person or organization that supports a thing through a pledge,
            promise, or financial contribution. e.g. a sponsor of a Medical
            Study or a corporate sponsor of an event.
        datePublished:
          type: string
          format: date
          description: Date of first broadcast/publication.
        character:
          $ref: 'person.yaml#/Person'
          description: Fictional person connected with a creative work.
        citation:
          oneOf:
            - $ref: 'creativework.yaml#/CreativeWork'
            - type: string
          description: >-
            A citation or reference to another creative work, such as another
            publication, web page, scholarly article, etc.
        discussionUrl:
          $ref: 'url.yaml#/URL'
          description: A link to the page containing the comments of the CreativeWork.
        aggregateRating:
          $ref: 'aggregaterating.yaml#/AggregateRating'
          description: >-
            The overall rating, based on a collection of reviews or ratings, of
            the item.
        releasedEvent:
          $ref: 'publicationevent.yaml#/PublicationEvent'
          description: >-
            The place and time the release was issued, expressed as a
            PublicationEvent.
        sdLicense:
          oneOf:
            - $ref: 'creativework.yaml#/CreativeWork'
            - $ref: 'url.yaml#/URL'
          description: >-
            A license document that applies to this structured data, typically
            indicated by URL.
        dateModified:
          oneOf:
            - type: string
              format: date
            - type: string
              format: date-time
          description: >-
            The date on which the CreativeWork was most recently modified or
            when the item's entry was modified within a DataFeed.
        learningResourceType:
          type: string
          description: >-
            The predominant type or kind characterizing the learning resource.
            For example, 'presentation', 'handout'.
        offers:
          $ref: 'offer.yaml#/Offer'
          description: >-
            An offer to provide this item&#x2014;for example, an offer to sell a
            product, rent the DVD of a movie, perform a service, or give away
            tickets to an event.
        educationalAlignment:
          $ref: 'alignmentobject.yaml#/AlignmentObject'
          description: An alignment to an established educational framework.
        interactionStatistic:
          $ref: 'interactioncounter.yaml#/InteractionCounter'
          description: >-
            The number of interactions for the CreativeWork using the WebSite or
            SoftwareApplication. The most specific child type of
            InteractionCounter should be used.
        translator:
          oneOf:
            - $ref: 'person.yaml#/Person'
            - $ref: 'organization.yaml#/Organization'
          description: >-
            Organization or person who adapts a creative work to different
            languages, regional differences and technical requirements of a
            target market, or that translates during some event.
        audio:
          $ref: 'audioobject.yaml#/AudioObject'
          description: An embedded audio object.
        accessibilityAPI:
          type: string
          description: >-
            Indicates that the resource is compatible with the referenced
            accessibility API (<a
            href="http://www.w3.org/wiki/WebSchemas/Accessibility">WebSchemas
            wiki lists possible values</a>).
        sdPublisher:
          oneOf:
            - $ref: 'organization.yaml#/Organization'
            - $ref: 'person.yaml#/Person'
          description: >-
            Indicates the party responsible for generating and publishing the
            current structured data markup, typically in cases where the
            structured data is derived automatically from existing published
            content but published on a different site. For example, student
            projects and open data initiatives often re-publish existing content
            with more explicitly structured metadata. The

            <a class="localLink"
            href="http://schema.org/sdPublisher">sdPublisher</a> property helps
            make such practices more explicit.
        material:
          oneOf:
            - $ref: 'product.yaml#/Product'
            - type: string
            - $ref: 'url.yaml#/URL'
          description: >-
            A material that something is made from, e.g. leather, wool, cotton,
            paper.
        recordedAt:
          $ref: 'event.yaml#/Event'
          description: >-
            The Event where the CreativeWork was recorded. The CreativeWork may
            capture all or part of the event.
        publishingPrinciples:
          oneOf:
            - $ref: 'creativework.yaml#/CreativeWork'
            - $ref: 'url.yaml#/URL'
          description: >-
            The publishingPrinciples property indicates (typically via <a
            class="localLink" href="http://schema.org/URL">URL</a>) a document
            describing the editorial principles of an <a class="localLink"
            href="http://schema.org/Organization">Organization</a> (or
            individual e.g. a <a class="localLink"
            href="http://schema.org/Person">Person</a> writing a blog) that
            relate to their activities as a publisher, e.g. ethics or diversity
            policies. When applied to a <a class="localLink"
            href="http://schema.org/CreativeWork">CreativeWork</a> (e.g. <a
            class="localLink"
            href="http://schema.org/NewsArticle">NewsArticle</a>) the principles
            are those of the party primarily responsible for the creation of the
            <a class="localLink"
            href="http://schema.org/CreativeWork">CreativeWork</a>.<br/><br/>


            While such policies are most typically expressed in natural
            language, sometimes related information (e.g. indicating a <a
            class="localLink" href="http://schema.org/funder">funder</a>) can be
            expressed using schema.org terminology.
        copyrightYear:
          type: number
          description: >-
            The year during which the claimed copyright for the CreativeWork was
            first asserted.
        inLanguage:
          oneOf:
            - type: string
            - $ref: 'language.yaml#/Language'
          description: >-
            The language of the content or performance or used in an action.
            Please use one of the language codes from the <a
            href="http://tools.ietf.org/html/bcp47">IETF BCP 47 standard</a>.
            See also <a class="localLink"
            href="http://schema.org/availableLanguage">availableLanguage</a>.
CreativeWorkSeason:
  description: 'A media season e.g. tv, radio, video game etc.'
  allOf:
    - $ref: 'creativework.yaml#/CreativeWork'
    - type: object
      properties:
        episodes:
          $ref: 'episode.yaml#/Episode'
          description: An episode of a TV/radio series or season.
        episode:
          $ref: 'episode.yaml#/Episode'
          description: 'An episode of a tv, radio or game media within a series or season.'
        trailer:
          $ref: 'videoobject.yaml#/VideoObject'
          description: 'The trailer of a movie or tv/radio series, season, episode, etc.'
        actor:
          $ref: 'person.yaml#/Person'
          description: >-
            An actor, e.g. in tv, radio, movie, video games etc., or in an
            event. Actors can be associated with individual items or with a
            series, episode, clip.
        director:
          $ref: 'person.yaml#/Person'
          description: >-
            A director of e.g. tv, radio, movie, video gaming etc. content, or
            of an event. Directors can be associated with individual items or
            with a series, episode, clip.
        partOfSeries:
          $ref: 'creativeworkseries.yaml#/CreativeWorkSeries'
          description: The series to which this episode or season belongs.
        endDate:
          oneOf:
            - type: string
              format: date
            - type: string
              format: date-time
          description: >-
            The end date and time of the item (in <a
            href="http://en.wikipedia.org/wiki/ISO_8601">ISO 8601 date
            format</a>).
        seasonNumber:
          oneOf:
            - type: integer
            - type: string
          description: Position of the season within an ordered group of seasons.
        productionCompany:
          $ref: 'organization.yaml#/Organization'
          description: >-
            The production company or studio responsible for the item e.g.
            series, video game, episode etc.
        startDate:
          oneOf:
            - type: string
              format: date-time
            - type: string
              format: date
          description: >-
            The start date and time of the item (in <a
            href="http://en.wikipedia.org/wiki/ISO_8601">ISO 8601 date
            format</a>).
        numberOfEpisodes:
          type: integer
          description: The number of episodes in this season or series.
CreativeWorkSeries:
  properties:
    issn:
      type: string
      description: >-
        The International Standard Serial Number (ISSN) that identifies this
        serial publication. You can repeat this property to identify different
        formats of, or the linking ISSN (ISSN-L) for, this serial publication.
    endDate:
      oneOf:
        - type: string
          format: date
        - type: string
          format: date-time
      description: >-
        The end date and time of the item (in <a
        href="http://en.wikipedia.org/wiki/ISO_8601">ISO 8601 date format</a>).
    startDate:
      oneOf:
        - type: string
          format: date-time
        - type: string
          format: date
      description: >-
        The start date and time of the item (in <a
        href="http://en.wikipedia.org/wiki/ISO_8601">ISO 8601 date format</a>).
CreditCard:
  properties:
    monthlyMinimumRepaymentAmount:
      oneOf:
        - $ref: 'monetaryamount.yaml#/MonetaryAmount'
        - type: number
      description: >-
        The minimum payment is the lowest amount of money that one is required
        to pay on a credit card statement each month.
Crematorium:
  $ref: 'civicstructure.yaml#/CivicStructure'
CurrencyConversionService:
  $ref: 'financialproduct.yaml#/FinancialProduct'
DanceEvent:
  $ref: 'event.yaml#/Event'
DanceGroup:
  $ref: 'performinggroup.yaml#/PerformingGroup'
DataCatalog:
  description: A collection of datasets.
  allOf:
    - $ref: 'CreativeWork.yaml#/CreativeWork'
    - type: object
      properties:
        dataset:
          $ref: 'Dataset.yaml#/Dataset'
          description: A dataset contained in this catalog.
        measurementTechnique:
          oneOf:
            - type: string
            - $ref: 'URL.yaml#/URL'
          description: >-
            A technique or technology used in a <a class="localLink"
            href="http://schema.org/Dataset">Dataset</a> (or <a
            class="localLink"
            href="http://schema.org/DataDownload">DataDownload</a>, <a
            class="localLink"
            href="http://schema.org/DataCatalog">DataCatalog</a>),

            corresponding to the method used for measuring the corresponding
            variable(s) (described using <a class="localLink"
            href="http://schema.org/variableMeasured">variableMeasured</a>).
            This is oriented towards scientific and scholarly dataset
            publication but may have broader applicability; it is not intended
            as a full representation of measurement, but rather as a high level
            summary for dataset discovery.<br/><br/>


            For example, if <a class="localLink"
            href="http://schema.org/variableMeasured">variableMeasured</a> is:
            molecule concentration, <a class="localLink"
            href="http://schema.org/measurementTechnique">measurementTechnique</a>
            could be: "mass spectrometry" or "nmr spectroscopy" or "colorimetry"
            or "immunofluorescence".<br/><br/>


            If the <a class="localLink"
            href="http://schema.org/variableMeasured">variableMeasured</a> is
            "depression rating", the <a class="localLink"
            href="http://schema.org/measurementTechnique">measurementTechnique</a>
            could be "Zung Scale" or "HAM-D" or "Beck Depression
            Inventory".<br/><br/>


            If there are several <a class="localLink"
            href="http://schema.org/variableMeasured">variableMeasured</a>
            properties recorded for some given data object, use a <a
            class="localLink"
            href="http://schema.org/PropertyValue">PropertyValue</a> for each <a
            class="localLink"
            href="http://schema.org/variableMeasured">variableMeasured</a> and
            attach the corresponding <a class="localLink"
            href="http://schema.org/measurementTechnique">measurementTechnique</a>.
DataDownload:
  description: A dataset in downloadable form.
  allOf:
    - $ref: 'mediaobject.yaml#/MediaObject'
    - type: object
      properties:
        measurementTechnique:
          oneOf:
            - $ref: 'url.yaml#/URL'
            - type: string
          description: >-
            A technique or technology used in a <a class="localLink"
            href="http://schema.org/Dataset">Dataset</a> (or <a
            class="localLink"
            href="http://schema.org/DataDownload">DataDownload</a>, <a
            class="localLink"
            href="http://schema.org/DataCatalog">DataCatalog</a>),

            corresponding to the method used for measuring the corresponding
            variable(s) (described using <a class="localLink"
            href="http://schema.org/variableMeasured">variableMeasured</a>).
            This is oriented towards scientific and scholarly dataset
            publication but may have broader applicability; it is not intended
            as a full representation of measurement, but rather as a high level
            summary for dataset discovery.<br/><br/>


            For example, if <a class="localLink"
            href="http://schema.org/variableMeasured">variableMeasured</a> is:
            molecule concentration, <a class="localLink"
            href="http://schema.org/measurementTechnique">measurementTechnique</a>
            could be: "mass spectrometry" or "nmr spectroscopy" or "colorimetry"
            or "immunofluorescence".<br/><br/>


            If the <a class="localLink"
            href="http://schema.org/variableMeasured">variableMeasured</a> is
            "depression rating", the <a class="localLink"
            href="http://schema.org/measurementTechnique">measurementTechnique</a>
            could be "Zung Scale" or "HAM-D" or "Beck Depression
            Inventory".<br/><br/>


            If there are several <a class="localLink"
            href="http://schema.org/variableMeasured">variableMeasured</a>
            properties recorded for some given data object, use a <a
            class="localLink"
            href="http://schema.org/PropertyValue">PropertyValue</a> for each <a
            class="localLink"
            href="http://schema.org/variableMeasured">variableMeasured</a> and
            attach the corresponding <a class="localLink"
            href="http://schema.org/measurementTechnique">measurementTechnique</a>.
DataFeed:
  description: >-
    A single feed providing structured information about one or more entities or
    topics.
  allOf:
    - $ref: 'dataset.yaml#/Dataset'
    - type: object
      properties:
        dataFeedElement:
          oneOf:
            - $ref: 'datafeeditem.yaml#/DataFeedItem'
            - $ref: 'thing.yaml#/Thing'
            - type: string
          description: An item within in a data feed. Data feeds may have many elements.
DataFeedItem:
  description: A single item within a larger data feed.
  allOf:
    - $ref: 'intangible.yaml#/Intangible'
    - type: object
      properties:
        item:
          $ref: 'thing.yaml#/Thing'
          description: >-
            An entity represented by an entry in a list or data feed (e.g. an
            'artist' in a list of 'artists')’.
        dateDeleted:
          type: string
          format: date-time
          description: The datetime the item was removed from the DataFeed.
        dateModified:
          oneOf:
            - type: string
              format: date
            - type: string
              format: date-time
          description: >-
            The date on which the CreativeWork was most recently modified or
            when the item's entry was modified within a DataFeed.
        dateCreated:
          oneOf:
            - type: string
              format: date-time
            - type: string
              format: date
          description: >-
            The date on which the CreativeWork was created or the item was added
            to a DataFeed.
Dataset:
  description: A body of structured information describing some topic(s) of interest.
  allOf:
    - $ref: 'CreativeWork.yaml#/CreativeWork'
    - type: object
      properties:
        catalog:
          $ref: 'DataCatalog.yaml#/DataCatalog'
          description: A data catalog which contains this dataset.
        datasetTimeInterval:
          type: string
          format: date-time
          description: >-
            The range of temporal applicability of a dataset, e.g. for a 2011
            census dataset, the year 2011 (in ISO 8601 time interval format).
        variableMeasured:
          oneOf:
            - $ref: 'PropertyValue.yaml#/PropertyValue'
            - type: string
          description: >-
            The variableMeasured property can indicate (repeated as necessary)
            the  variables that are measured in some dataset, either described
            as text or as pairs of identifier and description using
            PropertyValue.
        issn:
          type: string
          description: >-
            The International Standard Serial Number (ISSN) that identifies this
            serial publication. You can repeat this property to identify
            different formats of, or the linking ISSN (ISSN-L) for, this serial
            publication.
        distribution:
          $ref: 'DataDownload.yaml#/DataDownload'
          description: >-
            A downloadable form of this dataset, at a specific location, in a
            specific format.
        spatial:
          $ref: 'Place.yaml#/Place'
          description: >-
            The range of spatial applicability of a dataset, e.g. for a dataset
            of New York weather, the state of New York.
        includedDataCatalog:
          $ref: 'DataCatalog.yaml#/DataCatalog'
          description: >-
            A data catalog which contains this dataset (this property was
            previously 'catalog', preferred name is now
            'includedInDataCatalog').
        includedInDataCatalog:
          $ref: 'DataCatalog.yaml#/DataCatalog'
          description: A data catalog which contains this dataset.
        measurementTechnique:
          oneOf:
            - $ref: 'URL.yaml#/URL'
            - type: string
          description: >-
            A technique or technology used in a <a class="localLink"
            href="http://schema.org/Dataset">Dataset</a> (or <a
            class="localLink"
            href="http://schema.org/DataDownload">DataDownload</a>, <a
            class="localLink"
            href="http://schema.org/DataCatalog">DataCatalog</a>),

            corresponding to the method used for measuring the corresponding
            variable(s) (described using <a class="localLink"
            href="http://schema.org/variableMeasured">variableMeasured</a>).
            This is oriented towards scientific and scholarly dataset
            publication but may have broader applicability; it is not intended
            as a full representation of measurement, but rather as a high level
            summary for dataset discovery.<br/><br/>


            For example, if <a class="localLink"
            href="http://schema.org/variableMeasured">variableMeasured</a> is:
            molecule concentration, <a class="localLink"
            href="http://schema.org/measurementTechnique">measurementTechnique</a>
            could be: "mass spectrometry" or "nmr spectroscopy" or "colorimetry"
            or "immunofluorescence".<br/><br/>


            If the <a class="localLink"
            href="http://schema.org/variableMeasured">variableMeasured</a> is
            "depression rating", the <a class="localLink"
            href="http://schema.org/measurementTechnique">measurementTechnique</a>
            could be "Zung Scale" or "HAM-D" or "Beck Depression
            Inventory".<br/><br/>


            If there are several <a class="localLink"
            href="http://schema.org/variableMeasured">variableMeasured</a>
            properties recorded for some given data object, use a <a
            class="localLink"
            href="http://schema.org/PropertyValue">PropertyValue</a> for each <a
            class="localLink"
            href="http://schema.org/variableMeasured">variableMeasured</a> and
            attach the corresponding <a class="localLink"
            href="http://schema.org/measurementTechnique">measurementTechnique</a>.
        temporal:
          type: string
          format: date-time
          description: >-
            The range of temporal applicability of a dataset, e.g. for a 2011
            census dataset, the year 2011 (in ISO 8601 time interval format).
DataType:
  type: object
  description: 'Type: rdfs:Class This type is not published yet in schema.org.'
DatedMoneySpecification:
  description: >-
    A DatedMoneySpecification represents monetary values with optional start and
    end dates. For example, this could represent an employee's salary over a
    specific period of time. <strong>Note:</strong> This type has been
    superseded by <a class="localLink"
    href="http://schema.org/MonetaryAmount">MonetaryAmount</a> use of that type
    is recommended
  allOf:
    - $ref: 'structuredvalue.yaml#/StructuredValue'
    - type: object
      properties:
        endDate:
          oneOf:
            - type: string
              format: date
            - type: string
              format: date-time
          description: >-
            The end date and time of the item (in <a
            href="http://en.wikipedia.org/wiki/ISO_8601">ISO 8601 date
            format</a>).
        currency:
          type: string
          description:
            - >-
              The currency in which the monetary amount is expressed.<br/><br/>


              Use standard formats: <a
              href="http://en.wikipedia.org/wiki/ISO_4217">ISO 4217 currency
              format</a> e.g. "USD"; <a
              href="https://en.wikipedia.org/wiki/List_of_cryptocurrencies">Ticker
              symbol</a> for cryptocurrencies e.g. "BTC"; well known names for
              <a
              href="https://en.wikipedia.org/wiki/Local_exchange_trading_system">Local
              Exchange Tradings Systems</a> (LETS) and other currency types e.g.
              "Ithaca HOUR".
            - >-
              The currency in which the monetary amount is expressed (in
              3-letter <a href="http://en.wikipedia.org/wiki/ISO_4217">ISO
              4217</a> format).
        amount:
          oneOf:
            - type: number
            - $ref: 'monetaryamount.yaml#/MonetaryAmount'
          description: The amount of money.
        startDate:
          oneOf:
            - type: string
              format: date
            - type: string
              format: date-time
          description: >-
            The start date and time of the item (in <a
            href="http://en.wikipedia.org/wiki/ISO_8601">ISO 8601 date
            format</a>).
DayOfWeek:
  $ref: 'enumeration.yaml#/Enumeration'
DaySpa:
  $ref: 'healthandbeautybusiness.yaml#/HealthAndBeautyBusiness'
DeactivateAction:
  $ref: 'controlaction.yaml#/ControlAction'
DefenceEstablishment:
  $ref: 'governmentbuilding.yaml#/GovernmentBuilding'
DeleteAction:
  $ref: 'updateaction.yaml#/UpdateAction'
DeliveryChargeSpecification:
  description: The price for the delivery of an offer using a particular delivery method.
  allOf:
    - $ref: 'pricespecification.yaml#/PriceSpecification'
    - type: object
      properties:
        ineligibleRegion:
          oneOf:
            - $ref: 'geoshape.yaml#/GeoShape'
            - type: string
            - $ref: 'place.yaml#/Place'
          description: >-
            The ISO 3166-1 (ISO 3166-1 alpha-2) or ISO 3166-2 code, the place,
            or the GeoShape for the geo-political region(s) for which the offer
            or delivery charge specification is not valid, e.g. a region where
            the transaction is not allowed.<br/><br/>


            See also <a class="localLink"
            href="http://schema.org/eligibleRegion">eligibleRegion</a>.
        areaServed:
          oneOf:
            - $ref: 'place.yaml#/Place'
            - type: string
            - $ref: 'administrativearea.yaml#/AdministrativeArea'
            - $ref: 'geoshape.yaml#/GeoShape'
          description: The geographic area where a service or offered item is provided.
        appliesToDeliveryMethod:
          $ref: 'deliverymethod.yaml#/DeliveryMethod'
          description: >-
            The delivery method(s) to which the delivery charge or payment
            charge specification applies.
        eligibleRegion:
          oneOf:
            - $ref: 'place.yaml#/Place'
            - type: string
            - $ref: 'geoshape.yaml#/GeoShape'
          description: >-
            The ISO 3166-1 (ISO 3166-1 alpha-2) or ISO 3166-2 code, the place,
            or the GeoShape for the geo-political region(s) for which the offer
            or delivery charge specification is valid.<br/><br/>


            See also <a class="localLink"
            href="http://schema.org/ineligibleRegion">ineligibleRegion</a>.
DeliveryEvent:
  description: An event involving the delivery of an item.
  allOf:
    - $ref: 'event.yaml#/Event'
    - type: object
      properties:
        accessCode:
          type: string
          description: >-
            Password, PIN, or access code needed for delivery (e.g. from a
            locker).
        hasDeliveryMethod:
          $ref: 'deliverymethod.yaml#/DeliveryMethod'
          description: Method used for delivery or shipping.
        availableThrough:
          type: string
          format: date-time
          description: 'After this date, the item will no longer be available for pickup.'
        availableFrom:
          type: string
          format: date-time
          description: 'When the item is available for pickup from the store, locker, etc.'
DeliveryMethod:
  $ref: 'enumeration.yaml#/Enumeration'
Demand:
  description: >-
    A demand entity represents the public, not necessarily binding, not
    necessarily exclusive, announcement by an organization or person to seek a
    certain type of goods or services. For describing demand using this type,
    the very same properties used for Offer apply.
  allOf:
    - $ref: 'Intangible.yaml#/Intangible'
    - type: object
      properties:
        inventoryLevel:
          $ref: 'QuantitativeValue.yaml#/QuantitativeValue'
          description: The current approximate inventory level for the item or items.
        gtin8:
          type: string
          description: >-
            The <a
            href="http://apps.gs1.org/GDD/glossary/Pages/GTIN-8.aspx">GTIN-8</a>
            code of the product, or the product to which the offer refers. This
            code is also known as EAN/UCC-8 or 8-digit EAN. See <a
            href="http://www.gs1.org/barcodes/technical/idkeys/gtin">GS1 GTIN
            Summary</a> for more details.
        validThrough:
          type: string
          format: date-time
          description: >-
            The date after when the item is not valid. For example the end of an
            offer, salary period, or a period of opening hours.
        includesObject:
          $ref: 'TypeAndQuantityNode.yaml#/TypeAndQuantityNode'
          description: >-
            This links to a node or nodes indicating the exact quantity of the
            products included in the offer.
        warranty:
          $ref: 'WarrantyPromise.yaml#/WarrantyPromise'
          description: The warranty promise(s) included in the offer.
        advanceBookingRequirement:
          $ref: 'QuantitativeValue.yaml#/QuantitativeValue'
          description: >-
            The amount of time that is required between accepting the offer and
            the actual usage of the resource or service.
        availabilityEnds:
          type: string
          format: date-time
          description: >-
            The end of the availability of the product or service included in
            the offer.
        businessFunction:
          $ref: 'BusinessFunction.yaml#/BusinessFunction'
          description: >-
            The business function (e.g. sell, lease, repair, dispose) of the
            offer or component of a bundle (TypeAndQuantityNode). The default is
            http://purl.org/goodrelations/v1#Sell.
        validFrom:
          type: string
          format: date-time
          description: The date when the item becomes valid.
        gtin14:
          type: string
          description: >-
            The GTIN-14 code of the product, or the product to which the offer
            refers. See <a
            href="http://www.gs1.org/barcodes/technical/idkeys/gtin">GS1 GTIN
            Summary</a> for more details.
        gtin13:
          type: string
          description: >-
            The GTIN-13 code of the product, or the product to which the offer
            refers. This is equivalent to 13-digit ISBN codes and EAN UCC-13.
            Former 12-digit UPC codes can be converted into a GTIN-13 code by
            simply adding a preceeding zero. See <a
            href="http://www.gs1.org/barcodes/technical/idkeys/gtin">GS1 GTIN
            Summary</a> for more details.
        gtin12:
          type: string
          description: >-
            The GTIN-12 code of the product, or the product to which the offer
            refers. The GTIN-12 is the 12-digit GS1 Identification Key composed
            of a U.P.C. Company Prefix, Item Reference, and Check Digit used to
            identify trade items. See <a
            href="http://www.gs1.org/barcodes/technical/idkeys/gtin">GS1 GTIN
            Summary</a> for more details.
        itemCondition:
          $ref: 'OfferItemCondition.yaml#/OfferItemCondition'
          description: >-
            A predefined value from OfferItemCondition or a textual description
            of the condition of the product or service, or the products or
            services included in the offer.
        ineligibleRegion:
          oneOf:
            - $ref: 'GeoShape.yaml#/GeoShape'
            - $ref: 'Place.yaml#/Place'
            - type: string
          description: >-
            The ISO 3166-1 (ISO 3166-1 alpha-2) or ISO 3166-2 code, the place,
            or the GeoShape for the geo-political region(s) for which the offer
            or delivery charge specification is not valid, e.g. a region where
            the transaction is not allowed.<br/><br/>


            See also <a class="localLink"
            href="http://schema.org/eligibleRegion">eligibleRegion</a>.
        areaServed:
          oneOf:
            - $ref: 'Place.yaml#/Place'
            - $ref: 'GeoShape.yaml#/GeoShape'
            - type: string
            - $ref: 'AdministrativeArea.yaml#/AdministrativeArea'
          description: The geographic area where a service or offered item is provided.
        availabilityStarts:
          type: string
          format: date-time
          description: >-
            The beginning of the availability of the product or service included
            in the offer.
        eligibleTransactionVolume:
          $ref: 'PriceSpecification.yaml#/PriceSpecification'
          description: >-
            The transaction volume, in a monetary unit, for which the offer or
            price specification is valid, e.g. for indicating a minimal
            purchasing volume, to express free shipping above a certain order
            volume, or to limit the acceptance of credit cards to purchases to a
            certain minimal amount.
        sku:
          type: string
          description: >-
            The Stock Keeping Unit (SKU), i.e. a merchant-specific identifier
            for a product or service, or the product to which the offer refers.
        eligibleCustomerType:
          $ref: 'BusinessEntityType.yaml#/BusinessEntityType'
          description: The type(s) of customers for which the given offer is valid.
        deliveryLeadTime:
          $ref: 'QuantitativeValue.yaml#/QuantitativeValue'
          description: >-
            The typical delay between the receipt of the order and the goods
            either leaving the warehouse or being prepared for pickup, in case
            the delivery method is on site pickup.
        priceSpecification:
          $ref: 'PriceSpecification.yaml#/PriceSpecification'
          description: >-
            One or more detailed price specifications, indicating the unit price
            and delivery or payment charges.
        eligibleRegion:
          oneOf:
            - type: string
            - $ref: 'Place.yaml#/Place'
            - $ref: 'GeoShape.yaml#/GeoShape'
          description: >-
            The ISO 3166-1 (ISO 3166-1 alpha-2) or ISO 3166-2 code, the place,
            or the GeoShape for the geo-political region(s) for which the offer
            or delivery charge specification is valid.<br/><br/>


            See also <a class="localLink"
            href="http://schema.org/ineligibleRegion">ineligibleRegion</a>.
        mpn:
          type: string
          description: >-
            The Manufacturer Part Number (MPN) of the product, or the product to
            which the offer refers.
        availableAtOrFrom:
          $ref: 'Place.yaml#/Place'
          description: >-
            The place(s) from which the offer can be obtained (e.g. store
            locations).
        seller:
          oneOf:
            - $ref: 'Organization.yaml#/Organization'
            - $ref: 'Person.yaml#/Person'
          description: >-
            An entity which offers (sells / leases / lends / loans) the services
            / goods.  A seller may also be a provider.
        acceptedPaymentMethod:
          oneOf:
            - $ref: 'LoanOrCredit.yaml#/LoanOrCredit'
            - $ref: 'PaymentMethod.yaml#/PaymentMethod'
          description: The payment method(s) accepted by seller for this offer.
        eligibleDuration:
          $ref: 'QuantitativeValue.yaml#/QuantitativeValue'
          description: The duration for which the given offer is valid.
        availability:
          $ref: 'ItemAvailability.yaml#/ItemAvailability'
          description: >-
            The availability of this item&#x2014;for example In stock, Out of
            stock, Pre-order, etc.
        serialNumber:
          type: string
          description: >-
            The serial number or any alphanumeric identifier of a particular
            product. When attached to an offer, it is a shortcut for the serial
            number of the product included in the offer.
        eligibleQuantity:
          $ref: 'QuantitativeValue.yaml#/QuantitativeValue'
          description: >-
            The interval and unit of measurement of ordering quantities for
            which the offer or price specification is valid. This allows e.g.
            specifying that a certain freight charge is valid only for a certain
            quantity.
        itemOffered:
          oneOf:
            - $ref: 'Service.yaml#/Service'
            - $ref: 'Product.yaml#/Product'
          description: The item being offered.
        availableDeliveryMethod:
          $ref: 'DeliveryMethod.yaml#/DeliveryMethod'
          description: The delivery method(s) available for this offer.
Dentist:
  description: A dentist.
DepartAction:
  $ref: 'moveaction.yaml#/MoveAction'
DepartmentStore:
  $ref: 'store.yaml#/Store'
DepositAccount:
  description: >-
    A type of Bank Account with a main purpose of depositing funds to gain
    interest or other benefits.
DigitalDocument:
  description: An electronic file or document.
  allOf:
    - $ref: 'creativework.yaml#/CreativeWork'
    - type: object
      properties:
        hasDigitalDocumentPermission:
          $ref: 'digitaldocumentpermission.yaml#/DigitalDocumentPermission'
          description: >-
            A permission related to the access to this document (e.g. permission
            to read or write an electronic document). For a public document,
            specify a grantee with an Audience with audienceType equal to
            "public".
DigitalDocumentPermission:
  description: A permission for a particular person or group to access a particular file.
  allOf:
    - $ref: 'intangible.yaml#/Intangible'
    - type: object
      properties:
        grantee:
          oneOf:
            - $ref: 'person.yaml#/Person'
            - $ref: 'audience.yaml#/Audience'
            - $ref: 'contactpoint.yaml#/ContactPoint'
            - $ref: 'organization.yaml#/Organization'
          description: >-
            The person, organization, contact point, or audience that has been
            granted this permission.
        permissionType:
          $ref: 'digitaldocumentpermissiontype.yaml#/DigitalDocumentPermissionType'
          description: >-
            The type of permission granted the person, organization, or
            audience.
DigitalDocumentPermissionType:
  $ref: 'enumeration.yaml#/Enumeration'
DisagreeAction:
  $ref: 'ReactAction.yaml#/ReactAction'
DiscoverAction:
  $ref: 'findaction.yaml#/FindAction'
DiscussionForumPosting:
  $ref: 'socialmediaposting.yaml#/SocialMediaPosting'
DislikeAction:
  $ref: 'reactaction.yaml#/ReactAction'
Distance:
  $ref: 'quantity.yaml#/Quantity'
DonateAction:
  description: >-
    The act of providing goods, services, or money without compensation, often
    for philanthropic reasons.
  allOf:
    - $ref: 'TradeAction.yaml#/TradeAction'
    - type: object
      properties:
        recipient:
          oneOf:
            - $ref: 'Audience.yaml#/Audience'
            - $ref: 'ContactPoint.yaml#/ContactPoint'
            - $ref: 'Person.yaml#/Person'
            - $ref: 'Organization.yaml#/Organization'
          description: >-
            A sub property of participant. The participant who is at the
            receiving end of the action.
DownloadAction:
  $ref: 'transferaction.yaml#/TransferAction'
DrawAction:
  $ref: 'createaction.yaml#/CreateAction'
DrinkAction:
  $ref: 'consumeaction.yaml#/ConsumeAction'
DriveWheelConfigurationValue:
  $ref: 'qualitativevalue.yaml#/QualitativeValue'
DryCleaningOrLaundry:
  $ref: 'LocalBusiness.yaml#/LocalBusiness'
Duration:
  $ref: 'quantity.yaml#/Quantity'
EatAction:
  $ref: 'consumeaction.yaml#/ConsumeAction'
EducationalAudience:
  description: An EducationalAudience.
  allOf:
    - $ref: 'audience.yaml#/Audience'
    - type: object
      properties:
        educationalRole:
          type: string
          description: An educationalRole of an EducationalAudience.
EducationalOrganization:
  description: An educational organization.
  allOf:
    - $ref: 'organization.yaml#/Organization'
    - type: object
      properties:
        alumni:
          $ref: 'person.yaml#/Person'
          description: Alumni of an organization.
EducationEvent:
  $ref: 'event.yaml#/Event'
Electrician:
  $ref: 'homeandconstructionbusiness.yaml#/HomeAndConstructionBusiness'
ElectronicsStore:
  $ref: 'store.yaml#/Store'
ElementarySchool:
  $ref: 'educationalorganization.yaml#/EducationalOrganization'
EmailMessage:
  $ref: 'message.yaml#/Message'
Embassy:
  $ref: 'governmentbuilding.yaml#/GovernmentBuilding'
EmergencyService:
  $ref: 'localbusiness.yaml#/LocalBusiness'
EmployeeRole:
  description: A subclass of OrganizationRole used to describe employee relationships.
  allOf:
    - $ref: 'organizationrole.yaml#/OrganizationRole'
    - type: object
      properties:
        salaryCurrency:
          type: string
          description: >-
            The currency (coded using <a
            href="http://en.wikipedia.org/wiki/ISO_4217">ISO 4217</a> ) used for
            the main salary information in this job posting or for this
            employee.
        baseSalary:
          oneOf:
            - $ref: 'pricespecification.yaml#/PriceSpecification'
            - $ref: 'monetaryamount.yaml#/MonetaryAmount'
            - type: number
          description: The base salary of the job or of an employee in an EmployeeRole.
EmploymentAgency:
  $ref: 'localbusiness.yaml#/LocalBusiness'
EndorseAction:
  description: An agent approves/certifies/likes/supports/sanction an object.
  allOf:
    - $ref: 'reactaction.yaml#/ReactAction'
    - type: object
      properties:
        endorsee:
          oneOf:
            - $ref: 'organization.yaml#/Organization'
            - $ref: 'person.yaml#/Person'
          description: >-
            A sub property of participant. The person/organization being
            supported.
Energy:
  $ref: 'quantity.yaml#/Quantity'
EngineSpecification:
  description: >-
    Information about the engine of the vehicle. A vehicle can have multiple
    engines represented by multiple engine specification entities.
  allOf:
    - $ref: 'structuredvalue.yaml#/StructuredValue'
    - type: object
      properties:
        fuelType:
          oneOf:
            - $ref: 'url.yaml#/URL'
            - type: string
            - $ref: 'qualitativevalue.yaml#/QualitativeValue'
          description: >-
            The type of fuel suitable for the engine or engines of the vehicle.
            If the vehicle has only one engine, this property can be attached
            directly to the vehicle.
        engineType:
          oneOf:
            - $ref: 'url.yaml#/URL'
            - $ref: 'qualitativevalue.yaml#/QualitativeValue'
            - type: string
          description: The type of engine or engines powering the vehicle.
        enginePower:
          $ref: 'quantitativevalue.yaml#/QuantitativeValue'
          description: >
            The power of the vehicle's engine.
                Typical unit code(s): KWT for kilowatt, BHP for brake horsepower, N12 for metric horsepower (PS, with 1 PS = 735,49875 W)<br/><br/>

            <ul>

            <li>Note 1: There are many different ways of measuring an engine's
            power. For an overview, see  <a
            href="http://en.wikipedia.org/wiki/Horsepower#Engine_power_test_codes">http://en.wikipedia.org/wiki/Horsepower#Engine<em>power</em>test_codes</a>.</li>

            <li>Note 2: You can link to information about how the given value
            has been determined using the <a class="localLink"
            href="http://schema.org/valueReference">valueReference</a>
            property.</li>

            <li>Note 3: You can use <a class="localLink"
            href="http://schema.org/minValue">minValue</a> and <a
            class="localLink" href="http://schema.org/maxValue">maxValue</a> to
            indicate ranges.</li>

            </ul>
        engineDisplacement:
          $ref: 'quantitativevalue.yaml#/QuantitativeValue'
          description: >-
            The volume swept by all of the pistons inside the cylinders of an
            internal combustion engine in a single movement. <br/><br/>


            Typical unit code(s): CMQ for cubic centimeter, LTR for liters, INQ
            for cubic inches

            * Note 1: You can link to information about how the given value has
            been determined using the <a class="localLink"
            href="http://schema.org/valueReference">valueReference</a> property.

            * Note 2: You can use <a class="localLink"
            href="http://schema.org/minValue">minValue</a> and <a
            class="localLink" href="http://schema.org/maxValue">maxValue</a> to
            indicate ranges.
        torque:
          $ref: 'quantitativevalue.yaml#/QuantitativeValue'
          description: >
            The torque (turning force) of the vehicle's engine.<br/><br/>


            Typical unit code(s): NU for newton metre (N m), F17 for pound-force
            per foot, or F48 for pound-force per inch<br/><br/>


            <ul>

            <li>Note 1: You can link to information about how the given value
            has been determined (e.g. reference RPM) using the <a
            class="localLink"
            href="http://schema.org/valueReference">valueReference</a>
            property.</li>

            <li>Note 2: You can use <a class="localLink"
            href="http://schema.org/minValue">minValue</a> and <a
            class="localLink" href="http://schema.org/maxValue">maxValue</a> to
            indicate ranges.</li>

            </ul>
EntertainmentBusiness:
  $ref: 'LocalBusiness.yaml#/LocalBusiness'
EntryPoint:
  description: 'An entry point, within some Web-based protocol.'
  allOf:
    - $ref: 'intangible.yaml#/Intangible'
    - type: object
      properties:
        encodingType:
          type: string
          description: The supported encoding type(s) for an EntryPoint request.
        httpMethod:
          type: string
          description: >-
            An HTTP method that specifies the appropriate HTTP method for a
            request to an HTTP EntryPoint. Values are capitalized strings as
            used in HTTP.
        actionApplication:
          $ref: 'softwareapplication.yaml#/SoftwareApplication'
          description: An application that can complete the request.
        contentType:
          type: string
          description: The supported content type(s) for an EntryPoint response.
        actionPlatform:
          oneOf:
            - $ref: 'url.yaml#/URL'
            - type: string
          description: >-
            The high level platform(s) where the Action can be performed for the
            given URL. To specify a specific application or operating system
            instance, use actionApplication.
        application:
          $ref: 'softwareapplication.yaml#/SoftwareApplication'
          description: An application that can complete the request.
        urlTemplate:
          type: string
          description: >-
            An url template (RFC6570) that will be used to construct the target
            of the execution of the action.
Enumeration:
  description: 'Lists or enumerations—for example, a list of cuisines or music genres, etc.'
  allOf:
    - $ref: 'intangible.yaml#/Intangible'
    - type: object
      properties:
        supersededBy:
          oneOf:
            - $ref: 'enumeration.yaml#/Enumeration'
            - type: object
              description: 'Type: Property This type is not published yet in schema.org.'
            - type: object
              description: 'Type: Class This type is not published yet in schema.org.'
          description: >-
            Relates a term (i.e. a property, class or enumeration) to one that
            supersedes it.
Episode:
  description: >-
    A media episode (e.g. TV, radio, video game) which can be part of a series
    or season.
  allOf:
    - $ref: 'creativework.yaml#/CreativeWork'
    - type: object
      properties:
        episodeNumber:
          oneOf:
            - type: string
            - type: integer
          description: Position of the episode within an ordered group of episodes.
        directors:
          $ref: 'person.yaml#/Person'
          description: >-
            A director of e.g. tv, radio, movie, video games etc. content.
            Directors can be associated with individual items or with a series,
            episode, clip.
        partOfSeason:
          $ref: 'creativeworkseason.yaml#/CreativeWorkSeason'
          description: The season to which this episode belongs.
        musicBy:
          oneOf:
            - $ref: 'person.yaml#/Person'
            - $ref: 'musicgroup.yaml#/MusicGroup'
          description: The composer of the soundtrack.
        actors:
          $ref: 'person.yaml#/Person'
          description: >-
            An actor, e.g. in tv, radio, movie, video games etc. Actors can be
            associated with individual items or with a series, episode, clip.
        actor:
          $ref: 'person.yaml#/Person'
          description: >-
            An actor, e.g. in tv, radio, movie, video games etc., or in an
            event. Actors can be associated with individual items or with a
            series, episode, clip.
        director:
          $ref: 'person.yaml#/Person'
          description: >-
            A director of e.g. tv, radio, movie, video gaming etc. content, or
            of an event. Directors can be associated with individual items or
            with a series, episode, clip.
        partOfSeries:
          $ref: 'creativeworkseries.yaml#/CreativeWorkSeries'
          description: The series to which this episode or season belongs.
        trailer:
          $ref: 'videoobject.yaml#/VideoObject'
          description: 'The trailer of a movie or tv/radio series, season, episode, etc.'
        productionCompany:
          $ref: 'organization.yaml#/Organization'
          description: >-
            The production company or studio responsible for the item e.g.
            series, video game, episode etc.
Error:
  allOf:
    - $ref: 'thing.yaml#/Thing'
    - type: object
      description: For failed actions, more information on the cause of the failure.
Event:
  description: >-
    An event happening at a certain time and location, such as a concert,
    lecture, or festival. Ticketing information may be added via the <a
    class="localLink" href="http://schema.org/offers">offers</a> property.
    Repeated events may be structured as separate Event objects.
  allOf:
    - $ref: 'thing.yaml#/Thing'
    - type: object
      properties:
        composer:
          oneOf:
            - $ref: 'person.yaml#/Person'
            - $ref: 'organization.yaml#/Organization'
          description: >-
            The person or organization who wrote a composition, or who is the
            composer of a work performed at some event.
        attendees:
          oneOf:
            - $ref: 'organization.yaml#/Organization'
            - $ref: 'person.yaml#/Person'
          description: A person attending the event.
        actor:
          $ref: 'person.yaml#/Person'
          description: >-
            An actor, e.g. in tv, radio, movie, video games etc., or in an
            event. Actors can be associated with individual items or with a
            series, episode, clip.
        attendee:
          oneOf:
            - $ref: 'person.yaml#/Person'
            - $ref: 'organization.yaml#/Organization'
          description: A person or organization attending the event.
        eventStatus:
          $ref: 'eventstatustype.yaml#/EventStatusType'
          description: >-
            An eventStatus of an event represents its status; particularly
            useful when an event is cancelled or rescheduled.
        funder:
          oneOf:
            - $ref: 'person.yaml#/Person'
            - $ref: 'organization.yaml#/Organization'
          description: >-
            A person or organization that supports (sponsors) something through
            some kind of financial contribution.
        workFeatured:
          $ref: 'creativework.yaml#/CreativeWork'
          description: |-
            A work featured in some event, e.g. exhibited in an ExhibitionEvent.
                   Specific subproperties are available for workPerformed (e.g. a play), or a workPresented (a Movie at a ScreeningEvent).
        subEvent:
          $ref: 'event.yaml#/Event'
          description: >-
            An Event that is part of this event. For example, a conference event
            includes many presentations, each of which is a subEvent of the
            conference.
        about:
          $ref: 'thing.yaml#/Thing'
          description: The subject matter of the content.
        review:
          $ref: 'review.yaml#/Review'
          description: A review of the item.
        aggregateRating:
          $ref: 'aggregaterating.yaml#/AggregateRating'
          description: >-
            The overall rating, based on a collection of reviews or ratings, of
            the item.
        previousStartDate:
          type: string
          format: date
          description: >-
            Used in conjunction with eventStatus for rescheduled or cancelled
            events. This property contains the previously scheduled start date.
            For rescheduled events, the startDate property should be used for
            the newly scheduled start date. In the (rare) case of an event that
            has been postponed and rescheduled multiple times, this field may be
            repeated.
        sponsor:
          oneOf:
            - $ref: 'person.yaml#/Person'
            - $ref: 'organization.yaml#/Organization'
          description: >-
            A person or organization that supports a thing through a pledge,
            promise, or financial contribution. e.g. a sponsor of a Medical
            Study or a corporate sponsor of an event.
        performer:
          oneOf:
            - $ref: 'organization.yaml#/Organization'
            - $ref: 'person.yaml#/Person'
          description: >-
            A performer at the event&#x2014;for example, a presenter, musician,
            musical group or actor.
        organizer:
          oneOf:
            - $ref: 'person.yaml#/Person'
            - $ref: 'organization.yaml#/Organization'
          description: An organizer of an Event.
        superEvent:
          $ref: 'event.yaml#/Event'
          description: >-
            An event that this event is a part of. For example, a collection of
            individual music performances might each have a music festival as
            their superEvent.
        doorTime:
          type: string
          format: date-time
          description: The time admission will commence.
        maximumAttendeeCapacity:
          type: integer
          description: The total number of individuals that may attend an event or venue.
        location:
          oneOf:
            - $ref: 'postaladdress.yaml#/PostalAddress'
            - $ref: 'place.yaml#/Place'
            - type: string
          description: >-
            The location of for example where the event is happening, an
            organization is located, or where an action takes place.
        workPerformed:
          $ref: 'creativework.yaml#/CreativeWork'
          description: >-
            A work performed in some event, for example a play performed in a
            TheaterEvent.
        startDate:
          oneOf:
            - type: string
              format: date-time
            - type: string
              format: date
          description: >-
            The start date and time of the item (in <a
            href="http://en.wikipedia.org/wiki/ISO_8601">ISO 8601 date
            format</a>).
        performers:
          oneOf:
            - $ref: 'organization.yaml#/Organization'
            - $ref: 'person.yaml#/Person'
          description: >-
            The main performer or performers of the event&#x2014;for example, a
            presenter, musician, or actor.
        translator:
          oneOf:
            - $ref: 'organization.yaml#/Organization'
            - $ref: 'person.yaml#/Person'
          description: >-
            Organization or person who adapts a creative work to different
            languages, regional differences and technical requirements of a
            target market, or that translates during some event.
        duration:
          $ref: 'duration.yaml#/Duration'
          description: >-
            The duration of the item (movie, audio recording, event, etc.) in <a
            href="http://en.wikipedia.org/wiki/ISO_8601">ISO 8601 date
            format</a>.
        remainingAttendeeCapacity:
          type: integer
          description: The number of attendee places for an event that remain unallocated.
        subEvents:
          $ref: 'event.yaml#/Event'
          description: >-
            Events that are a part of this event. For example, a conference
            event includes many presentations, each subEvents of the conference.
        recordedIn:
          $ref: 'creativework.yaml#/CreativeWork'
          description: The CreativeWork that captured all or part of this Event.
        typicalAgeRange:
          type: string
          description: 'The typical expected age range, e.g. ''7-9'', ''11-''.'
        endDate:
          oneOf:
            - type: string
              format: date-time
            - type: string
              format: date
          description: >-
            The end date and time of the item (in <a
            href="http://en.wikipedia.org/wiki/ISO_8601">ISO 8601 date
            format</a>).
        audience:
          $ref: 'audience.yaml#/Audience'
          description: 'An intended audience, i.e. a group for whom something was created.'
        isAccessibleForFree:
          type: boolean
          description: >-
            A flag to signal that the item, event, or place is accessible for
            free.
        offers:
          $ref: 'offer.yaml#/Offer'
          description: >-
            An offer to provide this item&#x2014;for example, an offer to sell a
            product, rent the DVD of a movie, perform a service, or give away
            tickets to an event.
        director:
          $ref: 'person.yaml#/Person'
          description: >-
            A director of e.g. tv, radio, movie, video gaming etc. content, or
            of an event. Directors can be associated with individual items or
            with a series, episode, clip.
        contributor:
          oneOf:
            - $ref: 'person.yaml#/Person'
            - $ref: 'organization.yaml#/Organization'
          description: A secondary contributor to the CreativeWork or Event.
        inLanguage:
          oneOf:
            - $ref: 'language.yaml#/Language'
            - type: string
          description: >-
            The language of the content or performance or used in an action.
            Please use one of the language codes from the <a
            href="http://tools.ietf.org/html/bcp47">IETF BCP 47 standard</a>.
            See also <a class="localLink"
            href="http://schema.org/availableLanguage">availableLanguage</a>.
EventReservation:
  $ref: 'reservation.yaml#/Reservation'
EventStatusType:
  $ref: 'enumeration.yaml#/Enumeration'
EventVenue:
  $ref: 'civicstructure.yaml#/CivicStructure'
ExerciseAction:
  description: >-
    The act of participating in exertive activity for the purposes of improving
    health and fitness.
  allOf:
    - $ref: 'PlayAction.yaml#/PlayAction'
    - type: object
      properties:
        fromLocation:
          $ref: 'Place.yaml#/Place'
          description: >-
            A sub property of location. The original location of the object or
            the agent before the action.
        diet:
          type: object
          description: A sub property of instrument. The diet used in this action.
        exerciseCourse:
          $ref: 'Place.yaml#/Place'
          description: A sub property of location. The course where this action was taken.
        sportsActivityLocation:
          $ref: 'SportsActivityLocation.yaml#/SportsActivityLocation'
          description: >-
            A sub property of location. The sports activity location where this
            action occurred.
        opponent:
          $ref: 'Person.yaml#/Person'
          description: A sub property of participant. The opponent on this action.
        distance:
          $ref: 'Distance.yaml#/Distance'
          description: 'The distance travelled, e.g. exercising or travelling.'
        course:
          $ref: 'Place.yaml#/Place'
          description: A sub property of location. The course where this action was taken.
        exerciseType:
          type: string
          description: >-
            Type(s) of exercise or activity, such as strength training,
            flexibility training, aerobics, cardiac rehabilitation, etc.
        sportsEvent:
          $ref: 'SportsEvent.yaml#/SportsEvent'
          description: >-
            A sub property of location. The sports event where this action
            occurred.
        exerciseRelatedDiet:
          type: object
          description: A sub property of instrument. The diet used in this action.
        sportsTeam:
          $ref: 'SportsTeam.yaml#/SportsTeam'
          description: >-
            A sub property of participant. The sports team that participated on
            this action.
        exercisePlan:
          type: object
          description: A sub property of instrument. The exercise plan used on this action.
        toLocation:
          $ref: 'Place.yaml#/Place'
          description: >-
            A sub property of location. The final location of the object or the
            agent after the action.
ExerciseGym:
  $ref: 'sportsactivitylocation.yaml#/SportsActivityLocation'
ExhibitionEvent:
  $ref: 'event.yaml#/Event'
FastFoodRestaurant:
  $ref: 'foodestablishment.yaml#/FoodEstablishment'
Festival:
  $ref: 'event.yaml#/Event'
FilmAction:
  $ref: 'createaction.yaml#/CreateAction'
FinancialProduct:
  description: >-
    A product provided to consumers and businesses by financial institutions
    such as banks, insurance companies, brokerage firms, consumer finance
    companies, and investment companies which comprise the financial services
    industry.
  allOf:
    - $ref: 'service.yaml#/Service'
    - type: object
      properties:
        annualPercentageRate:
          oneOf:
            - type: number
            - $ref: 'quantitativevalue.yaml#/QuantitativeValue'
          description: >-
            The annual rate that is charged for borrowing (or made by
            investing), expressed as a single percentage number that represents
            the actual yearly cost of funds over the term of a loan. This
            includes any fees or additional costs associated with the
            transaction.
        feesAndCommissionsSpecification:
          oneOf:
            - type: string
            - $ref: 'url.yaml#/URL'
          description: >-
            Description of fees, commissions, and other terms applied either to
            a class of financial product, or by a financial service
            organization.
        interestRate:
          oneOf:
            - type: number
            - $ref: 'quantitativevalue.yaml#/QuantitativeValue'
          description: >-
            The interest rate, charged or paid, applicable to the financial
            product. Note: This is different from the calculated
            annualPercentageRate.
FinancialService:
  description: Financial services business.
  allOf:
    - $ref: 'localbusiness.yaml#/LocalBusiness'
    - type: object
      properties:
        feesAndCommissionsSpecification:
          oneOf:
            - type: string
            - $ref: 'url.yaml#/URL'
          description: >-
            Description of fees, commissions, and other terms applied either to
            a class of financial product, or by a financial service
            organization.
FindAction:
  $ref: 'action.yaml#/Action'
FireStation:
  description: A fire station. With firemen.
Flight:
  description: An airline flight.
  allOf:
    - $ref: 'Trip.yaml#/Trip'
    - type: object
      properties:
        departureAirport:
          $ref: 'Airport.yaml#/Airport'
          description: The airport where the flight originates.
        boardingPolicy:
          $ref: 'BoardingPolicyType.yaml#/BoardingPolicyType'
          description: >-
            The type of boarding policy used by the airline (e.g. zone-based or
            group-based).
        mealService:
          type: string
          description: >-
            Description of the meals that will be provided or available for
            purchase.
        aircraft:
          oneOf:
            - type: string
            - $ref: 'Vehicle.yaml#/Vehicle'
          description: 'The kind of aircraft (e.g., "Boeing 747").'
        webCheckinTime:
          type: string
          format: date-time
          description: The time when a passenger can check into the flight online.
        arrivalTerminal:
          type: string
          description: Identifier of the flight's arrival terminal.
        arrivalAirport:
          $ref: 'Airport.yaml#/Airport'
          description: The airport where the flight terminates.
        carrier:
          $ref: 'Organization.yaml#/Organization'
          description: >-
            'carrier' is an out-dated term indicating the 'provider' for parcel
            delivery and flights.
        seller:
          oneOf:
            - $ref: 'Person.yaml#/Person'
            - $ref: 'Organization.yaml#/Organization'
          description: >-
            An entity which offers (sells / leases / lends / loans) the services
            / goods.  A seller may also be a provider.
        flightDistance:
          oneOf:
            - $ref: 'Distance.yaml#/Distance'
            - type: string
          description: The distance of the flight.
        departureTerminal:
          type: string
          description: Identifier of the flight's departure terminal.
        departureGate:
          type: string
          description: Identifier of the flight's departure gate.
        flightNumber:
          type: string
          description: >-
            The unique identifier for a flight including the airline IATA code.
            For example, if describing United flight 110, where the IATA code
            for United is 'UA', the flightNumber is 'UA110'.
        estimatedFlightDuration:
          oneOf:
            - type: string
            - $ref: 'Duration.yaml#/Duration'
          description: The estimated time the flight will take.
        arrivalGate:
          type: string
          description: Identifier of the flight's arrival gate.
FlightReservation:
  description: >-
    A reservation for air travel.<br/><br/>


    Note: This type is for information about actual reservations, e.g. in
    confirmation emails or HTML pages with individual confirmations of
    reservations. For offers of tickets, use <a class="localLink"
    href="http://schema.org/Offer">Offer</a>.
  allOf:
    - $ref: 'reservation.yaml#/Reservation'
    - type: object
      properties:
        passengerSequenceNumber:
          type: string
          description: The passenger's sequence number as assigned by the airline.
        boardingGroup:
          type: string
          description: The airline-specific indicator of boarding order / preference.
        passengerPriorityStatus:
          oneOf:
            - type: string
            - $ref: 'qualitativevalue.yaml#/QualitativeValue'
          description: >-
            The priority status assigned to a passenger for security or boarding
            (e.g. FastTrack or Priority).
        securityScreening:
          type: string
          description: The type of security screening the passenger is subject to.
Float:
  type: number
Florist:
  $ref: 'store.yaml#/Store'
FollowAction:
  description: >
    The act of forming a personal connection with someone/something (object)
    unidirectionally/asymmetrically to get updates polled from.<br/><br/>


    Related actions:<br/><br/>


    <ul>

    <li><a class="localLink"
    href="http://schema.org/BefriendAction">BefriendAction</a>: Unlike
    BefriendAction, FollowAction implies that the connection is <em>not</em>
    necessarily reciprocal.</li>

    <li><a class="localLink"
    href="http://schema.org/SubscribeAction">SubscribeAction</a>: Unlike
    SubscribeAction, FollowAction implies that the follower acts as an active
    agent constantly/actively polling for updates.</li>

    <li><a class="localLink"
    href="http://schema.org/RegisterAction">RegisterAction</a>: Unlike
    RegisterAction, FollowAction implies that the agent is interested in
    continuing receiving updates from the object.</li>

    <li><a class="localLink" href="http://schema.org/JoinAction">JoinAction</a>:
    Unlike JoinAction, FollowAction implies that the agent is interested in
    getting updates from the object.</li>

    <li><a class="localLink"
    href="http://schema.org/TrackAction">TrackAction</a>: Unlike TrackAction,
    FollowAction refers to the polling of updates of all aspects of animate
    objects rather than the location of inanimate objects (e.g. you track a
    package, but you don't follow it).</li>

    </ul>
  allOf:
    - $ref: 'interactaction.yaml#/InteractAction'
    - type: object
      properties:
        followee:
          oneOf:
            - $ref: 'organization.yaml#/Organization'
            - $ref: 'person.yaml#/Person'
          description: A sub property of object. The person or organization being followed.
FoodEstablishment:
  description: A food-related business.
  allOf:
    - $ref: 'localbusiness.yaml#/LocalBusiness'
    - type: object
      properties:
        servesCuisine:
          type: string
          description: The cuisine of the restaurant.
        hasMenu:
          oneOf:
            - $ref: 'url.yaml#/URL'
            - $ref: 'menu.yaml#/Menu'
            - type: string
          description: >-
            Either the actual menu as a structured representation, as text, or a
            URL of the menu.
        menu:
          oneOf:
            - $ref: 'menu.yaml#/Menu'
            - type: string
            - $ref: 'url.yaml#/URL'
          description: >-
            Either the actual menu as a structured representation, as text, or a
            URL of the menu.
        acceptsReservations:
          oneOf:
            - type: string
            - type: boolean
            - $ref: 'url.yaml#/URL'
          description: >-
            Indicates whether a FoodEstablishment accepts reservations. Values
            can be Boolean, an URL at which reservations can be made or (for
            backwards compatibility) the strings <code>Yes</code> or
            <code>No</code>.
        starRating:
          $ref: 'rating.yaml#/Rating'
          description: >-
            An official rating for a lodging business or food establishment,
            e.g. from national associations or standards bodies. Use the author
            property to indicate the rating organization, e.g. as an
            Organization with name such as (e.g. HOTREC, DEHOGA, WHR, or
            Hotelstars).
FoodEstablishmentReservation:
  description: >-
    A reservation to dine at a food-related business.<br/><br/>


    Note: This type is for information about actual reservations, e.g. in
    confirmation emails or HTML pages with individual confirmations of
    reservations.
  allOf:
    - $ref: 'reservation.yaml#/Reservation'
    - type: object
      properties:
        endTime:
          type: string
          format: date-time
          description: >-
            The endTime of something. For a reserved event or service (e.g.
            FoodEstablishmentReservation), the time that it is expected to end.
            For actions that span a period of time, when the action was
            performed. e.g. John wrote a book from January to
            <em>December</em>.<br/><br/>


            Note that Event uses startDate/endDate instead of startTime/endTime,
            even when describing dates with times. This situation may be
            clarified in future revisions.
        startTime:
          type: string
          format: date-time
          description: >-
            The startTime of something. For a reserved event or service (e.g.
            FoodEstablishmentReservation), the time that it is expected to
            start. For actions that span a period of time, when the action was
            performed. e.g. John wrote a book from <em>January</em> to
            December.<br/><br/>


            Note that Event uses startDate/endDate instead of startTime/endTime,
            even when describing dates with times. This situation may be
            clarified in future revisions.
        partySize:
          oneOf:
            - $ref: 'quantitativevalue.yaml#/QuantitativeValue'
            - type: integer
          description: Number of people the reservation should accommodate.
FoodEvent:
  $ref: 'event.yaml#/Event'
FoodService:
  $ref: 'service.yaml#/Service'
FurnitureStore:
  $ref: 'store.yaml#/Store'
Game:
  description: >-
    The Game type represents things which are games. These are typically
    rule-governed recreational activities, e.g. role-playing games in which
    players assume the role of characters in a fictional setting.
  allOf:
    - $ref: 'CreativeWork.yaml#/CreativeWork'
    - type: object
      properties:
        quest:
          $ref: 'Thing.yaml#/Thing'
          description: >-
            The task that a player-controlled character, or group of characters
            may complete in order to gain a reward.
        gameLocation:
          oneOf:
            - $ref: 'PostalAddress.yaml#/PostalAddress'
            - $ref: 'Place.yaml#/Place'
            - $ref: 'URL.yaml#/URL'
          description: Real or fictional location of the game (or part of game).
        characterAttribute:
          $ref: 'Thing.yaml#/Thing'
          description: >-
            A piece of data that represents a particular aspect of a fictional
            character (skill, power, character points, advantage, disadvantage).
        numberOfPlayers:
          $ref: 'QuantitativeValue.yaml#/QuantitativeValue'
          description: >-
            Indicate how many people can play this game (minimum, maximum, or
            range).
        gameItem:
          $ref: 'Thing.yaml#/Thing'
          description: >-
            An item is an object within the game world that can be collected by
            a player or, occasionally, a non-player character.
GamePlayMode:
  $ref: 'enumeration.yaml#/Enumeration'
GameServer:
  description: Server that provides game interaction in a multiplayer game.
  allOf:
    - $ref: 'intangible.yaml#/Intangible'
    - type: object
      properties:
        game:
          $ref: 'videogame.yaml#/VideoGame'
          description: Video game which is played on this server.
        playersOnline:
          type: integer
          description: Number of players on the server.
        serverStatus:
          $ref: 'gameserverstatus.yaml#/GameServerStatus'
          description: Status of a game server.
GameServerStatus:
  $ref: 'enumeration.yaml#/Enumeration'
GardenStore:
  $ref: 'store.yaml#/Store'
GasStation:
  $ref: 'AutomotiveBusiness.yaml#/AutomotiveBusiness'
GatedResidenceCommunity:
  $ref: 'residence.yaml#/Residence'
GenderType:
  $ref: 'Enumeration.yaml#/Enumeration'
GeneralContractor:
  $ref: 'homeandconstructionbusiness.yaml#/HomeAndConstructionBusiness'
GeoCircle:
  description: >-
    A GeoCircle is a GeoShape representing a circular geographic area. As it is
    a GeoShape
              it provides the simple textual property 'circle', but also allows the combination of postalCode alongside geoRadius.
              The center of the circle can be indicated via the 'geoMidpoint' property, or more approximately using 'address', 'postalCode'.
  allOf:
    - $ref: 'geoshape.yaml#/GeoShape'
    - type: object
      properties:
        geoMidpoint:
          $ref: 'geocoordinates.yaml#/GeoCoordinates'
          description: >-
            Indicates the GeoCoordinates at the centre of a GeoShape e.g.
            GeoCircle.
        geoRadius:
          oneOf:
            - $ref: 'distance.yaml#/Distance'
            - type: string
            - type: number
          description: >-
            Indicates the approximate radius of a GeoCircle (metres unless
            indicated otherwise via Distance notation).
GeoCoordinates:
  description: The geographic coordinates of a place or event.
  allOf:
    - $ref: 'structuredvalue.yaml#/StructuredValue'
    - type: object
      properties:
        addressCountry:
          oneOf:
            - type: string
            - $ref: 'country.yaml#/Country'
          description: >-
            The country. For example, USA. You can also provide the two-letter
            <a href="http://en.wikipedia.org/wiki/ISO_3166-1">ISO 3166-1 alpha-2
            country code</a>.
        latitude:
          oneOf:
            - type: string
            - type: number
          description: >-
            The latitude of a location. For example <code>37.42242</code> (<a
            href="https://en.wikipedia.org/wiki/World_Geodetic_System">WGS
            84</a>).
        elevation:
          oneOf:
            - type: number
            - type: string
          description: >-
            The elevation of a location (<a
            href="https://en.wikipedia.org/wiki/World_Geodetic_System">WGS
            84</a>).
        postalCode:
          type: string
          description: 'The postal code. For example, 94043.'
        address:
          oneOf:
            - type: string
            - $ref: 'postaladdress.yaml#/PostalAddress'
          description: Physical address of the item.
        longitude:
          oneOf:
            - type: string
            - type: number
          description: >-
            The longitude of a location. For example <code>-122.08585</code> (<a
            href="https://en.wikipedia.org/wiki/World_Geodetic_System">WGS
            84</a>).
GeoShape:
  description: >-
    The geographic shape of a place. A GeoShape can be described using several
    properties whose values are based on latitude/longitude pairs. Either
    whitespace or commas can be used to separate latitude and longitude;
    whitespace should be used when writing a list of several such points.
  allOf:
    - $ref: 'structuredvalue.yaml#/StructuredValue'
    - type: object
      properties:
        addressCountry:
          oneOf:
            - type: string
            - $ref: 'country.yaml#/Country'
          description: >-
            The country. For example, USA. You can also provide the two-letter
            <a href="http://en.wikipedia.org/wiki/ISO_3166-1">ISO 3166-1 alpha-2
            country code</a>.
        line:
          type: string
          description: >-
            A line is a point-to-point path consisting of two or more points. A
            line is expressed as a series of two or more point objects separated
            by space.
        elevation:
          oneOf:
            - type: number
            - type: string
          description: >-
            The elevation of a location (<a
            href="https://en.wikipedia.org/wiki/World_Geodetic_System">WGS
            84</a>).
        postalCode:
          type: string
          description: 'The postal code. For example, 94043.'
        address:
          oneOf:
            - type: string
            - $ref: 'postaladdress.yaml#/PostalAddress'
          description: Physical address of the item.
        box:
          type: string
          description: >-
            A box is the area enclosed by the rectangle formed by two points.
            The first point is the lower corner, the second point is the upper
            corner. A box is expressed as two points separated by a space
            character.
        polygon:
          type: string
          description: >-
            A polygon is the area enclosed by a point-to-point path for which
            the starting and ending points are the same. A polygon is expressed
            as a series of four or more space delimited points where the first
            and final points are identical.
        circle:
          type: string
          description: >-
            A circle is the circular region of a specified radius centered at a
            specified latitude and longitude. A circle is expressed as a pair
            followed by a radius in meters.
GiveAction:
  description: >
    The act of transferring ownership of an object to a destination. Reciprocal
    of TakeAction.<br/><br/>


    Related actions:<br/><br/>


    <ul>

    <li><a class="localLink" href="http://schema.org/TakeAction">TakeAction</a>:
    Reciprocal of GiveAction.</li>

    <li><a class="localLink" href="http://schema.org/SendAction">SendAction</a>:
    Unlike SendAction, GiveAction implies that ownership is being transferred
    (e.g. I may send my laptop to you, but that doesn't mean I'm giving it to
    you).</li>

    </ul>
  allOf:
    - $ref: 'transferaction.yaml#/TransferAction'
    - type: object
      properties:
        recipient:
          oneOf:
            - $ref: 'contactpoint.yaml#/ContactPoint'
            - $ref: 'organization.yaml#/Organization'
            - $ref: 'audience.yaml#/Audience'
            - $ref: 'person.yaml#/Person'
          description: >-
            A sub property of participant. The participant who is at the
            receiving end of the action.
GolfCourse:
  $ref: 'sportsactivitylocation.yaml#/SportsActivityLocation'
GovernmentBuilding:
  $ref: 'CivicStructure.yaml#/CivicStructure'
GovernmentOffice:
  $ref: 'localbusiness.yaml#/LocalBusiness'
GovernmentOrganization:
  $ref: 'organization.yaml#/Organization'
GovernmentPermit:
  $ref: 'permit.yaml#/Permit'
GovernmentService:
  description: >-
    A service provided by a government organization, e.g. food stamps, veterans
    benefits, etc.
  allOf:
    - $ref: 'service.yaml#/Service'
    - type: object
      properties:
        serviceOperator:
          $ref: 'organization.yaml#/Organization'
          description: >-
            The operating organization, if different from the provider.  This
            enables the representation of services that are provided by an
            organization, but operated by another organization like a
            subcontractor.
GroceryStore:
  $ref: 'store.yaml#/Store'
HairSalon:
  $ref: 'healthandbeautybusiness.yaml#/HealthAndBeautyBusiness'
HardwareStore:
  $ref: 'store.yaml#/Store'
HealthAndBeautyBusiness:
  $ref: 'localbusiness.yaml#/LocalBusiness'
HealthClub:
  description: A health club.
HighSchool:
  $ref: 'EducationalOrganization.yaml#/EducationalOrganization'
HinduTemple:
  $ref: 'placeofworship.yaml#/PlaceOfWorship'
HobbyShop:
  $ref: 'store.yaml#/Store'
HomeAndConstructionBusiness:
  $ref: 'localbusiness.yaml#/LocalBusiness'
HomeGoodsStore:
  $ref: 'store.yaml#/Store'
Hospital:
  properties:
    medicalSpecialty:
      type: object
      description: A medical specialty of the provider.
    availableService:
      oneOf:
        - type: object
          description: 'Type: MedicalProcedure This type is not published yet in schema.org.'
        - type: object
          description: 'Type: MedicalTest This type is not published yet in schema.org.'
        - type: object
          description: 'Type: MedicalTherapy This type is not published yet in schema.org.'
      description: A medical service available from this provider.
Hostel:
  $ref: 'lodgingbusiness.yaml#/LodgingBusiness'
Hotel:
  $ref: 'lodgingbusiness.yaml#/LodgingBusiness'
HotelRoom:
  description: >-
    A hotel room is a single room in a hotel.

    <br /><br />

    See also the <a href="/docs/hotels.html">dedicated document on the use of
    schema.org for marking up hotels and other forms of accommodations</a>.
  allOf:
    - $ref: 'room.yaml#/Room'
    - type: object
      properties:
        occupancy:
          $ref: 'quantitativevalue.yaml#/QuantitativeValue'
          description: >-
            The allowed total occupancy for the accommodation in persons
            (including infants etc). For individual accommodations, this is not
            necessarily the legal maximum but defines the permitted usage as per
            the contractual agreement (e.g. a double room used by a single
            person).

            Typical unit code(s): C62 for person
        bed:
          oneOf:
            - $ref: 'beddetails.yaml#/BedDetails'
            - type: object
              description: 'Type: BedType This type is not published yet in schema.org.'
            - type: string
          description: >-
            The type of bed or beds included in the accommodation. For the
            single case of just one bed of a certain type, you use bed directly
            with a text.
                  If you want to indicate the quantity of a certain kind of bed, use an instance of BedDetails. For more detailed information, use the amenityFeature property.
House:
  description: >-
    A house is a building or structure that has the ability to be occupied for
    habitation by humans or other creatures (Source: Wikipedia, the free
    encyclopedia, see <a
    href="http://en.wikipedia.org/wiki/House">http://en.wikipedia.org/wiki/House</a>).
  allOf:
    - $ref: 'accommodation.yaml#/Accommodation'
    - type: object
      properties:
        numberOfRooms:
          oneOf:
            - type: number
            - $ref: 'quantitativevalue.yaml#/QuantitativeValue'
          description: >-
            The number of rooms (excluding bathrooms and closets) of the
            accommodation or lodging business.

            Typical unit code(s): ROM for room or C62 for no unit. The type of
            room can be put in the unitText property of the QuantitativeValue.
HousePainter:
  $ref: 'homeandconstructionbusiness.yaml#/HomeAndConstructionBusiness'
HowTo:
  description: >-
    Instructions that explain how to achieve a result by performing a sequence
    of steps.
  allOf:
    - $ref: 'creativework.yaml#/CreativeWork'
    - type: object
      properties:
        estimatedCost:
          oneOf:
            - type: string
            - $ref: 'monetaryamount.yaml#/MonetaryAmount'
          description: >-
            The estimated cost of the supply or supplies consumed when
            performing instructions.
        yield:
          oneOf:
            - type: string
            - $ref: 'quantitativevalue.yaml#/QuantitativeValue'
          description: >-
            The quantity that results by performing instructions. For example, a
            paper airplane, 10 personalized candles.
        steps:
          oneOf:
            - $ref: 'itemlist.yaml#/ItemList'
            - $ref: 'creativework.yaml#/CreativeWork'
            - type: string
          description: >-
            A single step item (as HowToStep, text, document, video, etc.) or a
            HowToSection (originally misnamed 'steps'; 'step' is preferred).
        performTime:
          $ref: 'duration.yaml#/Duration'
          description: >-
            The length of time it takes to perform instructions or a direction
            (not including time to prepare the supplies), in <a
            href="http://en.wikipedia.org/wiki/ISO_8601">ISO 8601 duration
            format</a>.
        totalTime:
          $ref: 'duration.yaml#/Duration'
          description: >-
            The total time required to perform instructions or a direction
            (including time to prepare the supplies), in <a
            href="http://en.wikipedia.org/wiki/ISO_8601">ISO 8601 duration
            format</a>.
        step:
          oneOf:
            - $ref: 'howtostep.yaml#/HowToStep'
            - $ref: 'howtosection.yaml#/HowToSection'
            - $ref: 'creativework.yaml#/CreativeWork'
            - type: string
          description: >-
            A single step item (as HowToStep, text, document, video, etc.) or a
            HowToSection.
        supply:
          oneOf:
            - $ref: 'howtosupply.yaml#/HowToSupply'
            - type: string
          description: >-
            A sub-property of instrument. A supply consumed when performing
            instructions or a direction.
        tool:
          oneOf:
            - type: string
            - $ref: 'howtotool.yaml#/HowToTool'
          description: >-
            A sub property of instrument. An object used (but not consumed) when
            performing instructions or a direction.
        prepTime:
          $ref: 'duration.yaml#/Duration'
          description: >-
            The length of time it takes to prepare the items to be used in
            instructions or a direction, in <a
            href="http://en.wikipedia.org/wiki/ISO_8601">ISO 8601 duration
            format</a>.
HowToDirection:
  properties:
    duringMedia:
      oneOf:
        - $ref: 'mediaobject.yaml#/MediaObject'
        - $ref: 'url.yaml#/URL'
      description: >-
        A media object representing the circumstances while performing this
        direction.
    afterMedia:
      oneOf:
        - $ref: 'url.yaml#/URL'
        - $ref: 'mediaobject.yaml#/MediaObject'
      description: >-
        A media object representing the circumstances after performing this
        direction.
    beforeMedia:
      oneOf:
        - $ref: 'mediaobject.yaml#/MediaObject'
        - $ref: 'url.yaml#/URL'
      description: >-
        A media object representing the circumstances before performing this
        direction.
    performTime:
      $ref: 'duration.yaml#/Duration'
      description: >-
        The length of time it takes to perform instructions or a direction (not
        including time to prepare the supplies), in <a
        href="http://en.wikipedia.org/wiki/ISO_8601">ISO 8601 duration
        format</a>.
    totalTime:
      $ref: 'duration.yaml#/Duration'
      description: >-
        The total time required to perform instructions or a direction
        (including time to prepare the supplies), in <a
        href="http://en.wikipedia.org/wiki/ISO_8601">ISO 8601 duration
        format</a>.
    supply:
      oneOf:
        - $ref: 'howtosupply.yaml#/HowToSupply'
        - type: string
      description: >-
        A sub-property of instrument. A supply consumed when performing
        instructions or a direction.
    tool:
      oneOf:
        - $ref: 'howtotool.yaml#/HowToTool'
        - type: string
      description: >-
        A sub property of instrument. An object used (but not consumed) when
        performing instructions or a direction.
    prepTime:
      $ref: 'duration.yaml#/Duration'
      description: >-
        The length of time it takes to prepare the items to be used in
        instructions or a direction, in <a
        href="http://en.wikipedia.org/wiki/ISO_8601">ISO 8601 duration
        format</a>.
HowToItem:
  description: >-
    An item used as either a tool or supply when performing the instructions for
    how to to achieve a result.
  allOf:
    - $ref: 'listitem.yaml#/ListItem'
    - type: object
      properties:
        requiredQuantity:
          oneOf:
            - $ref: 'quantitativevalue.yaml#/QuantitativeValue'
            - type: string
            - type: number
          description: The required quantity of the item(s).
HowToSection:
  properties:
    steps:
      oneOf:
        - $ref: 'CreativeWork.yaml#/CreativeWork'
        - $ref: 'ItemList.yaml#/ItemList'
        - type: string
      description: >-
        A single step item (as HowToStep, text, document, video, etc.) or a
        HowToSection (originally misnamed 'steps'; 'step' is preferred).
HowToStep:
  description: >-
    A step in the instructions for how to achieve a result. It is an ordered
    list with HowToDirection and/or HowToTip items.
HowToSupply:
  description: >-
    A supply consumed when performing the instructions for how to achieve a
    result.
  allOf:
    - $ref: 'howtoitem.yaml#/HowToItem'
    - type: object
      properties:
        estimatedCost:
          oneOf:
            - $ref: 'monetaryamount.yaml#/MonetaryAmount'
            - type: string
          description: >-
            The estimated cost of the supply or supplies consumed when
            performing instructions.
HowToTip:
  description: >-
    An explanation in the instructions for how to achieve a result. It provides
    supplementary information about a technique, supply, author's preference,
    etc. It can explain what could be done, or what should not be done, but
    doesn't specify what should be done (see HowToDirection).
HowToTool:
  $ref: 'HowToItem.yaml#/HowToItem'
HVACBusiness:
  $ref: 'homeandconstructionbusiness.yaml#/HomeAndConstructionBusiness'
IceCreamShop:
  $ref: 'foodestablishment.yaml#/FoodEstablishment'
IgnoreAction:
  $ref: 'assessaction.yaml#/AssessAction'
ImageGallery:
  $ref: 'collectionpage.yaml#/CollectionPage'
ImageObject:
  description: An image file.
  allOf:
    - $ref: 'mediaobject.yaml#/MediaObject'
    - type: object
      properties:
        caption:
          type: string
          description: The caption for this object.
        thumbnail:
          $ref: 'imageobject.yaml#/ImageObject'
          description: Thumbnail image for an image or video.
        exifData:
          oneOf:
            - $ref: 'propertyvalue.yaml#/PropertyValue'
            - type: string
          description: exif data for this object.
        representativeOfPage:
          type: boolean
          description: >-
            Indicates whether this image is representative of the content of the
            page.
IndividualProduct:
  description: >-
    A single, identifiable product instance (e.g. a laptop with a particular
    serial number).
  allOf:
    - $ref: 'product.yaml#/Product'
    - type: object
      properties:
        serialNumber:
          type: string
          description: >-
            The serial number or any alphanumeric identifier of a particular
            product. When attached to an offer, it is a shortcut for the serial
            number of the product included in the offer.
InformAction:
  description: >-
    The act of notifying someone of information pertinent to them, with no
    expectation of a response.
  allOf:
    - $ref: 'communicateaction.yaml#/CommunicateAction'
    - type: object
      properties:
        event:
          $ref: 'event.yaml#/Event'
          description: >-
            Upcoming or past event associated with this place, organization, or
            action.
InsertAction:
  description: The act of adding at a specific location in an ordered collection.
  allOf:
    - $ref: 'addaction.yaml#/AddAction'
    - type: object
      properties:
        toLocation:
          $ref: 'place.yaml#/Place'
          description: >-
            A sub property of location. The final location of the object or the
            agent after the action.
InstallAction:
  $ref: 'consumeaction.yaml#/ConsumeAction'
InsuranceAgency:
  $ref: 'financialservice.yaml#/FinancialService'
Intangible:
  $ref: 'Thing.yaml#/Thing'
Integer:
  type: number
InteractAction:
  $ref: 'action.yaml#/Action'
InteractionCounter:
  description: >-
    A summary of how users have interacted with this CreativeWork. In most
    cases, authors will use a subtype to specify the specific type of
    interaction.
  allOf:
    - $ref: 'structuredvalue.yaml#/StructuredValue'
    - type: object
      properties:
        interactionService:
          oneOf:
            - $ref: 'website.yaml#/WebSite'
            - $ref: 'softwareapplication.yaml#/SoftwareApplication'
          description: >-
            The WebSite or SoftwareApplication where the interactions took
            place.
        userInteractionCount:
          type: integer
          description: >-
            The number of interactions for the CreativeWork using the WebSite or
            SoftwareApplication.
        interactionType:
          $ref: 'action.yaml#/Action'
          description: >-
            The Action representing the type of interaction. For up votes, +1s,
            etc. use <a class="localLink"
            href="http://schema.org/LikeAction">LikeAction</a>. For down votes
            use <a class="localLink"
            href="http://schema.org/DislikeAction">DislikeAction</a>. Otherwise,
            use the most specific Action.
InternetCafe:
  $ref: 'LocalBusiness.yaml#/LocalBusiness'
InvestmentOrDeposit:
  description: >-
    A type of financial product that typically requires the client to transfer
    funds to a financial service in return for potential beneficial financial
    return.
  allOf:
    - $ref: 'financialproduct.yaml#/FinancialProduct'
    - type: object
      properties:
        amount:
          oneOf:
            - type: number
            - $ref: 'monetaryamount.yaml#/MonetaryAmount'
          description: The amount of money.
InviteAction:
  description: The act of asking someone to attend an event. Reciprocal of RsvpAction.
  allOf:
    - $ref: 'CommunicateAction.yaml#/CommunicateAction'
    - type: object
      properties:
        event:
          $ref: 'Event.yaml#/Event'
          description: >-
            Upcoming or past event associated with this place, organization, or
            action.
Invoice:
  description: A statement of the money due for goods or services; a bill.
  allOf:
    - $ref: 'intangible.yaml#/Intangible'
    - type: object
      properties:
        broker:
          oneOf:
            - $ref: 'organization.yaml#/Organization'
            - $ref: 'person.yaml#/Person'
          description: >-
            An entity that arranges for an exchange between a buyer and a
            seller.  In most cases a broker never acquires or releases ownership
            of a product or service involved in an exchange.  If it is not clear
            whether an entity is a broker, seller, or buyer, the latter two
            terms are preferred.
        paymentDueDate:
          type: string
          format: date-time
          description: The date that payment is due.
        accountId:
          type: string
          description: The identifier for the account the payment will be applied to.
        provider:
          oneOf:
            - $ref: 'organization.yaml#/Organization'
            - $ref: 'person.yaml#/Person'
          description: >-
            The service provider, service operator, or service performer; the
            goods producer. Another party (a seller) may offer those services or
            goods on behalf of the provider. A provider may also serve as the
            seller.
        confirmationNumber:
          type: string
          description: A number that confirms the given order or payment has been received.
        referencesOrder:
          $ref: 'order.yaml#/Order'
          description: >-
            The Order(s) related to this Invoice. One or more Orders may be
            combined into a single Invoice.
        customer:
          oneOf:
            - $ref: 'organization.yaml#/Organization'
            - $ref: 'person.yaml#/Person'
          description: Party placing the order or paying the invoice.
        paymentMethodId:
          type: string
          description: >-
            An identifier for the method of payment used (e.g. the last 4 digits
            of the credit card).
        paymentStatus:
          oneOf:
            - $ref: 'paymentstatustype.yaml#/PaymentStatusType'
            - type: string
          description: The status of payment; whether the invoice has been paid or not.
        paymentDue:
          type: string
          format: date-time
          description: The date that payment is due.
        minimumPaymentDue:
          oneOf:
            - $ref: 'pricespecification.yaml#/PriceSpecification'
            - $ref: 'monetaryamount.yaml#/MonetaryAmount'
          description: The minimum payment required at this time.
        billingPeriod:
          $ref: 'duration.yaml#/Duration'
          description: The time interval used to compute the invoice.
        totalPaymentDue:
          oneOf:
            - $ref: 'pricespecification.yaml#/PriceSpecification'
            - $ref: 'monetaryamount.yaml#/MonetaryAmount'
          description: The total amount due.
        scheduledPaymentDate:
          type: string
          format: date
          description: The date the invoice is scheduled to be paid.
        paymentMethod:
          $ref: 'paymentmethod.yaml#/PaymentMethod'
          description: >-
            The name of the credit card or other method of payment for the
            order.
        category:
          oneOf:
            - type: string
            - $ref: 'thing.yaml#/Thing'
            - type: object
              description: >-
                Type: PhysicalActivityCategory This type is not published yet in
                schema.org.
          description: >-
            A category for the item. Greater signs or slashes can be used to
            informally indicate a category hierarchy.
ItemAvailability:
  $ref: 'Enumeration.yaml#/Enumeration'
ItemList:
  description: >-
    A list of items of any sort&#x2014;for example, Top 10 Movies About
    Weathermen, or Top 100 Party Songs. Not to be confused with HTML lists,
    which are often used only for formatting.
  allOf:
    - $ref: 'intangible.yaml#/Intangible'
    - type: object
      properties:
        itemListElement:
          oneOf:
            - $ref: 'listitem.yaml#/ListItem'
            - $ref: 'thing.yaml#/Thing'
            - type: string
          description: >-
            For itemListElement values, you can use simple strings (e.g.
            "Peter", "Paul", "Mary"), existing entities, or use
            ListItem.<br/><br/>


            Text values are best if the elements in the list are plain strings.
            Existing entities are best for a simple, unordered list of existing
            things in your data. ListItem is used with ordered lists when you
            want to provide additional context about the element in that list or
            when the same item might be in different places in different
            lists.<br/><br/>


            Note: The order of elements in your mark-up is not sufficient for
            indicating the order or elements.  Use ListItem with a 'position'
            property in such cases.
        numberOfItems:
          type: integer
          description: >-
            The number of items in an ItemList. Note that some descriptions
            might not fully describe all items in a list (e.g., multi-page
            pagination); in such cases, the numberOfItems would be for the
            entire list.
        itemListOrder:
          oneOf:
            - $ref: 'itemlistordertype.yaml#/ItemListOrderType'
            - type: string
          description: 'Type of ordering (e.g. Ascending, Descending, Unordered).'
ItemListOrderType:
  $ref: 'enumeration.yaml#/Enumeration'
ItemPage:
  $ref: 'WebPage.yaml#/WebPage'
JewelryStore:
  $ref: 'store.yaml#/Store'
JobPosting:
  description: A listing that describes a job opening in a certain organization.
  allOf:
    - $ref: 'Intangible.yaml#/Intangible'
    - type: object
      properties:
        experienceRequirements:
          type: string
          description:
            - Description of skills and experience needed for the position.
            - >-
              Description of skills and experience needed for the position or
              Occupation.
        educationRequirements:
          type: string
          description:
            - Educational background needed for the position or Occupation.
            - Educational background needed for the position.
        employmentType:
          type: string
          description: >-
            Type of employment (e.g. full-time, part-time, contract, temporary,
            seasonal, internship).
        skills:
          type: string
          description:
            - Skills required to fulfill this role or in this Occupation.
            - Skills required to fulfill this role.
        validThrough:
          type: string
          format: date-time
          description: >-
            The date after when the item is not valid. For example the end of an
            offer, salary period, or a period of opening hours.
        relevantOccupation:
          type: object
          description: The Occupation for the JobPosting.
        jobBenefits:
          type: string
          description: Description of benefits associated with the job.
        salaryCurrency:
          type: string
          description: >-
            The currency (coded using <a
            href="http://en.wikipedia.org/wiki/ISO_4217">ISO 4217</a> ) used for
            the main salary information in this job posting or for this
            employee.
        baseSalary:
          oneOf:
            - type: number
            - $ref: 'PriceSpecification.yaml#/PriceSpecification'
            - $ref: 'MonetaryAmount.yaml#/MonetaryAmount'
          description: The base salary of the job or of an employee in an EmployeeRole.
        industry:
          type: string
          description: The industry associated with the job position.
        title:
          type: string
          description: The title of the job.
        benefits:
          type: string
          description: Description of benefits associated with the job.
        specialCommitments:
          type: string
          description: >-
            Any special commitments associated with this job posting. Valid
            entries include VeteranCommit, MilitarySpouseCommit, etc.
        qualifications:
          type: string
          description:
            - Specific qualifications required for this role.
            - Specific qualifications required for this role or Occupation.
        hiringOrganization:
          $ref: 'Organization.yaml#/Organization'
          description: Organization offering the job position.
        responsibilities:
          type: string
          description:
            - Responsibilities associated with this role.
            - Responsibilities associated with this role or Occupation.
        jobLocation:
          $ref: 'Place.yaml#/Place'
          description: >-
            A (typically single) geographic location associated with the job
            position.
        incentiveCompensation:
          type: string
          description: Description of bonus and commission compensation aspects of the job.
        workHours:
          type: string
          description: >-
            The typical working hours for this job (e.g. 1st shift, night shift,
            8am-5pm).
        datePosted:
          type: string
          format: date
          description: Publication date for the job posting.
        estimatedSalary:
          oneOf:
            - $ref: 'MonetaryAmount.yaml#/MonetaryAmount'
            - type: number
            - $ref: 'PriceSpecification.yaml#/PriceSpecification'
            - type: object
              description: >-
                Type: MonetaryAmountDistribution This type is not published yet
                in schema.org.
          description:
            - >-
              A property describing the estimated salary for a job posting based
              on a variety of variables including, but not limited to industry,
              job title, and location. The estimated salary is usually computed
              by outside organizations and therefore the hiring organization is
              not bound to this estimated salary.
            - >-
              The estimated salary for this occupation in the given
              occupationLocation.
        occupationalCategory:
          type: string
          description: >-
            Category or categories describing the job. Use BLS O*NET-SOC
            taxonomy: http://www.onetcenter.org/taxonomy.html. Ideally includes
            textual label and formal code, with the property repeated for each
            applicable value.
        incentives:
          type: string
          description: Description of bonus and commission compensation aspects of the job.
JoinAction:
  description: >
    An agent joins an event/group with participants/friends at a
    location.<br/><br/>


    Related actions:<br/><br/>


    <ul>

    <li><a class="localLink"
    href="http://schema.org/RegisterAction">RegisterAction</a>: Unlike
    RegisterAction, JoinAction refers to joining a group/team of people.</li>

    <li><a class="localLink"
    href="http://schema.org/SubscribeAction">SubscribeAction</a>: Unlike
    SubscribeAction, JoinAction does not imply that you'll be receiving
    updates.</li>

    <li><a class="localLink"
    href="http://schema.org/FollowAction">FollowAction</a>: Unlike FollowAction,
    JoinAction does not imply that you'll be polling for updates.</li>

    </ul>
  allOf:
    - $ref: 'interactaction.yaml#/InteractAction'
    - type: object
      properties:
        event:
          $ref: 'event.yaml#/Event'
          description: >-
            Upcoming or past event associated with this place, organization, or
            action.
LakeBodyOfWater:
  $ref: 'bodyofwater.yaml#/BodyOfWater'
Landform:
  $ref: 'place.yaml#/Place'
LandmarksOrHistoricalBuildings:
  $ref: 'place.yaml#/Place'
Language:
  $ref: 'intangible.yaml#/Intangible'
LeaveAction:
  description: >
    An agent leaves an event / group with participants/friends at a
    location.<br/><br/>


    Related actions:<br/><br/>


    <ul>

    <li><a class="localLink" href="http://schema.org/JoinAction">JoinAction</a>:
    The antonym of LeaveAction.</li>

    <li><a class="localLink"
    href="http://schema.org/UnRegisterAction">UnRegisterAction</a>: Unlike
    UnRegisterAction, LeaveAction implies leaving a group/team of people rather
    than a service.</li>

    </ul>
  allOf:
    - $ref: 'interactaction.yaml#/InteractAction'
    - type: object
      properties:
        event:
          $ref: 'event.yaml#/Event'
          description: >-
            Upcoming or past event associated with this place, organization, or
            action.
LegalService:
  $ref: 'localbusiness.yaml#/LocalBusiness'
LegislativeBuilding:
  $ref: 'governmentbuilding.yaml#/GovernmentBuilding'
LendAction:
  description: >
    The act of providing an object under an agreement that it will be returned
    at a later date. Reciprocal of BorrowAction.<br/><br/>


    Related actions:<br/><br/>


    <ul>

    <li><a class="localLink"
    href="http://schema.org/BorrowAction">BorrowAction</a>: Reciprocal of
    LendAction.</li>

    </ul>
  allOf:
    - $ref: 'TransferAction.yaml#/TransferAction'
    - type: object
      properties:
        borrower:
          $ref: 'Person.yaml#/Person'
          description: >-
            A sub property of participant. The person that borrows the object
            being lent.
Library:
  $ref: 'localbusiness.yaml#/LocalBusiness'
LikeAction:
  $ref: 'reactaction.yaml#/ReactAction'
LiquorStore:
  $ref: 'store.yaml#/Store'
ListenAction:
  $ref: 'consumeaction.yaml#/ConsumeAction'
ListItem:
  description: 'An list item, e.g. a step in a checklist or how-to description.'
  allOf:
    - $ref: 'intangible.yaml#/Intangible'
    - type: object
      properties:
        item:
          $ref: 'thing.yaml#/Thing'
          description: >-
            An entity represented by an entry in a list or data feed (e.g. an
            'artist' in a list of 'artists')’.
        nextItem:
          $ref: 'listitem.yaml#/ListItem'
          description: A link to the ListItem that follows the current one.
        previousItem:
          $ref: 'listitem.yaml#/ListItem'
          description: A link to the ListItem that preceeds the current one.
        position:
          oneOf:
            - type: integer
            - type: string
          description: The position of an item in a series or sequence of items.
LiteraryEvent:
  $ref: 'event.yaml#/Event'
LiveBlogPosting:
  description: >-
    A blog post intended to provide a rolling textual coverage of an ongoing
    event through continuous updates.
  allOf:
    - $ref: 'blogposting.yaml#/BlogPosting'
    - type: object
      properties:
        coverageEndTime:
          type: string
          format: date-time
          description: >-
            The time when the live blog will stop covering the Event. Note that
            coverage may continue after the Event concludes.
        liveBlogUpdate:
          $ref: 'blogposting.yaml#/BlogPosting'
          description: An update to the LiveBlog.
        coverageStartTime:
          type: string
          format: date-time
          description: >-
            The time when the live blog will begin covering the Event. Note that
            coverage may begin before the Event's start time. The
            LiveBlogPosting may also be created before coverage begins.
LoanOrCredit:
  description: >-
    A financial product for the loaning of an amount of money under agreed terms
    and charges.
  allOf:
    - $ref: 'financialproduct.yaml#/FinancialProduct'
    - type: object
      properties:
        gracePeriod:
          $ref: 'duration.yaml#/Duration'
          description: >-
            The period of time after any due date that the borrower has to
            fulfil its obligations before a default (failure to pay) is deemed
            to have occurred.
        renegotiableLoan:
          type: boolean
          description: >-
            Whether the terms for payment of interest can be renegotiated during
            the life of the loan.
        loanType:
          oneOf:
            - $ref: 'url.yaml#/URL'
            - type: string
          description: The type of a loan or credit.
        amount:
          oneOf:
            - $ref: 'monetaryamount.yaml#/MonetaryAmount'
            - type: number
          description: The amount of money.
        loanTerm:
          $ref: 'quantitativevalue.yaml#/QuantitativeValue'
          description: The duration of the loan or credit agreement.
        loanRepaymentForm:
          type: object
          description: >-
            A form of paying back money previously borrowed from a lender.
            Repayment usually takes the form of periodic payments that normally
            include part principal plus interest in each payment.
        recourseLoan:
          type: boolean
          description: >-
            The only way you get the money back in the event of default is the
            security. Recourse is where you still have the opportunity to go
            back to the borrower for the rest of the money.
        currency:
          type: string
          description:
            - >-
              The currency in which the monetary amount is expressed (in
              3-letter <a href="http://en.wikipedia.org/wiki/ISO_4217">ISO
              4217</a> format).
            - >-
              The currency in which the monetary amount is expressed.<br/><br/>


              Use standard formats: <a
              href="http://en.wikipedia.org/wiki/ISO_4217">ISO 4217 currency
              format</a> e.g. "USD"; <a
              href="https://en.wikipedia.org/wiki/List_of_cryptocurrencies">Ticker
              symbol</a> for cryptocurrencies e.g. "BTC"; well known names for
              <a
              href="https://en.wikipedia.org/wiki/Local_exchange_trading_system">Local
              Exchange Tradings Systems</a> (LETS) and other currency types e.g.
              "Ithaca HOUR".
        requiredCollateral:
          oneOf:
            - $ref: 'thing.yaml#/Thing'
            - type: string
          description: >-
            Assets required to secure loan or credit repayments. It may take
            form of third party pledge, goods, financial instruments (cash,
            securities, etc.)
LocalBusiness:
  properties:
    paymentAccepted:
      type: string
      description: 'Cash, Credit Card, Cryptocurrency, Local Exchange Tradings System, etc.'
    priceRange:
      type: string
      description: 'The price range of the business, for example <code>$$$</code>.'
    currenciesAccepted:
      type: string
      description: >-
        The currency accepted.<br/><br/>


        Use standard formats: <a
        href="http://en.wikipedia.org/wiki/ISO_4217">ISO 4217 currency
        format</a> e.g. "USD"; <a
        href="https://en.wikipedia.org/wiki/List_of_cryptocurrencies">Ticker
        symbol</a> for cryptocurrencies e.g. "BTC"; well known names for <a
        href="https://en.wikipedia.org/wiki/Local_exchange_trading_system">Local
        Exchange Tradings Systems</a> (LETS) and other currency types e.g.
        "Ithaca HOUR".
    openingHours:
      type: string
      description: >
        The general opening hours for a business. Opening hours can be specified
        as a weekly time range, starting with days, then times per day. Multiple
        days can be listed with commas ',' separating each day. Day or time
        ranges are specified using a hyphen '-'.<br/><br/>


        <ul>

        <li>Days are specified using the following two-letter combinations:
        <code>Mo</code>, <code>Tu</code>, <code>We</code>, <code>Th</code>,
        <code>Fr</code>, <code>Sa</code>, <code>Su</code>.</li>

        <li>Times are specified using 24:00 time. For example, 3pm is specified
        as <code>15:00</code>. </li>

        <li>Here is an example: <code>&lt;time itemprop="openingHours"
        datetime=&quot;Tu,Th 16:00-20:00&quot;&gt;Tuesdays and Thursdays
        4-8pm&lt;/time&gt;</code>.</li>

        <li>If a business is open 7 days a week, then it can be specified as
        <code>&lt;time itemprop=&quot;openingHours&quot;
        datetime=&quot;Mo-Su&quot;&gt;Monday through Sunday, all
        day&lt;/time&gt;</code>.</li>

        </ul>
    branchOf:
      $ref: 'organization.yaml#/Organization'
      description: >-
        The larger organization that this local business is a branch of, if any.
        Not to be confused with (anatomical)<a class="localLink"
        href="http://schema.org/branch">branch</a>.
LocationFeatureSpecification:
  description: >-
    Specifies a location feature by providing a structured value representing a
    feature of an accommodation as a property-value pair of varying degrees of
    formality.
  allOf:
    - $ref: 'propertyvalue.yaml#/PropertyValue'
    - type: object
      properties:
        validThrough:
          type: string
          format: date-time
          description: >-
            The date after when the item is not valid. For example the end of an
            offer, salary period, or a period of opening hours.
        hoursAvailable:
          $ref: 'openinghoursspecification.yaml#/OpeningHoursSpecification'
          description: The hours during which this service or contact is available.
        validFrom:
          type: string
          format: date-time
          description: The date when the item becomes valid.
LockerDelivery:
  $ref: 'DeliveryMethod.yaml#/DeliveryMethod'
Locksmith:
  $ref: 'HomeAndConstructionBusiness.yaml#/HomeAndConstructionBusiness'
LodgingBusiness:
  description: 'A lodging business, such as a motel, hotel, or inn.'
  allOf:
    - $ref: 'localbusiness.yaml#/LocalBusiness'
    - type: object
      properties:
        checkinTime:
          type: string
          format: date-time
          description: The earliest someone may check into a lodging establishment.
        checkoutTime:
          type: string
          format: date-time
          description: The latest someone may check out of a lodging establishment.
        petsAllowed:
          oneOf:
            - type: string
            - type: boolean
          description: >-
            Indicates whether pets are allowed to enter the accommodation or
            lodging business. More detailed information can be put in a text
            value.
        amenityFeature:
          $ref: 'locationfeaturespecification.yaml#/LocationFeatureSpecification'
          description: >-
            An amenity feature (e.g. a characteristic or service) of the
            Accommodation. This generic property does not make a statement about
            whether the feature is included in an offer for the main
            accommodation or available at extra costs.
        availableLanguage:
          oneOf:
            - type: string
            - $ref: 'language.yaml#/Language'
          description: >-
            A language someone may use with or at the item, service or place.
            Please use one of the language codes from the <a
            href="http://tools.ietf.org/html/bcp47">IETF BCP 47 standard</a>.
            See also <a class="localLink"
            href="http://schema.org/inLanguage">inLanguage</a>
        audience:
          $ref: 'audience.yaml#/Audience'
          description: 'An intended audience, i.e. a group for whom something was created.'
        starRating:
          $ref: 'rating.yaml#/Rating'
          description: >-
            An official rating for a lodging business or food establishment,
            e.g. from national associations or standards bodies. Use the author
            property to indicate the rating organization, e.g. as an
            Organization with name such as (e.g. HOTREC, DEHOGA, WHR, or
            Hotelstars).
LodgingReservation:
  description: >-
    A reservation for lodging at a hotel, motel, inn, etc.<br/><br/>


    Note: This type is for information about actual reservations, e.g. in
    confirmation emails or HTML pages with individual confirmations of
    reservations.
  allOf:
    - $ref: 'Reservation.yaml#/Reservation'
    - type: object
      properties:
        numAdults:
          oneOf:
            - $ref: 'QuantitativeValue.yaml#/QuantitativeValue'
            - type: integer
          description: The number of adults staying in the unit.
        numChildren:
          oneOf:
            - $ref: 'QuantitativeValue.yaml#/QuantitativeValue'
            - type: integer
          description: The number of children staying in the unit.
        checkoutTime:
          type: string
          format: date-time
          description: The latest someone may check out of a lodging establishment.
        checkinTime:
          type: string
          format: date-time
          description: The earliest someone may check into a lodging establishment.
        lodgingUnitDescription:
          type: string
          description: A full description of the lodging unit.
        lodgingUnitType:
          oneOf:
            - type: string
            - $ref: 'QualitativeValue.yaml#/QualitativeValue'
          description: >-
            Textual description of the unit type (including suite vs. room, size
            of bed, etc.).
LoseAction:
  description: The act of being defeated in a competitive activity.
  allOf:
    - $ref: 'achieveaction.yaml#/AchieveAction'
    - type: object
      properties:
        winner:
          $ref: 'person.yaml#/Person'
          description: A sub property of participant. The winner of the action.
Map:
  description: A map.
  allOf:
    - $ref: 'creativework.yaml#/CreativeWork'
    - type: object
      properties:
        mapType:
          $ref: 'mapcategorytype.yaml#/MapCategoryType'
          description: 'Indicates the kind of Map, from the MapCategoryType Enumeration.'
MapCategoryType:
  $ref: 'Enumeration.yaml#/Enumeration'
MarryAction:
  $ref: 'interactaction.yaml#/InteractAction'
Mass:
  $ref: 'quantity.yaml#/Quantity'
MediaObject:
  description: >-
    A media object, such as an image, video, or audio object embedded in a web
    page or a downloadable dataset i.e. DataDownload. Note that a creative work
    may have many media objects associated with it on the same web page. For
    example, a page about a single song (MusicRecording) may have a music video
    (VideoObject), and a high and low bandwidth audio stream (2 AudioObject's).
  allOf:
    - $ref: 'CreativeWork.yaml#/CreativeWork'
    - type: object
      properties:
        regionsAllowed:
          $ref: 'Place.yaml#/Place'
          description: >-
            The regions where the media is allowed. If not specified, then it's
            assumed to be allowed everywhere. Specify the countries in <a
            href="http://en.wikipedia.org/wiki/ISO_3166">ISO 3166 format</a>.
        requiresSubscription:
          oneOf:
            - type: object
              description: >-
                Type: MediaSubscription This type is not published yet in
                schema.org.
            - type: boolean
          description: >-
            Indicates if use of the media require a subscription  (either paid
            or free). Allowed values are <code>true</code> or <code>false</code>
            (note that an earlier version had 'yes', 'no').
        width:
          oneOf:
            - $ref: 'QuantitativeValue.yaml#/QuantitativeValue'
            - $ref: 'Distance.yaml#/Distance'
          description: The width of the item.
        height:
          oneOf:
            - $ref: 'Distance.yaml#/Distance'
            - $ref: 'QuantitativeValue.yaml#/QuantitativeValue'
          description: The height of the item.
        contentSize:
          type: string
          description: File size in (mega/kilo) bytes.
        playerType:
          type: string
          description: 'Player type required&#x2014;for example, Flash or Silverlight.'
        embedUrl:
          $ref: 'URL.yaml#/URL'
          description: >-
            A URL pointing to a player for a specific video. In general, this is
            the information in the <code>src</code> element of an
            <code>embed</code> tag and should not be the same as the content of
            the <code>loc</code> tag.
        contentUrl:
          $ref: 'URL.yaml#/URL'
          description: >-
            Actual bytes of the media object, for example the image file or
            video file.
        uploadDate:
          type: string
          format: date
          description: Date when this media object was uploaded to this site.
        bitrate:
          type: string
          description: The bitrate of the media object.
        encodingFormat:
          oneOf:
            - $ref: 'URL.yaml#/URL'
            - type: string
          description: >-
            Media type typically expressed using a MIME format (see <a
            href="http://www.iana.org/assignments/media-types/media-types.xhtml">IANA
            site</a> and <a
            href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types">MDN
            reference</a>) e.g. application/zip for a SoftwareApplication
            binary, audio/mpeg for .mp3 etc.).<br/><br/>


            In cases where a <a class="localLink"
            href="http://schema.org/CreativeWork">CreativeWork</a> has several
            media type representations, <a class="localLink"
            href="http://schema.org/encoding">encoding</a> can be used to
            indicate each <a class="localLink"
            href="http://schema.org/MediaObject">MediaObject</a> alongside
            particular <a class="localLink"
            href="http://schema.org/encodingFormat">encodingFormat</a>
            information.<br/><br/>


            Unregistered or niche encoding and file formats can be indicated
            instead via the most appropriate URL, e.g. defining Web page or a
            Wikipedia/Wikidata entry.
        encodesCreativeWork:
          $ref: 'CreativeWork.yaml#/CreativeWork'
          description: The CreativeWork encoded by this media object.
        productionCompany:
          $ref: 'Organization.yaml#/Organization'
          description: >-
            The production company or studio responsible for the item e.g.
            series, video game, episode etc.
        associatedArticle:
          $ref: 'NewsArticle.yaml#/NewsArticle'
          description: A NewsArticle associated with the Media Object.
        duration:
          $ref: 'Duration.yaml#/Duration'
          description: >-
            The duration of the item (movie, audio recording, event, etc.) in <a
            href="http://en.wikipedia.org/wiki/ISO_8601">ISO 8601 date
            format</a>.
MedicalOrganization:
  description: >-
    A medical organization (physical or not), such as hospital, institution or
    clinic.
  allOf:
    - $ref: 'organization.yaml#/Organization'
    - type: object
      properties:
        healthPlanNetworkId:
          type: string
          description: >-
            Name or unique ID of network. (Networks are often reused across
            different insurance plans).
        isAcceptingNewPatients:
          type: boolean
          description: Whether the provider is accepting new patients.
        medicalSpecialty:
          type: object
          description: A medical specialty of the provider.
MeetingRoom:
  $ref: 'room.yaml#/Room'
MensClothingStore:
  $ref: 'store.yaml#/Store'
Menu:
  description: >-
    A structured representation of food or drink items available from a
    FoodEstablishment.
  allOf:
    - $ref: 'creativework.yaml#/CreativeWork'
    - type: object
      properties:
        hasMenuSection:
          $ref: 'menusection.yaml#/MenuSection'
          description: >-
            A subgrouping of the menu (by dishes, course, serving time period,
            etc.).
        hasMenuItem:
          $ref: 'menuitem.yaml#/MenuItem'
          description: A food or drink item contained in a menu or menu section.
MenuItem:
  description: A food or drink item listed in a menu or menu section.
  allOf:
    - $ref: 'intangible.yaml#/Intangible'
    - type: object
      properties:
        suitableForDiet:
          $ref: 'restricteddiet.yaml#/RestrictedDiet'
          description: >-
            Indicates a dietary restriction or guideline for which this recipe
            or menu item is suitable, e.g. diabetic, halal etc.
        nutrition:
          $ref: 'nutritioninformation.yaml#/NutritionInformation'
          description: Nutrition information about the recipe or menu item.
        offers:
          $ref: 'offer.yaml#/Offer'
          description: >-
            An offer to provide this item&#x2014;for example, an offer to sell a
            product, rent the DVD of a movie, perform a service, or give away
            tickets to an event.
        menuAddOn:
          oneOf:
            - $ref: 'menusection.yaml#/MenuSection'
            - $ref: 'menuitem.yaml#/MenuItem'
          description: >-
            Additional menu item(s) such as a side dish of salad or side order
            of fries that can be added to this menu item. Additionally it can be
            a menu section containing allowed add-on menu items for this menu
            item.
MenuSection:
  description: >-
    A sub-grouping of food or drink items in a menu. E.g. courses (such as
    'Dinner', 'Breakfast', etc.), specific type of dishes (such as 'Meat',
    'Vegan', 'Drinks', etc.), or some other classification made by the menu
    provider.
  allOf:
    - $ref: 'creativework.yaml#/CreativeWork'
    - type: object
      properties:
        hasMenuSection:
          $ref: 'menusection.yaml#/MenuSection'
          description: >-
            A subgrouping of the menu (by dishes, course, serving time period,
            etc.).
        hasMenuItem:
          $ref: 'menuitem.yaml#/MenuItem'
          description: A food or drink item contained in a menu or menu section.
Message:
  description: A single message from a sender to one or more organizations or people.
  allOf:
    - $ref: 'creativework.yaml#/CreativeWork'
    - type: object
      properties:
        messageAttachment:
          $ref: 'creativework.yaml#/CreativeWork'
          description: A CreativeWork attached to the message.
        dateSent:
          type: string
          format: date-time
          description: The date/time at which the message was sent.
        sender:
          oneOf:
            - $ref: 'person.yaml#/Person'
            - $ref: 'organization.yaml#/Organization'
            - $ref: 'audience.yaml#/Audience'
          description: >-
            A sub property of participant. The participant who is at the sending
            end of the action.
        dateReceived:
          type: string
          format: date-time
          description: The date/time the message was received if a single recipient exists.
        bccRecipient:
          oneOf:
            - $ref: 'contactpoint.yaml#/ContactPoint'
            - $ref: 'person.yaml#/Person'
            - $ref: 'organization.yaml#/Organization'
          description: >-
            A sub property of recipient. The recipient blind copied on a
            message.
        dateRead:
          type: string
          format: date-time
          description: >-
            The date/time at which the message has been read by the recipient if
            a single recipient exists.
        toRecipient:
          oneOf:
            - $ref: 'organization.yaml#/Organization'
            - $ref: 'person.yaml#/Person'
            - $ref: 'audience.yaml#/Audience'
            - $ref: 'contactpoint.yaml#/ContactPoint'
          description: >-
            A sub property of recipient. The recipient who was directly sent the
            message.
        recipient:
          oneOf:
            - $ref: 'person.yaml#/Person'
            - $ref: 'contactpoint.yaml#/ContactPoint'
            - $ref: 'audience.yaml#/Audience'
            - $ref: 'organization.yaml#/Organization'
          description: >-
            A sub property of participant. The participant who is at the
            receiving end of the action.
        ccRecipient:
          oneOf:
            - $ref: 'person.yaml#/Person'
            - $ref: 'contactpoint.yaml#/ContactPoint'
            - $ref: 'organization.yaml#/Organization'
          description: A sub property of recipient. The recipient copied on a message.
MiddleSchool:
  $ref: 'educationalorganization.yaml#/EducationalOrganization'
MobileApplication:
  description: >-
    A software application designed specifically to work well on a mobile device
    such as a telephone.
  allOf:
    - $ref: 'softwareapplication.yaml#/SoftwareApplication'
    - type: object
      properties:
        carrierRequirements:
          type: string
          description: >-
            Specifies specific carrier(s) requirements for the application (e.g.
            an application may only work on a specific carrier network).
MobilePhoneStore:
  $ref: 'store.yaml#/Store'
MonetaryAmount:
  description: >-
    A monetary value or range. This type can be used to describe an amount of
    money such as $50 USD, or a range as in describing a bank account being
    suitable for a balance between £1,000 and £1,000,000 GBP, or the value of a
    salary, etc. It is recommended to use <a class="localLink"
    href="http://schema.org/PriceSpecification">PriceSpecification</a> Types to
    describe the price of an Offer, Invoice, etc.
  allOf:
    - $ref: 'structuredvalue.yaml#/StructuredValue'
    - type: object
      properties:
        validThrough:
          type: string
          format: date-time
          description: >-
            The date after when the item is not valid. For example the end of an
            offer, salary period, or a period of opening hours.
        value:
          oneOf:
            - type: string
            - type: number
            - $ref: 'structuredvalue.yaml#/StructuredValue'
            - type: boolean
          description: >
            The value of the quantitative value or property value
            node.<br/><br/>


            <ul>

            <li>For <a class="localLink"
            href="http://schema.org/QuantitativeValue">QuantitativeValue</a> and
            <a class="localLink"
            href="http://schema.org/MonetaryAmount">MonetaryAmount</a>, the
            recommended type for values is 'Number'.</li>

            <li>For <a class="localLink"
            href="http://schema.org/PropertyValue">PropertyValue</a>, it can be
            'Text;', 'Number', 'Boolean', or 'StructuredValue'.</li>

            </ul>
        minValue:
          type: number
          description: The lower value of some characteristic or property.
        maxValue:
          type: number
          description: The upper value of some characteristic or property.
        currency:
          type: string
          description:
            - >-
              The currency in which the monetary amount is expressed (in
              3-letter <a href="http://en.wikipedia.org/wiki/ISO_4217">ISO
              4217</a> format).
            - >-
              The currency in which the monetary amount is expressed.<br/><br/>


              Use standard formats: <a
              href="http://en.wikipedia.org/wiki/ISO_4217">ISO 4217 currency
              format</a> e.g. "USD"; <a
              href="https://en.wikipedia.org/wiki/List_of_cryptocurrencies">Ticker
              symbol</a> for cryptocurrencies e.g. "BTC"; well known names for
              <a
              href="https://en.wikipedia.org/wiki/Local_exchange_trading_system">Local
              Exchange Tradings Systems</a> (LETS) and other currency types e.g.
              "Ithaca HOUR".
        validFrom:
          type: string
          format: date-time
          description: The date when the item becomes valid.
Mosque:
  $ref: 'placeofworship.yaml#/PlaceOfWorship'
Motel:
  $ref: 'lodgingbusiness.yaml#/LodgingBusiness'
MotorcycleDealer:
  $ref: 'automotivebusiness.yaml#/AutomotiveBusiness'
MotorcycleRepair:
  $ref: 'AutomotiveBusiness.yaml#/AutomotiveBusiness'
Mountain:
  $ref: 'Landform.yaml#/Landform'
MoveAction:
  description: >
    The act of an agent relocating to a place.<br/><br/>


    Related actions:<br/><br/>


    <ul>

    <li><a class="localLink"
    href="http://schema.org/TransferAction">TransferAction</a>: Unlike
    TransferAction, the subject of the move is a living Person or Organization
    rather than an inanimate object.</li>

    </ul>
  allOf:
    - $ref: 'action.yaml#/Action'
    - type: object
      properties:
        fromLocation:
          $ref: 'place.yaml#/Place'
          description: >-
            A sub property of location. The original location of the object or
            the agent before the action.
        toLocation:
          $ref: 'place.yaml#/Place'
          description: >-
            A sub property of location. The final location of the object or the
            agent after the action.
Movie:
  description: A movie.
  allOf:
    - $ref: 'creativework.yaml#/CreativeWork'
    - type: object
      properties:
        directors:
          $ref: 'person.yaml#/Person'
          description: >-
            A director of e.g. tv, radio, movie, video games etc. content.
            Directors can be associated with individual items or with a series,
            episode, clip.
        subtitleLanguage:
          oneOf:
            - type: string
            - $ref: 'language.yaml#/Language'
          description: >-
            Languages in which subtitles/captions are available, in <a
            href="http://tools.ietf.org/html/bcp47">IETF BCP 47 standard
            format</a>.
        musicBy:
          oneOf:
            - $ref: 'musicgroup.yaml#/MusicGroup'
            - $ref: 'person.yaml#/Person'
          description: The composer of the soundtrack.
        actors:
          $ref: 'person.yaml#/Person'
          description: >-
            An actor, e.g. in tv, radio, movie, video games etc. Actors can be
            associated with individual items or with a series, episode, clip.
        actor:
          $ref: 'person.yaml#/Person'
          description: >-
            An actor, e.g. in tv, radio, movie, video games etc., or in an
            event. Actors can be associated with individual items or with a
            series, episode, clip.
        director:
          $ref: 'person.yaml#/Person'
          description: >-
            A director of e.g. tv, radio, movie, video gaming etc. content, or
            of an event. Directors can be associated with individual items or
            with a series, episode, clip.
        countryOfOrigin:
          $ref: 'country.yaml#/Country'
          description: >-
            The country of the principal offices of the production company or
            individual responsible for the movie or program.
        trailer:
          $ref: 'videoobject.yaml#/VideoObject'
          description: 'The trailer of a movie or tv/radio series, season, episode, etc.'
        productionCompany:
          $ref: 'organization.yaml#/Organization'
          description: >-
            The production company or studio responsible for the item e.g.
            series, video game, episode etc.
        duration:
          $ref: 'duration.yaml#/Duration'
          description: >-
            The duration of the item (movie, audio recording, event, etc.) in <a
            href="http://en.wikipedia.org/wiki/ISO_8601">ISO 8601 date
            format</a>.
MovieClip:
  $ref: 'clip.yaml#/Clip'
MovieRentalStore:
  $ref: 'Store.yaml#/Store'
MovieSeries:
  description: >-
    A series of movies. Included movies can be indicated with the hasPart
    property.
  allOf:
    - $ref: 'creativeworkseries.yaml#/CreativeWorkSeries'
    - type: object
      properties:
        directors:
          $ref: 'person.yaml#/Person'
          description: >-
            A director of e.g. tv, radio, movie, video games etc. content.
            Directors can be associated with individual items or with a series,
            episode, clip.
        musicBy:
          oneOf:
            - $ref: 'musicgroup.yaml#/MusicGroup'
            - $ref: 'person.yaml#/Person'
          description: The composer of the soundtrack.
        actors:
          $ref: 'person.yaml#/Person'
          description: >-
            An actor, e.g. in tv, radio, movie, video games etc. Actors can be
            associated with individual items or with a series, episode, clip.
        actor:
          $ref: 'person.yaml#/Person'
          description: >-
            An actor, e.g. in tv, radio, movie, video games etc., or in an
            event. Actors can be associated with individual items or with a
            series, episode, clip.
        director:
          $ref: 'person.yaml#/Person'
          description: >-
            A director of e.g. tv, radio, movie, video gaming etc. content, or
            of an event. Directors can be associated with individual items or
            with a series, episode, clip.
        trailer:
          $ref: 'videoobject.yaml#/VideoObject'
          description: 'The trailer of a movie or tv/radio series, season, episode, etc.'
        productionCompany:
          $ref: 'organization.yaml#/Organization'
          description: >-
            The production company or studio responsible for the item e.g.
            series, video game, episode etc.
MovieTheater:
  properties:
    screenCount:
      type: number
      description: The number of screens in the movie theater.
MovingCompany:
  $ref: 'homeandconstructionbusiness.yaml#/HomeAndConstructionBusiness'
Museum:
  $ref: 'civicstructure.yaml#/CivicStructure'
MusicAlbum:
  description: A collection of music tracks.
  allOf:
    - $ref: 'musicplaylist.yaml#/MusicPlaylist'
    - type: object
      properties:
        albumProductionType:
          $ref: 'musicalbumproductiontype.yaml#/MusicAlbumProductionType'
          description: >-
            Classification of the album by it's type of content: soundtrack,
            live album, studio album, etc.
        albumReleaseType:
          $ref: 'musicalbumreleasetype.yaml#/MusicAlbumReleaseType'
          description: 'The kind of release which this album is: single, EP or album.'
        albumRelease:
          $ref: 'musicrelease.yaml#/MusicRelease'
          description: A release of this album.
        byArtist:
          $ref: 'musicgroup.yaml#/MusicGroup'
          description: The artist that performed this album or recording.
MusicAlbumProductionType:
  $ref: 'enumeration.yaml#/Enumeration'
MusicAlbumReleaseType:
  $ref: 'enumeration.yaml#/Enumeration'
MusicComposition:
  description: A musical composition.
  allOf:
    - $ref: 'CreativeWork.yaml#/CreativeWork'
    - type: object
      properties:
        composer:
          oneOf:
            - $ref: 'Organization.yaml#/Organization'
            - $ref: 'Person.yaml#/Person'
          description: >-
            The person or organization who wrote a composition, or who is the
            composer of a work performed at some event.
        musicCompositionForm:
          type: string
          description: 'The type of composition (e.g. overture, sonata, symphony, etc.).'
        iswcCode:
          type: string
          description: The International Standard Musical Work Code for the composition.
        musicalKey:
          type: string
          description: 'The key, mode, or scale this composition uses.'
        musicArrangement:
          $ref: 'MusicComposition.yaml#/MusicComposition'
          description: An arrangement derived from the composition.
        firstPerformance:
          $ref: 'Event.yaml#/Event'
          description: The date and place the work was first performed.
        includedComposition:
          $ref: 'MusicComposition.yaml#/MusicComposition'
          description: >-
            Smaller compositions included in this work (e.g. a movement in a
            symphony).
        lyricist:
          $ref: 'Person.yaml#/Person'
          description: The person who wrote the words.
        lyrics:
          $ref: 'CreativeWork.yaml#/CreativeWork'
          description: The words in the song.
        recordedAs:
          $ref: 'MusicRecording.yaml#/MusicRecording'
          description: An audio recording of the work.
MusicEvent:
  $ref: 'event.yaml#/Event'
MusicGroup:
  description: >-
    A musical group, such as a band, an orchestra, or a choir. Can also be a
    solo musician.
  allOf:
    - $ref: 'performinggroup.yaml#/PerformingGroup'
    - type: object
      properties:
        albums:
          $ref: 'musicalbum.yaml#/MusicAlbum'
          description: A collection of music albums.
        musicGroupMember:
          $ref: 'person.yaml#/Person'
          description: >-
            A member of a music group&#x2014;for example, John, Paul, George, or
            Ringo.
        album:
          $ref: 'musicalbum.yaml#/MusicAlbum'
          description: A music album.
        track:
          oneOf:
            - $ref: 'musicrecording.yaml#/MusicRecording'
            - $ref: 'itemlist.yaml#/ItemList'
          description: >-
            A music recording (track)&#x2014;usually a single song. If an
            ItemList is given, the list should contain items of type
            MusicRecording.
        tracks:
          $ref: 'musicrecording.yaml#/MusicRecording'
          description: 'A music recording (track)&#x2014;usually a single song.'
        genre:
          oneOf:
            - type: string
            - $ref: 'url.yaml#/URL'
          description: 'Genre of the creative work, broadcast channel or group.'
MusicPlaylist:
  description: A collection of music tracks in playlist form.
  allOf:
    - $ref: 'creativework.yaml#/CreativeWork'
    - type: object
      properties:
        tracks:
          $ref: 'musicrecording.yaml#/MusicRecording'
          description: 'A music recording (track)&#x2014;usually a single song.'
        numTracks:
          type: integer
          description: The number of tracks in this album or playlist.
        track:
          oneOf:
            - $ref: 'itemlist.yaml#/ItemList'
            - $ref: 'musicrecording.yaml#/MusicRecording'
          description: >-
            A music recording (track)&#x2014;usually a single song. If an
            ItemList is given, the list should contain items of type
            MusicRecording.
MusicRecording:
  description: 'A music recording (track), usually a single song.'
  allOf:
    - $ref: 'creativework.yaml#/CreativeWork'
    - type: object
      properties:
        inAlbum:
          $ref: 'musicalbum.yaml#/MusicAlbum'
          description: The album to which this recording belongs.
        inPlaylist:
          $ref: 'musicplaylist.yaml#/MusicPlaylist'
          description: The playlist to which this recording belongs.
        isrcCode:
          type: string
          description: The International Standard Recording Code for the recording.
        recordingOf:
          $ref: 'musiccomposition.yaml#/MusicComposition'
          description: The composition this track is a recording of.
        byArtist:
          $ref: 'musicgroup.yaml#/MusicGroup'
          description: The artist that performed this album or recording.
        duration:
          $ref: 'duration.yaml#/Duration'
          description: >-
            The duration of the item (movie, audio recording, event, etc.) in <a
            href="http://en.wikipedia.org/wiki/ISO_8601">ISO 8601 date
            format</a>.
MusicRelease:
  description: A MusicRelease is a specific release of a music album.
  allOf:
    - $ref: 'musicplaylist.yaml#/MusicPlaylist'
    - type: object
      properties:
        creditedTo:
          oneOf:
            - $ref: 'organization.yaml#/Organization'
            - $ref: 'person.yaml#/Person'
          description: >-
            The group the release is credited to if different than the byArtist.
            For example, Red and Blue is credited to "Stefani Germanotta Band",
            but by Lady Gaga.
        musicReleaseFormat:
          $ref: 'musicreleaseformattype.yaml#/MusicReleaseFormatType'
          description: >-
            Format of this release (the type of recording media used, ie.
            compact disc, digital media, LP, etc.).
        catalogNumber:
          type: string
          description: The catalog number for the release.
        releaseOf:
          $ref: 'musicalbum.yaml#/MusicAlbum'
          description: The album this is a release of.
        recordLabel:
          $ref: 'organization.yaml#/Organization'
          description: The label that issued the release.
        duration:
          $ref: 'duration.yaml#/Duration'
          description: >-
            The duration of the item (movie, audio recording, event, etc.) in <a
            href="http://en.wikipedia.org/wiki/ISO_8601">ISO 8601 date
            format</a>.
MusicReleaseFormatType:
  $ref: 'enumeration.yaml#/Enumeration'
MusicStore:
  $ref: 'Store.yaml#/Store'
MusicVenue:
  $ref: 'civicstructure.yaml#/CivicStructure'
MusicVideoObject:
  $ref: 'mediaobject.yaml#/MediaObject'
NailSalon:
  $ref: 'healthandbeautybusiness.yaml#/HealthAndBeautyBusiness'
NewsArticle:
  description: >-
    A NewsArticle is an article whose content reports news, or provides
    background context and supporting materials for understanding the
    news.<br/><br/>


    A more detailed overview of <a href="/docs/news.html">schema.org News
    markup</a> is also available.
  allOf:
    - $ref: 'article.yaml#/Article'
    - type: object
      properties:
        printPage:
          type: string
          description: >-
            If this NewsArticle appears in print, this field indicates the name
            of the page on which the article is found. Please note that this
            field is intended for the exact page name (e.g. A5, B18).
        printColumn:
          type: string
          description: >-
            The number of the column in which the NewsArticle appears in the
            print edition.
        printEdition:
          type: string
          description: The edition of the print product in which the NewsArticle appears.
        dateline:
          type: string
          description: >-
            A <a href="https://en.wikipedia.org/wiki/Dateline">dateline</a> is a
            brief piece of text included in news articles that describes where
            and when the story was written or filed though the date is often
            omitted. Sometimes only a placename is provided.<br/><br/>


            Structured representations of dateline-related information can also
            be expressed more explicitly using <a class="localLink"
            href="http://schema.org/locationCreated">locationCreated</a> (which
            represents where a work was created e.g. where a news report was
            written).  For location depicted or described in the content, use <a
            class="localLink"
            href="http://schema.org/contentLocation">contentLocation</a>.<br/><br/>


            Dateline summaries are oriented more towards human readers than
            towards automated processing, and can vary substantially. Some
            examples: "BEIRUT, Lebanon, June 2.", "Paris, France", "December 19,
            2017 11:43AM Reporting from Washington", "Beijing/Moscow", "QUEZON
            CITY, Philippines".
        printSection:
          type: string
          description: >-
            If this NewsArticle appears in print, this field indicates the print
            section in which the article appeared.
NGO:
  $ref: 'organization.yaml#/Organization'
NightClub:
  $ref: 'entertainmentbusiness.yaml#/EntertainmentBusiness'
Notary:
  $ref: 'legalservice.yaml#/LegalService'
NoteDigitalDocument:
  $ref: 'digitaldocument.yaml#/DigitalDocument'
NutritionInformation:
  description: Nutritional information about the recipe.
  allOf:
    - $ref: 'structuredvalue.yaml#/StructuredValue'
    - type: object
      properties:
        calories:
          $ref: 'energy.yaml#/Energy'
          description: The number of calories.
        sugarContent:
          $ref: 'mass.yaml#/Mass'
          description: The number of grams of sugar.
        proteinContent:
          $ref: 'mass.yaml#/Mass'
          description: The number of grams of protein.
        saturatedFatContent:
          $ref: 'mass.yaml#/Mass'
          description: The number of grams of saturated fat.
        cholesterolContent:
          $ref: 'mass.yaml#/Mass'
          description: The number of milligrams of cholesterol.
        sodiumContent:
          $ref: 'mass.yaml#/Mass'
          description: The number of milligrams of sodium.
        carbohydrateContent:
          $ref: 'mass.yaml#/Mass'
          description: The number of grams of carbohydrates.
        fatContent:
          $ref: 'mass.yaml#/Mass'
          description: The number of grams of fat.
        unsaturatedFatContent:
          $ref: 'mass.yaml#/Mass'
          description: The number of grams of unsaturated fat.
        fiberContent:
          $ref: 'mass.yaml#/Mass'
          description: The number of grams of fiber.
        servingSize:
          type: string
          description: 'The serving size, in terms of the number of volume or mass.'
        transFatContent:
          $ref: 'mass.yaml#/Mass'
          description: The number of grams of trans fat.
OceanBodyOfWater:
  $ref: 'bodyofwater.yaml#/BodyOfWater'
Offer:
  description: >-
    An offer to transfer some rights to an item or to provide a service — for
    example, an offer to sell tickets to an event, to rent the DVD of a movie,
    to stream a TV show over the internet, to repair a motorcycle, or to loan a
    book.<br/><br/>


    For <a
    href="http://www.gs1.org/barcodes/technical/idkeys/gtin">GTIN</a>-related
    fields, see <a
    href="http://www.gs1.org/barcodes/support/check_digit_calculator">Check
    Digit calculator</a> and <a
    href="http://www.gs1us.org/resources/standards/gtin-validation-guide">validation
    guide</a> from <a href="http://www.gs1.org/">GS1</a>.
  allOf:
    - $ref: 'intangible.yaml#/Intangible'
    - type: object
      properties:
        inventoryLevel:
          $ref: 'quantitativevalue.yaml#/QuantitativeValue'
          description: The current approximate inventory level for the item or items.
        gtin8:
          type: string
          description: >-
            The <a
            href="http://apps.gs1.org/GDD/glossary/Pages/GTIN-8.aspx">GTIN-8</a>
            code of the product, or the product to which the offer refers. This
            code is also known as EAN/UCC-8 or 8-digit EAN. See <a
            href="http://www.gs1.org/barcodes/technical/idkeys/gtin">GS1 GTIN
            Summary</a> for more details.
        addOn:
          $ref: 'offer.yaml#/Offer'
          description: >-
            An additional offer that can only be obtained in combination with
            the first base offer (e.g. supplements and extensions that are
            available for a surcharge).
        validThrough:
          type: string
          format: date-time
          description: >-
            The date after when the item is not valid. For example the end of an
            offer, salary period, or a period of opening hours.
        includesObject:
          $ref: 'typeandquantitynode.yaml#/TypeAndQuantityNode'
          description: >-
            This links to a node or nodes indicating the exact quantity of the
            products included in the offer.
        category:
          oneOf:
            - type: object
              description: >-
                Type: PhysicalActivityCategory This type is not published yet in
                schema.org.
            - $ref: 'thing.yaml#/Thing'
            - type: string
          description: >-
            A category for the item. Greater signs or slashes can be used to
            informally indicate a category hierarchy.
        warranty:
          $ref: 'warrantypromise.yaml#/WarrantyPromise'
          description: The warranty promise(s) included in the offer.
        itemCondition:
          $ref: 'offeritemcondition.yaml#/OfferItemCondition'
          description: >-
            A predefined value from OfferItemCondition or a textual description
            of the condition of the product or service, or the products or
            services included in the offer.
        availabilityEnds:
          type: string
          format: date-time
          description: >-
            The end of the availability of the product or service included in
            the offer.
        review:
          $ref: 'review.yaml#/Review'
          description: A review of the item.
        priceCurrency:
          type: string
          description: >-
            The currency of the price, or a price component when attached to <a
            class="localLink"
            href="http://schema.org/PriceSpecification">PriceSpecification</a>
            and its subtypes.<br/><br/>


            Use standard formats: <a
            href="http://en.wikipedia.org/wiki/ISO_4217">ISO 4217 currency
            format</a> e.g. "USD"; <a
            href="https://en.wikipedia.org/wiki/List_of_cryptocurrencies">Ticker
            symbol</a> for cryptocurrencies e.g. "BTC"; well known names for <a
            href="https://en.wikipedia.org/wiki/Local_exchange_trading_system">Local
            Exchange Tradings Systems</a> (LETS) and other currency types e.g.
            "Ithaca HOUR".
        gtin14:
          type: string
          description: >-
            The GTIN-14 code of the product, or the product to which the offer
            refers. See <a
            href="http://www.gs1.org/barcodes/technical/idkeys/gtin">GS1 GTIN
            Summary</a> for more details.
        gtin13:
          type: string
          description: >-
            The GTIN-13 code of the product, or the product to which the offer
            refers. This is equivalent to 13-digit ISBN codes and EAN UCC-13.
            Former 12-digit UPC codes can be converted into a GTIN-13 code by
            simply adding a preceeding zero. See <a
            href="http://www.gs1.org/barcodes/technical/idkeys/gtin">GS1 GTIN
            Summary</a> for more details.
        gtin12:
          type: string
          description: >-
            The GTIN-12 code of the product, or the product to which the offer
            refers. The GTIN-12 is the 12-digit GS1 Identification Key composed
            of a U.P.C. Company Prefix, Item Reference, and Check Digit used to
            identify trade items. See <a
            href="http://www.gs1.org/barcodes/technical/idkeys/gtin">GS1 GTIN
            Summary</a> for more details.
        advanceBookingRequirement:
          $ref: 'quantitativevalue.yaml#/QuantitativeValue'
          description: >-
            The amount of time that is required between accepting the offer and
            the actual usage of the resource or service.
        ineligibleRegion:
          oneOf:
            - $ref: 'place.yaml#/Place'
            - $ref: 'geoshape.yaml#/GeoShape'
            - type: string
          description: >-
            The ISO 3166-1 (ISO 3166-1 alpha-2) or ISO 3166-2 code, the place,
            or the GeoShape for the geo-political region(s) for which the offer
            or delivery charge specification is not valid, e.g. a region where
            the transaction is not allowed.<br/><br/>


            See also <a class="localLink"
            href="http://schema.org/eligibleRegion">eligibleRegion</a>.
        areaServed:
          oneOf:
            - $ref: 'geoshape.yaml#/GeoShape'
            - $ref: 'place.yaml#/Place'
            - type: string
            - $ref: 'administrativearea.yaml#/AdministrativeArea'
          description: The geographic area where a service or offered item is provided.
        availabilityStarts:
          type: string
          format: date-time
          description: >-
            The beginning of the availability of the product or service included
            in the offer.
        eligibleTransactionVolume:
          $ref: 'pricespecification.yaml#/PriceSpecification'
          description: >-
            The transaction volume, in a monetary unit, for which the offer or
            price specification is valid, e.g. for indicating a minimal
            purchasing volume, to express free shipping above a certain order
            volume, or to limit the acceptance of credit cards to purchases to a
            certain minimal amount.
        sku:
          type: string
          description: >-
            The Stock Keeping Unit (SKU), i.e. a merchant-specific identifier
            for a product or service, or the product to which the offer refers.
        eligibleCustomerType:
          $ref: 'businessentitytype.yaml#/BusinessEntityType'
          description: The type(s) of customers for which the given offer is valid.
        reviews:
          $ref: 'review.yaml#/Review'
          description: Review of the item.
        aggregateRating:
          $ref: 'aggregaterating.yaml#/AggregateRating'
          description: >-
            The overall rating, based on a collection of reviews or ratings, of
            the item.
        businessFunction:
          $ref: 'businessfunction.yaml#/BusinessFunction'
          description: >-
            The business function (e.g. sell, lease, repair, dispose) of the
            offer or component of a bundle (TypeAndQuantityNode). The default is
            http://purl.org/goodrelations/v1#Sell.
        priceValidUntil:
          type: string
          format: date
          description: The date after which the price is no longer available.
        priceSpecification:
          $ref: 'pricespecification.yaml#/PriceSpecification'
          description: >-
            One or more detailed price specifications, indicating the unit price
            and delivery or payment charges.
        eligibleRegion:
          oneOf:
            - type: string
            - $ref: 'place.yaml#/Place'
            - $ref: 'geoshape.yaml#/GeoShape'
          description: >-
            The ISO 3166-1 (ISO 3166-1 alpha-2) or ISO 3166-2 code, the place,
            or the GeoShape for the geo-political region(s) for which the offer
            or delivery charge specification is valid.<br/><br/>


            See also <a class="localLink"
            href="http://schema.org/ineligibleRegion">ineligibleRegion</a>.
        mpn:
          type: string
          description: >-
            The Manufacturer Part Number (MPN) of the product, or the product to
            which the offer refers.
        validFrom:
          type: string
          format: date-time
          description: The date when the item becomes valid.
        availableAtOrFrom:
          $ref: 'place.yaml#/Place'
          description: >-
            The place(s) from which the offer can be obtained (e.g. store
            locations).
        seller:
          oneOf:
            - $ref: 'person.yaml#/Person'
            - $ref: 'organization.yaml#/Organization'
          description: >-
            An entity which offers (sells / leases / lends / loans) the services
            / goods.  A seller may also be a provider.
        acceptedPaymentMethod:
          oneOf:
            - $ref: 'loanorcredit.yaml#/LoanOrCredit'
            - $ref: 'paymentmethod.yaml#/PaymentMethod'
          description: The payment method(s) accepted by seller for this offer.
        offeredBy:
          oneOf:
            - $ref: 'organization.yaml#/Organization'
            - $ref: 'person.yaml#/Person'
          description: A pointer to the organization or person making the offer.
        price:
          oneOf:
            - type: number
            - type: string
          description: >
            The offer price of a product, or of a price component when attached
            to PriceSpecification and its subtypes.<br/><br/>


            Usage guidelines:<br/><br/>


            <ul>

            <li>Use the <a class="localLink"
            href="http://schema.org/priceCurrency">priceCurrency</a> property
            (with standard formats: <a
            href="http://en.wikipedia.org/wiki/ISO_4217">ISO 4217 currency
            format</a> e.g. "USD"; <a
            href="https://en.wikipedia.org/wiki/List_of_cryptocurrencies">Ticker
            symbol</a> for cryptocurrencies e.g. "BTC"; well known names for <a
            href="https://en.wikipedia.org/wiki/Local_exchange_trading_system">Local
            Exchange Tradings Systems</a> (LETS) and other currency types e.g.
            "Ithaca HOUR") instead of including <a
            href="http://en.wikipedia.org/wiki/Dollar_sign#Currencies_that_use_the_dollar_or_peso_sign">ambiguous
            symbols</a> such as '$' in the value.</li>

            <li>Use '.' (Unicode 'FULL STOP' (U+002E)) rather than ',' to
            indicate a decimal point. Avoid using these symbols as a readability
            separator.</li>

            <li>Note that both <a
            href="http://www.w3.org/TR/xhtml-rdfa-primer/#using-the-content-attribute">RDFa</a>
            and Microdata syntax allow the use of a "content=" attribute for
            publishing simple machine-readable values alongside more
            human-friendly formatting.</li>

            <li>Use values from 0123456789 (Unicode 'DIGIT ZERO' (U+0030) to
            'DIGIT NINE' (U+0039)) rather than superficially similiar Unicode
            symbols.</li>

            </ul>
        eligibleDuration:
          $ref: 'quantitativevalue.yaml#/QuantitativeValue'
          description: The duration for which the given offer is valid.
        availability:
          $ref: 'itemavailability.yaml#/ItemAvailability'
          description: >-
            The availability of this item&#x2014;for example In stock, Out of
            stock, Pre-order, etc.
        serialNumber:
          type: string
          description: >-
            The serial number or any alphanumeric identifier of a particular
            product. When attached to an offer, it is a shortcut for the serial
            number of the product included in the offer.
        eligibleQuantity:
          $ref: 'quantitativevalue.yaml#/QuantitativeValue'
          description: >-
            The interval and unit of measurement of ordering quantities for
            which the offer or price specification is valid. This allows e.g.
            specifying that a certain freight charge is valid only for a certain
            quantity.
        itemOffered:
          oneOf:
            - $ref: 'product.yaml#/Product'
            - $ref: 'service.yaml#/Service'
          description: The item being offered.
        deliveryLeadTime:
          $ref: 'quantitativevalue.yaml#/QuantitativeValue'
          description: >-
            The typical delay between the receipt of the order and the goods
            either leaving the warehouse or being prepared for pickup, in case
            the delivery method is on site pickup.
        availableDeliveryMethod:
          $ref: 'deliverymethod.yaml#/DeliveryMethod'
          description: The delivery method(s) available for this offer.
OfferCatalog:
  $ref: 'itemlist.yaml#/ItemList'
OfferItemCondition:
  $ref: 'enumeration.yaml#/Enumeration'
OfficeEquipmentStore:
  $ref: 'store.yaml#/Store'
OnDemandEvent:
  $ref: 'publicationevent.yaml#/PublicationEvent'
OpeningHoursSpecification:
  description: >-
    A structured value providing information about the opening hours of a place
    or a certain service inside a place.<br/><br/>


    The place is <strong>open</strong> if the <a class="localLink"
    href="http://schema.org/opens">opens</a> property is specified, and
    <strong>closed</strong> otherwise.<br/><br/>


    If the value for the <a class="localLink"
    href="http://schema.org/closes">closes</a> property is less than the value
    for the <a class="localLink" href="http://schema.org/opens">opens</a>
    property then the hour range is assumed to span over the next day.
  allOf:
    - $ref: 'structuredvalue.yaml#/StructuredValue'
    - type: object
      properties:
        validThrough:
          type: string
          format: date-time
          description: >-
            The date after when the item is not valid. For example the end of an
            offer, salary period, or a period of opening hours.
        closes:
          type: object
          description: >-
            The closing hour of the place or service on the given day(s) of the
            week.
        dayOfWeek:
          $ref: 'dayofweek.yaml#/DayOfWeek'
          description: The day of the week for which these opening hours are valid.
        opens:
          type: object
          description: >-
            The opening hour of the place or service on the given day(s) of the
            week.
        validFrom:
          type: string
          format: date-time
          description: The date when the item becomes valid.
Order:
  description: >-
    An order is a confirmation of a transaction (a receipt), which can contain
    multiple line items, each represented by an Offer that has been accepted by
    the customer.
  allOf:
    - $ref: 'intangible.yaml#/Intangible'
    - type: object
      properties:
        broker:
          oneOf:
            - $ref: 'person.yaml#/Person'
            - $ref: 'organization.yaml#/Organization'
          description: >-
            An entity that arranges for an exchange between a buyer and a
            seller.  In most cases a broker never acquires or releases ownership
            of a product or service involved in an exchange.  If it is not clear
            whether an entity is a broker, seller, or buyer, the latter two
            terms are preferred.
        paymentDueDate:
          type: string
          format: date-time
          description: The date that payment is due.
        discount:
          oneOf:
            - type: number
            - type: string
          description: Any discount applied (to an Order).
        orderStatus:
          $ref: 'orderstatus.yaml#/OrderStatus'
          description: The current status of the order.
        discountCurrency:
          type: string
          description: >-
            The currency of the discount.<br/><br/>


            Use standard formats: <a
            href="http://en.wikipedia.org/wiki/ISO_4217">ISO 4217 currency
            format</a> e.g. "USD"; <a
            href="https://en.wikipedia.org/wiki/List_of_cryptocurrencies">Ticker
            symbol</a> for cryptocurrencies e.g. "BTC"; well known names for <a
            href="https://en.wikipedia.org/wiki/Local_exchange_trading_system">Local
            Exchange Tradings Systems</a> (LETS) and other currency types e.g.
            "Ithaca HOUR".
        partOfInvoice:
          $ref: 'invoice.yaml#/Invoice'
          description: The order is being paid as part of the referenced Invoice.
        confirmationNumber:
          type: string
          description: A number that confirms the given order or payment has been received.
        paymentUrl:
          $ref: 'url.yaml#/URL'
          description: The URL for sending a payment.
        orderNumber:
          type: string
          description: The identifier of the transaction.
        customer:
          oneOf:
            - $ref: 'organization.yaml#/Organization'
            - $ref: 'person.yaml#/Person'
          description: Party placing the order or paying the invoice.
        orderDate:
          type: string
          format: date-time
          description: Date order was placed.
        isGift:
          type: boolean
          description: Was the offer accepted as a gift for someone other than the buyer.
        paymentMethodId:
          type: string
          description: >-
            An identifier for the method of payment used (e.g. the last 4 digits
            of the credit card).
        discountCode:
          type: string
          description: Code used to redeem a discount.
        paymentDue:
          type: string
          format: date-time
          description: The date that payment is due.
        orderDelivery:
          $ref: 'parceldelivery.yaml#/ParcelDelivery'
          description: The delivery of the parcel related to this order or order item.
        seller:
          oneOf:
            - $ref: 'person.yaml#/Person'
            - $ref: 'organization.yaml#/Organization'
          description: >-
            An entity which offers (sells / leases / lends / loans) the services
            / goods.  A seller may also be a provider.
        merchant:
          oneOf:
            - $ref: 'person.yaml#/Person'
            - $ref: 'organization.yaml#/Organization'
          description: '''merchant'' is an out-dated term for ''seller''.'
        paymentMethod:
          $ref: 'paymentmethod.yaml#/PaymentMethod'
          description: >-
            The name of the credit card or other method of payment for the
            order.
        orderedItem:
          oneOf:
            - $ref: 'product.yaml#/Product'
            - $ref: 'orderitem.yaml#/OrderItem'
          description: The item ordered.
        acceptedOffer:
          $ref: 'offer.yaml#/Offer'
          description: >-
            The offer(s) -- e.g., product, quantity and price combinations --
            included in the order.
        billingAddress:
          $ref: 'postaladdress.yaml#/PostalAddress'
          description: The billing address for the order.
OrderAction:
  description: An agent orders an object/product/service to be delivered/sent.
  allOf:
    - $ref: 'TradeAction.yaml#/TradeAction'
    - type: object
      properties:
        deliveryMethod:
          $ref: 'DeliveryMethod.yaml#/DeliveryMethod'
          description: A sub property of instrument. The method of delivery.
OrderItem:
  description: >-
    An order item is a line of an order. It includes the quantity and shipping
    details of a bought offer.
  allOf:
    - $ref: 'intangible.yaml#/Intangible'
    - type: object
      properties:
        orderedItem:
          oneOf:
            - $ref: 'orderitem.yaml#/OrderItem'
            - $ref: 'product.yaml#/Product'
          description: The item ordered.
        orderDelivery:
          $ref: 'parceldelivery.yaml#/ParcelDelivery'
          description: The delivery of the parcel related to this order or order item.
        orderItemNumber:
          type: string
          description: The identifier of the order item.
        orderQuantity:
          type: number
          description: >-
            The number of the item ordered. If the property is not set, assume
            the quantity is one.
        orderItemStatus:
          $ref: 'orderstatus.yaml#/OrderStatus'
          description: The current status of the order item.
OrderStatus:
  $ref: 'Enumeration.yaml#/Enumeration'
Organization:
  description: 'An organization such as a school, NGO, corporation, club, etc.'
  allOf:
    - $ref: 'thing.yaml#/Thing'
    - type: object
      properties:
        founder:
          $ref: 'person.yaml#/Person'
          description: A person who founded this organization.
        hasPOS:
          $ref: 'place.yaml#/Place'
          description: Points-of-Sales operated by the organization or person.
        actionableFeedbackPolicy:
          oneOf:
            - $ref: 'url.yaml#/URL'
            - $ref: 'creativework.yaml#/CreativeWork'
          description: >-
            For a <a class="localLink"
            href="http://schema.org/NewsMediaOrganization">NewsMediaOrganization</a>
            or other news-related <a class="localLink"
            href="http://schema.org/Organization">Organization</a>, a statement
            about public engagement activities (for news media, the newsroom’s),
            including involving the public - digitally or otherwise -- in
            coverage decisions, reporting and activities after publication.
        alumni:
          $ref: 'person.yaml#/Person'
          description: Alumni of an organization.
        faxNumber:
          type: string
          description: The fax number.
        isicV4:
          type: string
          description: >-
            The International Standard of Industrial Classification of All
            Economic Activities (ISIC), Revision 4 code for a particular
            organization, business person, or place.
        members:
          oneOf:
            - $ref: 'person.yaml#/Person'
            - $ref: 'organization.yaml#/Organization'
          description: A member of this organization.
        address:
          oneOf:
            - $ref: 'postaladdress.yaml#/PostalAddress'
            - type: string
          description: Physical address of the item.
        awards:
          type: string
          description: Awards won by or for this item.
        funder:
          oneOf:
            - $ref: 'person.yaml#/Person'
            - $ref: 'organization.yaml#/Organization'
          description: >-
            A person or organization that supports (sponsors) something through
            some kind of financial contribution.
        founders:
          $ref: 'person.yaml#/Person'
          description: A person who founded this organization.
        memberOf:
          oneOf:
            - $ref: 'organization.yaml#/Organization'
            - $ref: 'programmembership.yaml#/ProgramMembership'
          description: >-
            An Organization (or ProgramMembership) to which this Person or
            Organization belongs.
        owns:
          oneOf:
            - $ref: 'product.yaml#/Product'
            - $ref: 'ownershipinfo.yaml#/OwnershipInfo'
          description: Products owned by the organization or person.
        brand:
          oneOf:
            - $ref: 'organization.yaml#/Organization'
            - $ref: 'brand.yaml#/Brand'
          description: >-
            The brand(s) associated with a product or service, or the brand(s)
            maintained by an organization or business person.
        areaServed:
          oneOf:
            - type: string
            - $ref: 'administrativearea.yaml#/AdministrativeArea'
            - $ref: 'place.yaml#/Place'
            - $ref: 'geoshape.yaml#/GeoShape'
          description: The geographic area where a service or offered item is provided.
        seeks:
          $ref: 'demand.yaml#/Demand'
          description: >-
            A pointer to products or services sought by the organization or
            person (demand).
        reviews:
          $ref: 'review.yaml#/Review'
          description: Review of the item.
        location:
          oneOf:
            - $ref: 'postaladdress.yaml#/PostalAddress'
            - type: string
            - $ref: 'place.yaml#/Place'
          description: >-
            The location of for example where the event is happening, an
            organization is located, or where an action takes place.
        ethicsPolicy:
          oneOf:
            - $ref: 'creativework.yaml#/CreativeWork'
            - $ref: 'url.yaml#/URL'
          description: >-
            Statement about ethics policy, e.g. of a <a class="localLink"
            href="http://schema.org/NewsMediaOrganization">NewsMediaOrganization</a>
            regarding journalistic and publishing practices, or of a <a
            class="localLink"
            href="http://schema.org/Restaurant">Restaurant</a>, a page
            describing food source policies. In the case of a <a
            class="localLink"
            href="http://schema.org/NewsMediaOrganization">NewsMediaOrganization</a>,
            an ethicsPolicy is typically a statement describing the personal,
            organizational, and corporate standards of behavior expected by the
            organization.
        review:
          $ref: 'review.yaml#/Review'
          description: A review of the item.
        hasOfferCatalog:
          $ref: 'offercatalog.yaml#/OfferCatalog'
          description: >-
            Indicates an OfferCatalog listing for this Organization, Person, or
            Service.
        diversityPolicy:
          oneOf:
            - $ref: 'url.yaml#/URL'
            - $ref: 'creativework.yaml#/CreativeWork'
          description: >-
            Statement on diversity policy by an <a class="localLink"
            href="http://schema.org/Organization">Organization</a> e.g. a <a
            class="localLink"
            href="http://schema.org/NewsMediaOrganization">NewsMediaOrganization</a>.
            For a <a class="localLink"
            href="http://schema.org/NewsMediaOrganization">NewsMediaOrganization</a>,
            a statement describing the newsroom’s diversity policy on both
            staffing and sources, typically providing staffing data.
        diversityStaffingReport:
          oneOf:
            - $ref: 'url.yaml#/URL'
            - $ref: 'article.yaml#/Article'
          description: >-
            For an <a class="localLink"
            href="http://schema.org/Organization">Organization</a> (often but
            not necessarily a <a class="localLink"
            href="http://schema.org/NewsMediaOrganization">NewsMediaOrganization</a>),
            a report on staffing diversity issues. In a news context this might
            be for example ASNE or RTDNA (US) reports, or self-reported.
        unnamedSourcesPolicy:
          oneOf:
            - $ref: 'creativework.yaml#/CreativeWork'
            - $ref: 'url.yaml#/URL'
          description: >-
            For an <a class="localLink"
            href="http://schema.org/Organization">Organization</a> (typically a
            <a class="localLink"
            href="http://schema.org/NewsMediaOrganization">NewsMediaOrganization</a>),
            a statement about policy on use of unnamed sources and the decision
            process required.
        makesOffer:
          $ref: 'offer.yaml#/Offer'
          description: >-
            A pointer to products or services offered by the organization or
            person.
        legalName:
          type: string
          description: >-
            The official name of the organization, e.g. the registered company
            name.
        duns:
          type: string
          description: >-
            The Dun &amp; Bradstreet DUNS number for identifying an organization
            or business person.
        ownershipFundingInfo:
          oneOf:
            - $ref: 'aboutpage.yaml#/AboutPage'
            - $ref: 'creativework.yaml#/CreativeWork'
            - $ref: 'url.yaml#/URL'
            - type: string
          description: >-
            For an <a class="localLink"
            href="http://schema.org/Organization">Organization</a> (often but
            not necessarily a <a class="localLink"
            href="http://schema.org/NewsMediaOrganization">NewsMediaOrganization</a>),
            a description of organizational ownership structure; funding and
            grants. In a news/media setting, this is with particular reference
            to editorial independence.   Note that the <a class="localLink"
            href="http://schema.org/funder">funder</a> is also available and can
            be used to make basic funder information machine-readable.
        subOrganization:
          $ref: 'organization.yaml#/Organization'
          description: >-
            A relationship between two organizations where the first includes
            the second, e.g., as a subsidiary. See also: the more specific
            'department' property.
        knowsAbout:
          oneOf:
            - type: string
            - $ref: 'url.yaml#/URL'
            - $ref: 'thing.yaml#/Thing'
          description: >-
            Of a <a class="localLink"
            href="http://schema.org/Person">Person</a>, and less typically of an
            <a class="localLink"
            href="http://schema.org/Organization">Organization</a>, to indicate
            a topic that is known about - suggesting possible expertise but not
            implying it. We do not distinguish skill levels here, or yet relate
            this to educational content, events, objectives or <a
            class="localLink" href="http://schema.org/JobPosting">JobPosting</a>
            descriptions.
        telephone:
          type: string
          description: The telephone number.
        knowsLanguage:
          oneOf:
            - type: string
            - $ref: 'language.yaml#/Language'
          description: >-
            Of a <a class="localLink"
            href="http://schema.org/Person">Person</a>, and less typically of an
            <a class="localLink"
            href="http://schema.org/Organization">Organization</a>, to indicate
            a known language. We do not distinguish skill levels or
            reading/writing/speaking/signing here. Use language codes from the
            <a href="http://tools.ietf.org/html/bcp47">IETF BCP 47 standard</a>.
        naics:
          type: string
          description: >-
            The North American Industry Classification System (NAICS) code for a
            particular organization or business person.
        employees:
          $ref: 'person.yaml#/Person'
          description: People working for this organization.
        dissolutionDate:
          type: string
          format: date
          description: The date that this organization was dissolved.
        parentOrganization:
          $ref: 'organization.yaml#/Organization'
          description: >-
            The larger organization that this organization is a <a
            class="localLink"
            href="http://schema.org/subOrganization">subOrganization</a> of, if
            any.
        award:
          type: string
          description: An award won by or for this item.
        foundingDate:
          type: string
          format: date
          description: The date that this organization was founded.
        contactPoints:
          $ref: 'contactpoint.yaml#/ContactPoint'
          description: A contact point for a person or organization.
        taxID:
          type: string
          description: >-
            The Tax / Fiscal ID of the organization or person, e.g. the TIN in
            the US or the CIF/NIF in Spain.
        serviceArea:
          oneOf:
            - $ref: 'geoshape.yaml#/GeoShape'
            - $ref: 'place.yaml#/Place'
            - $ref: 'administrativearea.yaml#/AdministrativeArea'
          description: The geographic area where the service is provided.
        contactPoint:
          $ref: 'contactpoint.yaml#/ContactPoint'
          description: A contact point for a person or organization.
        events:
          $ref: 'event.yaml#/Event'
          description: Upcoming or past events associated with this place or organization.
        foundingLocation:
          $ref: 'place.yaml#/Place'
          description: The place where the Organization was founded.
        numberOfEmployees:
          $ref: 'quantitativevalue.yaml#/QuantitativeValue'
          description: The number of employees in an organization e.g. business.
        email:
          type: string
          description: Email address.
        employee:
          $ref: 'person.yaml#/Person'
          description: Someone working for this organization.
        sponsor:
          oneOf:
            - $ref: 'person.yaml#/Person'
            - $ref: 'organization.yaml#/Organization'
          description: >-
            A person or organization that supports a thing through a pledge,
            promise, or financial contribution. e.g. a sponsor of a Medical
            Study or a corporate sponsor of an event.
        event:
          $ref: 'event.yaml#/Event'
          description: >-
            Upcoming or past event associated with this place, organization, or
            action.
        member:
          oneOf:
            - $ref: 'organization.yaml#/Organization'
            - $ref: 'person.yaml#/Person'
          description: >-
            A member of an Organization or a ProgramMembership. Organizations
            can be members of organizations; ProgramMembership is typically for
            individuals.
        aggregateRating:
          $ref: 'aggregaterating.yaml#/AggregateRating'
          description: >-
            The overall rating, based on a collection of reviews or ratings, of
            the item.
        leiCode:
          type: string
          description: >-
            An organization identifier that uniquely identifies a legal entity
            as defined in ISO 17442.
        globalLocationNumber:
          type: string
          description: >-
            The <a href="http://www.gs1.org/gln">Global Location Number</a>
            (GLN, sometimes also referred to as International Location Number or
            ILN) of the respective organization, person, or place. The GLN is a
            13-digit number used to identify parties and physical locations.
        correctionsPolicy:
          oneOf:
            - $ref: 'creativework.yaml#/CreativeWork'
            - $ref: 'url.yaml#/URL'
          description: >-
            For an <a class="localLink"
            href="http://schema.org/Organization">Organization</a> (e.g. <a
            class="localLink"
            href="http://schema.org/NewsMediaOrganization">NewsMediaOrganization</a>),
            a statement describing (in news media, the newsroom’s) disclosure
            and correction policy for errors.
        vatID:
          type: string
          description: The Value-added Tax ID of the organization or person.
        department:
          $ref: 'organization.yaml#/Organization'
          description: >-
            A relationship between an organization and a department of that
            organization, also described as an organization (allowing different
            urls, logos, opening hours). For example: a store with a pharmacy,
            or a bakery with a cafe.
        logo:
          oneOf:
            - $ref: 'imageobject.yaml#/ImageObject'
            - $ref: 'url.yaml#/URL'
          description: An associated logo.
        publishingPrinciples:
          oneOf:
            - $ref: 'creativework.yaml#/CreativeWork'
            - $ref: 'url.yaml#/URL'
          description: >-
            The publishingPrinciples property indicates (typically via <a
            class="localLink" href="http://schema.org/URL">URL</a>) a document
            describing the editorial principles of an <a class="localLink"
            href="http://schema.org/Organization">Organization</a> (or
            individual e.g. a <a class="localLink"
            href="http://schema.org/Person">Person</a> writing a blog) that
            relate to their activities as a publisher, e.g. ethics or diversity
            policies. When applied to a <a class="localLink"
            href="http://schema.org/CreativeWork">CreativeWork</a> (e.g. <a
            class="localLink"
            href="http://schema.org/NewsArticle">NewsArticle</a>) the principles
            are those of the party primarily responsible for the creation of the
            <a class="localLink"
            href="http://schema.org/CreativeWork">CreativeWork</a>.<br/><br/>


            While such policies are most typically expressed in natural
            language, sometimes related information (e.g. indicating a <a
            class="localLink" href="http://schema.org/funder">funder</a>) can be
            expressed using schema.org terminology.
OrganizationRole:
  description: A subclass of Role used to describe roles within organizations.
  allOf:
    - $ref: 'role.yaml#/Role'
    - type: object
      properties:
        numberedPosition:
          type: number
          description: >-
            A number associated with a role in an organization, for example, the
            number on an athlete's jersey.
OrganizeAction:
  $ref: 'action.yaml#/Action'
OutletStore:
  $ref: 'store.yaml#/Store'
OwnershipInfo:
  description: >-
    A structured value providing information about when a certain organization
    or person owned a certain product.
  allOf:
    - $ref: 'structuredvalue.yaml#/StructuredValue'
    - type: object
      properties:
        typeOfGood:
          oneOf:
            - $ref: 'service.yaml#/Service'
            - $ref: 'product.yaml#/Product'
          description: The product that this structured value is referring to.
        ownedFrom:
          type: string
          format: date-time
          description: The date and time of obtaining the product.
        acquiredFrom:
          oneOf:
            - $ref: 'person.yaml#/Person'
            - $ref: 'organization.yaml#/Organization'
          description: The organization or person from which the product was acquired.
        ownedThrough:
          type: string
          format: date-time
          description: The date and time of giving up ownership on the product.
PaintAction:
  $ref: 'createaction.yaml#/CreateAction'
Painting:
  $ref: 'creativework.yaml#/CreativeWork'
ParcelDelivery:
  description: >-
    The delivery of a parcel either via the postal service or a commercial
    service.
  allOf:
    - $ref: 'Intangible.yaml#/Intangible'
    - type: object
      properties:
        hasDeliveryMethod:
          $ref: 'DeliveryMethod.yaml#/DeliveryMethod'
          description: Method used for delivery or shipping.
        deliveryAddress:
          $ref: 'PostalAddress.yaml#/PostalAddress'
          description: Destination address.
        trackingUrl:
          $ref: 'URL.yaml#/URL'
          description: Tracking url for the parcel delivery.
        provider:
          oneOf:
            - $ref: 'Person.yaml#/Person'
            - $ref: 'Organization.yaml#/Organization'
          description: >-
            The service provider, service operator, or service performer; the
            goods producer. Another party (a seller) may offer those services or
            goods on behalf of the provider. A provider may also serve as the
            seller.
        trackingNumber:
          type: string
          description: Shipper tracking number.
        partOfOrder:
          $ref: 'Order.yaml#/Order'
          description: The overall order the items in this delivery were included in.
        expectedArrivalFrom:
          type: string
          format: date-time
          description: The earliest date the package may arrive.
        itemShipped:
          $ref: 'Product.yaml#/Product'
          description: Item(s) being shipped.
        originAddress:
          $ref: 'PostalAddress.yaml#/PostalAddress'
          description: Shipper's address.
        expectedArrivalUntil:
          type: string
          format: date-time
          description: The latest date the package may arrive.
        carrier:
          $ref: 'Organization.yaml#/Organization'
          description: >-
            'carrier' is an out-dated term indicating the 'provider' for parcel
            delivery and flights.
        deliveryStatus:
          $ref: 'DeliveryEvent.yaml#/DeliveryEvent'
          description: >-
            New entry added as the package passes through each leg of its
            journey (from shipment to final delivery).
ParcelService:
  $ref: 'deliverymethod.yaml#/DeliveryMethod'
ParentAudience:
  description: >-
    A set of characteristics describing parents, who can be interested in
    viewing some content.
  allOf:
    - $ref: 'peopleaudience.yaml#/PeopleAudience'
    - type: object
      properties:
        childMinAge:
          type: number
          description: Minimal age of the child.
        childMaxAge:
          type: number
          description: Maximal age of the child.
Park:
  $ref: 'civicstructure.yaml#/CivicStructure'
ParkingFacility:
  $ref: 'civicstructure.yaml#/CivicStructure'
PawnShop:
  $ref: 'store.yaml#/Store'
PayAction:
  description: An agent pays a price to a participant.
  allOf:
    - $ref: 'tradeaction.yaml#/TradeAction'
    - type: object
      properties:
        recipient:
          oneOf:
            - $ref: 'person.yaml#/Person'
            - $ref: 'audience.yaml#/Audience'
            - $ref: 'contactpoint.yaml#/ContactPoint'
            - $ref: 'organization.yaml#/Organization'
          description: >-
            A sub property of participant. The participant who is at the
            receiving end of the action.
        purpose:
          oneOf:
            - type: object
              description: >-
                Type: MedicalDevicePurpose This type is not published yet in
                schema.org.
            - $ref: 'thing.yaml#/Thing'
          description: A goal towards an action is taken. Can be concrete or abstract.
PaymentCard:
  properties:
    contactlessPayment:
      type: boolean
      description: >-
        A secure method for consumers to purchase products or services via
        debit, credit or smartcards by using RFID or NFC technology.
    floorLimit:
      $ref: 'MonetaryAmount.yaml#/MonetaryAmount'
      description: >-
        A floor limit is the amount of money above which credit card
        transactions must be authorized.
    cashBack:
      oneOf:
        - type: boolean
        - type: number
      description: >-
        A cardholder benefit that pays the cardholder a small percentage of
        their net expenditures.
PaymentChargeSpecification:
  description: The costs of settling the payment using a particular payment method.
  allOf:
    - $ref: 'pricespecification.yaml#/PriceSpecification'
    - type: object
      properties:
        appliesToDeliveryMethod:
          $ref: 'deliverymethod.yaml#/DeliveryMethod'
          description: >-
            The delivery method(s) to which the delivery charge or payment
            charge specification applies.
        appliesToPaymentMethod:
          $ref: 'paymentmethod.yaml#/PaymentMethod'
          description: >-
            The payment method(s) to which the payment charge specification
            applies.
PaymentMethod:
  $ref: 'enumeration.yaml#/Enumeration'
PaymentService:
  $ref: 'financialproduct.yaml#/FinancialProduct'
PaymentStatusType:
  $ref: 'enumeration.yaml#/Enumeration'
PeopleAudience:
  description: >-
    A set of characteristics belonging to people, e.g. who compose an item's
    target audience.
  allOf:
    - $ref: 'audience.yaml#/Audience'
    - type: object
      properties:
        suggestedMaxAge:
          type: number
          description: Maximal age recommended for viewing content.
        requiredMinAge:
          type: integer
          description: Audiences defined by a person's minimum age.
        healthCondition:
          type: object
          description: >-
            Specifying the health condition(s) of a patient, medical study, or
            other target audience.
        requiredMaxAge:
          type: integer
          description: Audiences defined by a person's maximum age.
        requiredGender:
          type: string
          description: Audiences defined by a person's gender.
        suggestedMinAge:
          type: number
          description: Minimal age recommended for viewing content.
        suggestedGender:
          type: string
          description: The gender of the person or audience.
PerformAction:
  description: The act of participating in performance arts.
  allOf:
    - $ref: 'playaction.yaml#/PlayAction'
    - type: object
      properties:
        entertainmentBusiness:
          $ref: 'entertainmentbusiness.yaml#/EntertainmentBusiness'
          description: >-
            A sub property of location. The entertainment business where the
            action occurred.
PerformanceRole:
  description: >-
    A PerformanceRole is a Role that some entity places with regard to a
    theatrical performance, e.g. in a Movie, TVSeries etc.
  allOf:
    - $ref: 'role.yaml#/Role'
    - type: object
      properties:
        characterName:
          type: string
          description: >-
            The name of a character played in some acting or performing role,
            i.e. in a PerformanceRole.
PerformingArtsTheater:
  $ref: 'civicstructure.yaml#/CivicStructure'
PerformingGroup:
  $ref: 'organization.yaml#/Organization'
Periodical:
  $ref: 'creativeworkseries.yaml#/CreativeWorkSeries'
Permit:
  description: 'A permit issued by an organization, e.g. a parking pass.'
  allOf:
    - $ref: 'intangible.yaml#/Intangible'
    - type: object
      properties:
        issuedBy:
          $ref: 'organization.yaml#/Organization'
          description: The organization issuing the ticket or permit.
        validFor:
          $ref: 'duration.yaml#/Duration'
          description: The time validity of the permit.
        issuedThrough:
          $ref: 'service.yaml#/Service'
          description: The service through with the permit was granted.
        permitAudience:
          $ref: 'audience.yaml#/Audience'
          description: The target audience for this permit.
        validIn:
          $ref: 'administrativearea.yaml#/AdministrativeArea'
          description: The geographic area where the permit is valid.
        validFrom:
          type: string
          format: date-time
          description: The date when the item becomes valid.
        validUntil:
          type: string
          format: date
          description: The date when the item is no longer valid.
Person:
  description: 'A person (alive, dead, undead, or fictional).'
  allOf:
    - $ref: 'Thing.yaml#/Thing'
    - type: object
      properties:
        parents:
          $ref: 'Person.yaml#/Person'
          description: A parents of the person.
        sibling:
          $ref: 'Person.yaml#/Person'
          description: A sibling of the person.
        siblings:
          $ref: 'Person.yaml#/Person'
          description: A sibling of the person.
        birthPlace:
          $ref: 'Place.yaml#/Place'
          description: The place where the person was born.
        spouse:
          $ref: 'Person.yaml#/Person'
          description: The person's spouse.
        givenName:
          type: string
          description: >-
            Given name. In the U.S., the first name of a Person. This can be
            used along with familyName instead of the name property.
        colleagues:
          $ref: 'Person.yaml#/Person'
          description: A colleague of the person.
        faxNumber:
          type: string
          description: The fax number.
        colleague:
          oneOf:
            - $ref: 'Person.yaml#/Person'
            - $ref: 'URL.yaml#/URL'
          description: A colleague of the person.
        parent:
          $ref: 'Person.yaml#/Person'
          description: A parent of this person.
        address:
          oneOf:
            - type: string
            - $ref: 'PostalAddress.yaml#/PostalAddress'
          description: Physical address of the item.
        relatedTo:
          $ref: 'Person.yaml#/Person'
          description: The most generic familial relation.
        gender:
          oneOf:
            - $ref: 'GenderType.yaml#/GenderType'
            - type: string
          description: >-
            Gender of the person. While http://schema.org/Male and
            http://schema.org/Female may be used, text strings are also
            acceptable for people who do not identify as a binary gender.
        awards:
          type: string
          description: Awards won by or for this item.
        height:
          oneOf:
            - $ref: 'Distance.yaml#/Distance'
            - $ref: 'QuantitativeValue.yaml#/QuantitativeValue'
          description: The height of the item.
        honorificSuffix:
          type: string
          description: >-
            An honorific suffix preceding a Person's name such as M.D.
            /PhD/MSCSW.
        birthDate:
          type: string
          format: date
          description: Date of birth.
        memberOf:
          oneOf:
            - $ref: 'ProgramMembership.yaml#/ProgramMembership'
            - $ref: 'Organization.yaml#/Organization'
          description: >-
            An Organization (or ProgramMembership) to which this Person or
            Organization belongs.
        deathDate:
          type: string
          format: date
          description: Date of death.
        owns:
          oneOf:
            - $ref: 'Product.yaml#/Product'
            - $ref: 'OwnershipInfo.yaml#/OwnershipInfo'
          description: Products owned by the organization or person.
        brand:
          oneOf:
            - $ref: 'Brand.yaml#/Brand'
            - $ref: 'Organization.yaml#/Organization'
          description: >-
            The brand(s) associated with a product or service, or the brand(s)
            maintained by an organization or business person.
        workLocation:
          oneOf:
            - $ref: 'ContactPoint.yaml#/ContactPoint'
            - $ref: 'Place.yaml#/Place'
          description: A contact location for a person's place of work.
        children:
          $ref: 'Person.yaml#/Person'
          description: A child of the person.
        netWorth:
          oneOf:
            - $ref: 'PriceSpecification.yaml#/PriceSpecification'
            - $ref: 'MonetaryAmount.yaml#/MonetaryAmount'
          description: >-
            The total financial value of the person as calculated by subtracting
            assets from liabilities.
        hasOfferCatalog:
          $ref: 'OfferCatalog.yaml#/OfferCatalog'
          description: >-
            Indicates an OfferCatalog listing for this Organization, Person, or
            Service.
        follows:
          $ref: 'Person.yaml#/Person'
          description: The most generic uni-directional social relation.
        familyName:
          type: string
          description: >-
            Family name. In the U.S., the last name of an Person. This can be
            used along with givenName instead of the name property.
        makesOffer:
          $ref: 'Offer.yaml#/Offer'
          description: >-
            A pointer to products or services offered by the organization or
            person.
        honorificPrefix:
          type: string
          description: An honorific prefix preceding a Person's name such as Dr/Mrs/Mr.
        duns:
          type: string
          description: >-
            The Dun &amp; Bradstreet DUNS number for identifying an organization
            or business person.
        isicV4:
          type: string
          description: >-
            The International Standard of Industrial Classification of All
            Economic Activities (ISIC), Revision 4 code for a particular
            organization, business person, or place.
        knowsAbout:
          oneOf:
            - $ref: 'Thing.yaml#/Thing'
            - type: string
            - $ref: 'URL.yaml#/URL'
          description: >-
            Of a <a class="localLink"
            href="http://schema.org/Person">Person</a>, and less typically of an
            <a class="localLink"
            href="http://schema.org/Organization">Organization</a>, to indicate
            a topic that is known about - suggesting possible expertise but not
            implying it. We do not distinguish skill levels here, or yet relate
            this to educational content, events, objectives or <a
            class="localLink" href="http://schema.org/JobPosting">JobPosting</a>
            descriptions.
        knows:
          $ref: 'Person.yaml#/Person'
          description: The most generic bi-directional social/work relation.
        seeks:
          $ref: 'Demand.yaml#/Demand'
          description: >-
            A pointer to products or services sought by the organization or
            person (demand).
        affiliation:
          $ref: 'Organization.yaml#/Organization'
          description: >-
            An organization that this person is affiliated with. For example, a
            school/university, a club, or a team.
        telephone:
          type: string
          description: The telephone number.
        nationality:
          $ref: 'Country.yaml#/Country'
          description: Nationality of the person.
        knowsLanguage:
          oneOf:
            - type: string
            - $ref: 'Language.yaml#/Language'
          description: >-
            Of a <a class="localLink"
            href="http://schema.org/Person">Person</a>, and less typically of an
            <a class="localLink"
            href="http://schema.org/Organization">Organization</a>, to indicate
            a known language. We do not distinguish skill levels or
            reading/writing/speaking/signing here. Use language codes from the
            <a href="http://tools.ietf.org/html/bcp47">IETF BCP 47 standard</a>.
        naics:
          type: string
          description: >-
            The North American Industry Classification System (NAICS) code for a
            particular organization or business person.
        deathPlace:
          $ref: 'Place.yaml#/Place'
          description: The place where the person died.
        award:
          type: string
          description: An award won by or for this item.
        contactPoints:
          $ref: 'ContactPoint.yaml#/ContactPoint'
          description: A contact point for a person or organization.
        alumniOf:
          oneOf:
            - $ref: 'EducationalOrganization.yaml#/EducationalOrganization'
            - $ref: 'Organization.yaml#/Organization'
          description: An organization that the person is an alumni of.
        taxID:
          type: string
          description: >-
            The Tax / Fiscal ID of the organization or person, e.g. the TIN in
            the US or the CIF/NIF in Spain.
        homeLocation:
          oneOf:
            - $ref: 'Place.yaml#/Place'
            - $ref: 'ContactPoint.yaml#/ContactPoint'
          description: A contact location for a person's residence.
        contactPoint:
          $ref: 'ContactPoint.yaml#/ContactPoint'
          description: A contact point for a person or organization.
        funder:
          oneOf:
            - $ref: 'Person.yaml#/Person'
            - $ref: 'Organization.yaml#/Organization'
          description: >-
            A person or organization that supports (sponsors) something through
            some kind of financial contribution.
        jobTitle:
          type: string
          description: 'The job title of the person (for example, Financial Manager).'
        performerIn:
          $ref: 'Event.yaml#/Event'
          description: Event that this person is a performer or participant in.
        hasOccupation:
          type: object
          description: >-
            The Person's occupation. For past professions, use Role for
            expressing dates.
        email:
          type: string
          description: Email address.
        sponsor:
          oneOf:
            - $ref: 'Organization.yaml#/Organization'
            - $ref: 'Person.yaml#/Person'
          description: >-
            A person or organization that supports a thing through a pledge,
            promise, or financial contribution. e.g. a sponsor of a Medical
            Study or a corporate sponsor of an event.
        hasPOS:
          $ref: 'Place.yaml#/Place'
          description: Points-of-Sales operated by the organization or person.
        globalLocationNumber:
          type: string
          description: >-
            The <a href="http://www.gs1.org/gln">Global Location Number</a>
            (GLN, sometimes also referred to as International Location Number or
            ILN) of the respective organization, person, or place. The GLN is a
            13-digit number used to identify parties and physical locations.
        additionalName:
          type: string
          description: 'An additional name for a Person, can be used for a middle name.'
        vatID:
          type: string
          description: The Value-added Tax ID of the organization or person.
        weight:
          $ref: 'QuantitativeValue.yaml#/QuantitativeValue'
          description: The weight of the product or person.
        worksFor:
          $ref: 'Organization.yaml#/Organization'
          description: Organizations that the person works for.
        publishingPrinciples:
          oneOf:
            - $ref: 'URL.yaml#/URL'
            - $ref: 'CreativeWork.yaml#/CreativeWork'
          description: >-
            The publishingPrinciples property indicates (typically via <a
            class="localLink" href="http://schema.org/URL">URL</a>) a document
            describing the editorial principles of an <a class="localLink"
            href="http://schema.org/Organization">Organization</a> (or
            individual e.g. a <a class="localLink"
            href="http://schema.org/Person">Person</a> writing a blog) that
            relate to their activities as a publisher, e.g. ethics or diversity
            policies. When applied to a <a class="localLink"
            href="http://schema.org/CreativeWork">CreativeWork</a> (e.g. <a
            class="localLink"
            href="http://schema.org/NewsArticle">NewsArticle</a>) the principles
            are those of the party primarily responsible for the creation of the
            <a class="localLink"
            href="http://schema.org/CreativeWork">CreativeWork</a>.<br/><br/>


            While such policies are most typically expressed in natural
            language, sometimes related information (e.g. indicating a <a
            class="localLink" href="http://schema.org/funder">funder</a>) can be
            expressed using schema.org terminology.
PetStore:
  $ref: 'store.yaml#/Store'
Pharmacy:
  $ref: 'medicalorganization.yaml#/MedicalOrganization'
Photograph:
  $ref: 'creativework.yaml#/CreativeWork'
PhotographAction:
  $ref: 'createaction.yaml#/CreateAction'
Physician:
  description: A doctor's office.
  allOf:
    - $ref: 'MedicalOrganization.yaml#/MedicalOrganization'
    - type: object
      properties:
        hospitalAffiliation:
          $ref: 'Hospital.yaml#/Hospital'
          description: A hospital with which the physician or office is affiliated.
        medicalSpecialty:
          type: object
          description: A medical specialty of the provider.
        availableService:
          oneOf:
            - type: object
              description: >-
                Type: MedicalTherapy This type is not published yet in
                schema.org.
            - type: object
              description: >-
                Type: MedicalProcedure This type is not published yet in
                schema.org.
            - type: object
              description: 'Type: MedicalTest This type is not published yet in schema.org.'
          description: A medical service available from this provider.
Place:
  description: 'Entities that have a somewhat fixed, physical extension.'
  allOf:
    - $ref: 'thing.yaml#/Thing'
    - type: object
      properties:
        geospatiallyEquals:
          oneOf:
            - type: object
              description: >-
                Type: GeospatialGeometry This type is not published yet in
                schema.org.
            - $ref: 'place.yaml#/Place'
          description: >-
            Represents spatial relations in which two geometries (or the places
            they represent) are topologically equal, as defined in <a
            href="https://en.wikipedia.org/wiki/DE-9IM">DE-9IM</a>. "Two
            geometries are topologically equal if their interiors intersect and
            no part of the interior or boundary of one geometry intersects the
            exterior of the other" (a symmetric relationship)
        review:
          $ref: 'review.yaml#/Review'
          description: A review of the item.
        containsPlace:
          $ref: 'place.yaml#/Place'
          description: >-
            The basic containment relation between a place and another that it
            contains.
        geospatiallyContains:
          oneOf:
            - type: object
              description: >-
                Type: GeospatialGeometry This type is not published yet in
                schema.org.
            - $ref: 'place.yaml#/Place'
          description: >-
            Represents a relationship between two geometries (or the places they
            represent), relating a containing geometry to a contained geometry.
            "a contains b iff no points of b lie in the exterior of a, and at
            least one point of the interior of b lies in the interior of a". As
            defined in <a
            href="https://en.wikipedia.org/wiki/DE-9IM">DE-9IM</a>.
        maximumAttendeeCapacity:
          type: integer
          description: The total number of individuals that may attend an event or venue.
        faxNumber:
          type: string
          description: The fax number.
        address:
          oneOf:
            - $ref: 'postaladdress.yaml#/PostalAddress'
            - type: string
          description: Physical address of the item.
        isAccessibleForFree:
          type: boolean
          description: >-
            A flag to signal that the item, event, or place is accessible for
            free.
        maps:
          $ref: 'url.yaml#/URL'
          description: A URL to a map of the place.
        geospatiallyCovers:
          oneOf:
            - type: object
              description: >-
                Type: GeospatialGeometry This type is not published yet in
                schema.org.
            - $ref: 'place.yaml#/Place'
          description: >-
            Represents a relationship between two geometries (or the places they
            represent), relating a covering geometry to a covered geometry.
            "Every point of b is a point of (the interior or boundary of) a". As
            defined in <a
            href="https://en.wikipedia.org/wiki/DE-9IM">DE-9IM</a>.
        photo:
          oneOf:
            - $ref: 'photograph.yaml#/Photograph'
            - $ref: 'imageobject.yaml#/ImageObject'
          description: A photograph of this place.
        branchCode:
          type: string
          description: >-
            A short textual code (also called "store code") that uniquely
            identifies a place of business. The code is typically assigned by
            the parentOrganization and used in structured URLs.<br/><br/>


            For example, in the URL
            http://www.starbucks.co.uk/store-locator/etc/detail/3047 the code
            "3047" is a branchCode for a particular branch.
        reviews:
          $ref: 'review.yaml#/Review'
          description: Review of the item.
        geospatiallyTouches:
          oneOf:
            - type: object
              description: >-
                Type: GeospatialGeometry This type is not published yet in
                schema.org.
            - $ref: 'place.yaml#/Place'
          description: >-
            Represents spatial relations in which two geometries (or the places
            they represent) touch: they have at least one boundary point in
            common, but no interior points." (a symmetric relationship, as
            defined in <a href="https://en.wikipedia.org/wiki/DE-9IM">DE-9IM</a>
            )
        geospatiallyCrosses:
          oneOf:
            - type: object
              description: >-
                Type: GeospatialGeometry This type is not published yet in
                schema.org.
            - $ref: 'place.yaml#/Place'
          description: >-
            Represents a relationship between two geometries (or the places they
            represent), relating a geometry to another that crosses it: "a
            crosses b: they have some but not all interior points in common, and
            the dimension of the intersection is less than that of at least one
            of them". As defined in <a
            href="https://en.wikipedia.org/wiki/DE-9IM">DE-9IM</a>.
        geospatiallyDisjoint:
          oneOf:
            - type: object
              description: >-
                Type: GeospatialGeometry This type is not published yet in
                schema.org.
            - $ref: 'place.yaml#/Place'
          description: >-
            Represents spatial relations in which two geometries (or the places
            they represent) are topologically disjoint: they have no point in
            common. They form a set of disconnected geometries." (a symmetric
            relationship, as defined in <a
            href="https://en.wikipedia.org/wiki/DE-9IM">DE-9IM</a>)
        geo:
          oneOf:
            - $ref: 'geocoordinates.yaml#/GeoCoordinates'
            - $ref: 'geoshape.yaml#/GeoShape'
          description: The geo coordinates of the place.
        openingHoursSpecification:
          $ref: 'openinghoursspecification.yaml#/OpeningHoursSpecification'
          description: The opening hours of a certain place.
        geospatiallyIntersects:
          oneOf:
            - type: object
              description: >-
                Type: GeospatialGeometry This type is not published yet in
                schema.org.
            - $ref: 'place.yaml#/Place'
          description: >-
            Represents spatial relations in which two geometries (or the places
            they represent) have at least one point in common. As defined in <a
            href="https://en.wikipedia.org/wiki/DE-9IM">DE-9IM</a>.
        isicV4:
          type: string
          description: >-
            The International Standard of Industrial Classification of All
            Economic Activities (ISIC), Revision 4 code for a particular
            organization, business person, or place.
        geospatiallyWithin:
          oneOf:
            - type: object
              description: >-
                Type: GeospatialGeometry This type is not published yet in
                schema.org.
            - $ref: 'place.yaml#/Place'
          description: >-
            Represents a relationship between two geometries (or the places they
            represent), relating a geometry to one that contains it, i.e. it is
            inside (i.e. within) its interior. As defined in <a
            href="https://en.wikipedia.org/wiki/DE-9IM">DE-9IM</a>.
        hasMap:
          oneOf:
            - $ref: 'map.yaml#/Map'
            - $ref: 'url.yaml#/URL'
          description: A URL to a map of the place.
        geospatiallyCoveredBy:
          oneOf:
            - $ref: 'place.yaml#/Place'
            - type: object
              description: >-
                Type: GeospatialGeometry This type is not published yet in
                schema.org.
          description: >-
            Represents a relationship between two geometries (or the places they
            represent), relating a geometry to another that covers it. As
            defined in <a
            href="https://en.wikipedia.org/wiki/DE-9IM">DE-9IM</a>.
        containedInPlace:
          $ref: 'place.yaml#/Place'
          description: >-
            The basic containment relation between a place and one that contains
            it.
        telephone:
          type: string
          description: The telephone number.
        geospatiallyOverlaps:
          oneOf:
            - type: object
              description: >-
                Type: GeospatialGeometry This type is not published yet in
                schema.org.
            - $ref: 'place.yaml#/Place'
          description: >-
            Represents a relationship between two geometries (or the places they
            represent), relating a geometry to another that geospatially
            overlaps it, i.e. they have some but not all points in common. As
            defined in <a
            href="https://en.wikipedia.org/wiki/DE-9IM">DE-9IM</a>.
        map:
          $ref: 'url.yaml#/URL'
          description: A URL to a map of the place.
        containedIn:
          $ref: 'place.yaml#/Place'
          description: >-
            The basic containment relation between a place and one that contains
            it.
        events:
          $ref: 'event.yaml#/Event'
          description: Upcoming or past events associated with this place or organization.
        smokingAllowed:
          type: boolean
          description: >-
            Indicates whether it is allowed to smoke in the place, e.g. in the
            restaurant, hotel or hotel room.
        amenityFeature:
          $ref: 'locationfeaturespecification.yaml#/LocationFeatureSpecification'
          description: >-
            An amenity feature (e.g. a characteristic or service) of the
            Accommodation. This generic property does not make a statement about
            whether the feature is included in an offer for the main
            accommodation or available at extra costs.
        event:
          $ref: 'event.yaml#/Event'
          description: >-
            Upcoming or past event associated with this place, organization, or
            action.
        additionalProperty:
          $ref: 'propertyvalue.yaml#/PropertyValue'
          description: >-
            A property-value pair representing an additional characteristics of
            the entitity, e.g. a product feature or another characteristic for
            which there is no matching property in schema.org.<br/><br/>


            Note: Publishers should be aware that applications designed to use
            specific schema.org properties (e.g. http://schema.org/width,
            http://schema.org/color, http://schema.org/gtin13, ...) will
            typically expect such data to be provided using those properties,
            rather than using the generic property/value mechanism.
        aggregateRating:
          $ref: 'aggregaterating.yaml#/AggregateRating'
          description: >-
            The overall rating, based on a collection of reviews or ratings, of
            the item.
        publicAccess:
          type: boolean
          description: >-
            A flag to signal that the <a class="localLink"
            href="http://schema.org/Place">Place</a> is open to public
            visitors.  If this property is omitted there is no assumed default
            boolean value
        globalLocationNumber:
          type: string
          description: >-
            The <a href="http://www.gs1.org/gln">Global Location Number</a>
            (GLN, sometimes also referred to as International Location Number or
            ILN) of the respective organization, person, or place. The GLN is a
            13-digit number used to identify parties and physical locations.
        photos:
          oneOf:
            - $ref: 'imageobject.yaml#/ImageObject'
            - $ref: 'photograph.yaml#/Photograph'
          description: Photographs of this place.
        logo:
          oneOf:
            - $ref: 'imageobject.yaml#/ImageObject'
            - $ref: 'url.yaml#/URL'
          description: An associated logo.
        specialOpeningHoursSpecification:
          $ref: 'openinghoursspecification.yaml#/OpeningHoursSpecification'
          description: >-
            The special opening hours of a certain place.<br/><br/>


            Use this to explicitly override general opening hours brought in
            scope by <a class="localLink"
            href="http://schema.org/openingHoursSpecification">openingHoursSpecification</a>
            or <a class="localLink"
            href="http://schema.org/openingHours">openingHours</a>.
PlaceOfWorship:
  $ref: 'civicstructure.yaml#/CivicStructure'
PlanAction:
  description: >-
    The act of planning the execution of an event/task/action/reservation/plan
    to a future date.
  allOf:
    - $ref: 'organizeaction.yaml#/OrganizeAction'
    - type: object
      properties:
        scheduledTime:
          type: string
          format: date-time
          description: The time the object is scheduled to.
PlayAction:
  description: >
    The act of playing/exercising/training/performing for enjoyment, leisure,
    recreation, Competition or exercise.<br/><br/>


    Related actions:<br/><br/>


    <ul>

    <li><a class="localLink"
    href="http://schema.org/ListenAction">ListenAction</a>: Unlike ListenAction
    (which is under ConsumeAction), PlayAction refers to performing for an
    audience or at an event, rather than consuming music.</li>

    <li><a class="localLink"
    href="http://schema.org/WatchAction">WatchAction</a>: Unlike WatchAction
    (which is under ConsumeAction), PlayAction refers to showing/displaying for
    an audience or at an event, rather than consuming visual content.</li>

    </ul>
  allOf:
    - $ref: 'Action.yaml#/Action'
    - type: object
      properties:
        event:
          $ref: 'Event.yaml#/Event'
          description: >-
            Upcoming or past event associated with this place, organization, or
            action.
        audience:
          $ref: 'Audience.yaml#/Audience'
          description: 'An intended audience, i.e. a group for whom something was created.'
Playground:
  $ref: 'civicstructure.yaml#/CivicStructure'
Plumber:
  $ref: 'homeandconstructionbusiness.yaml#/HomeAndConstructionBusiness'
PoliceStation:
  description: A police station.
Pond:
  $ref: 'BodyOfWater.yaml#/BodyOfWater'
PostalAddress:
  description: The mailing address.
  allOf:
    - $ref: 'contactpoint.yaml#/ContactPoint'
    - type: object
      properties:
        postOfficeBoxNumber:
          type: string
          description: The post office box number for PO box addresses.
        addressRegion:
          type: string
          description: 'The region. For example, CA.'
        addressCountry:
          oneOf:
            - type: string
            - $ref: 'country.yaml#/Country'
          description: >-
            The country. For example, USA. You can also provide the two-letter
            <a href="http://en.wikipedia.org/wiki/ISO_3166-1">ISO 3166-1 alpha-2
            country code</a>.
        postalCode:
          type: string
          description: 'The postal code. For example, 94043.'
        addressLocality:
          type: string
          description: 'The locality. For example, Mountain View.'
        streetAddress:
          type: string
          description: 'The street address. For example, 1600 Amphitheatre Pkwy.'
PostOffice:
  $ref: 'GovernmentOffice.yaml#/GovernmentOffice'
PrependAction:
  $ref: 'insertaction.yaml#/InsertAction'
Preschool:
  $ref: 'educationalorganization.yaml#/EducationalOrganization'
PresentationDigitalDocument:
  $ref: 'digitaldocument.yaml#/DigitalDocument'
PriceSpecification:
  description: >-
    A structured value representing a price or price range. Typically, only the
    subclasses of this type are used for markup. It is recommended to use <a
    class="localLink" href="http://schema.org/MonetaryAmount">MonetaryAmount</a>
    to describe independent amounts of money such as a salary, credit card
    limits, etc.
  allOf:
    - $ref: 'structuredvalue.yaml#/StructuredValue'
    - type: object
      properties:
        validThrough:
          type: string
          format: date-time
          description: >-
            The date after when the item is not valid. For example the end of an
            offer, salary period, or a period of opening hours.
        maxPrice:
          type: number
          description: The highest price if the price is a range.
        validFrom:
          type: string
          format: date-time
          description: The date when the item becomes valid.
        valueAddedTaxIncluded:
          type: boolean
          description: >-
            Specifies whether the applicable value-added tax (VAT) is included
            in the price specification or not.
        eligibleTransactionVolume:
          $ref: 'pricespecification.yaml#/PriceSpecification'
          description: >-
            The transaction volume, in a monetary unit, for which the offer or
            price specification is valid, e.g. for indicating a minimal
            purchasing volume, to express free shipping above a certain order
            volume, or to limit the acceptance of credit cards to purchases to a
            certain minimal amount.
        minPrice:
          type: number
          description: The lowest price if the price is a range.
        price:
          oneOf:
            - type: string
            - type: number
          description: >
            The offer price of a product, or of a price component when attached
            to PriceSpecification and its subtypes.<br/><br/>


            Usage guidelines:<br/><br/>


            <ul>

            <li>Use the <a class="localLink"
            href="http://schema.org/priceCurrency">priceCurrency</a> property
            (with standard formats: <a
            href="http://en.wikipedia.org/wiki/ISO_4217">ISO 4217 currency
            format</a> e.g. "USD"; <a
            href="https://en.wikipedia.org/wiki/List_of_cryptocurrencies">Ticker
            symbol</a> for cryptocurrencies e.g. "BTC"; well known names for <a
            href="https://en.wikipedia.org/wiki/Local_exchange_trading_system">Local
            Exchange Tradings Systems</a> (LETS) and other currency types e.g.
            "Ithaca HOUR") instead of including <a
            href="http://en.wikipedia.org/wiki/Dollar_sign#Currencies_that_use_the_dollar_or_peso_sign">ambiguous
            symbols</a> such as '$' in the value.</li>

            <li>Use '.' (Unicode 'FULL STOP' (U+002E)) rather than ',' to
            indicate a decimal point. Avoid using these symbols as a readability
            separator.</li>

            <li>Note that both <a
            href="http://www.w3.org/TR/xhtml-rdfa-primer/#using-the-content-attribute">RDFa</a>
            and Microdata syntax allow the use of a "content=" attribute for
            publishing simple machine-readable values alongside more
            human-friendly formatting.</li>

            <li>Use values from 0123456789 (Unicode 'DIGIT ZERO' (U+0030) to
            'DIGIT NINE' (U+0039)) rather than superficially similiar Unicode
            symbols.</li>

            </ul>
        priceCurrency:
          type: string
          description: >-
            The currency of the price, or a price component when attached to <a
            class="localLink"
            href="http://schema.org/PriceSpecification">PriceSpecification</a>
            and its subtypes.<br/><br/>


            Use standard formats: <a
            href="http://en.wikipedia.org/wiki/ISO_4217">ISO 4217 currency
            format</a> e.g. "USD"; <a
            href="https://en.wikipedia.org/wiki/List_of_cryptocurrencies">Ticker
            symbol</a> for cryptocurrencies e.g. "BTC"; well known names for <a
            href="https://en.wikipedia.org/wiki/Local_exchange_trading_system">Local
            Exchange Tradings Systems</a> (LETS) and other currency types e.g.
            "Ithaca HOUR".
        eligibleQuantity:
          $ref: 'quantitativevalue.yaml#/QuantitativeValue'
          description: >-
            The interval and unit of measurement of ordering quantities for
            which the offer or price specification is valid. This allows e.g.
            specifying that a certain freight charge is valid only for a certain
            quantity.
Product:
  description: >-
    Any offered product or service. For example: a pair of shoes; a concert
    ticket; the rental of a car; a haircut; or an episode of a TV show streamed
    online.
  allOf:
    - $ref: 'thing.yaml#/Thing'
    - type: object
      properties:
        isSimilarTo:
          oneOf:
            - $ref: 'product.yaml#/Product'
            - $ref: 'service.yaml#/Service'
          description: >-
            A pointer to another, functionally similar product (or multiple
            products).
        color:
          type: string
          description: The color of the product.
        manufacturer:
          $ref: 'organization.yaml#/Organization'
          description: The manufacturer of the product.
        gtin12:
          type: string
          description: >-
            The GTIN-12 code of the product, or the product to which the offer
            refers. The GTIN-12 is the 12-digit GS1 Identification Key composed
            of a U.P.C. Company Prefix, Item Reference, and Check Digit used to
            identify trade items. See <a
            href="http://www.gs1.org/barcodes/technical/idkeys/gtin">GS1 GTIN
            Summary</a> for more details.
        isRelatedTo:
          oneOf:
            - $ref: 'service.yaml#/Service'
            - $ref: 'product.yaml#/Product'
          description: >-
            A pointer to another, somehow related product (or multiple
            products).
        gtin8:
          type: string
          description: >-
            The <a
            href="http://apps.gs1.org/GDD/glossary/Pages/GTIN-8.aspx">GTIN-8</a>
            code of the product, or the product to which the offer refers. This
            code is also known as EAN/UCC-8 or 8-digit EAN. See <a
            href="http://www.gs1.org/barcodes/technical/idkeys/gtin">GS1 GTIN
            Summary</a> for more details.
        purchaseDate:
          type: string
          format: date
          description: The date the item e.g. vehicle was purchased by the current owner.
        model:
          oneOf:
            - $ref: 'productmodel.yaml#/ProductModel'
            - type: string
          description: >-
            The model of the product. Use with the URL of a ProductModel or a
            textual representation of the model identifier. The URL of the
            ProductModel can be from an external source. It is recommended to
            additionally provide strong product identifiers via the
            gtin8/gtin13/gtin14 and mpn properties.
        review:
          $ref: 'review.yaml#/Review'
          description: A review of the item.
        depth:
          oneOf:
            - $ref: 'quantitativevalue.yaml#/QuantitativeValue'
            - $ref: 'distance.yaml#/Distance'
          description: The depth of the item.
        gtin14:
          type: string
          description: >-
            The GTIN-14 code of the product, or the product to which the offer
            refers. See <a
            href="http://www.gs1.org/barcodes/technical/idkeys/gtin">GS1 GTIN
            Summary</a> for more details.
        gtin13:
          type: string
          description: >-
            The GTIN-13 code of the product, or the product to which the offer
            refers. This is equivalent to 13-digit ISBN codes and EAN UCC-13.
            Former 12-digit UPC codes can be converted into a GTIN-13 code by
            simply adding a preceeding zero. See <a
            href="http://www.gs1.org/barcodes/technical/idkeys/gtin">GS1 GTIN
            Summary</a> for more details.
        itemCondition:
          $ref: 'offeritemcondition.yaml#/OfferItemCondition'
          description: >-
            A predefined value from OfferItemCondition or a textual description
            of the condition of the product or service, or the products or
            services included in the offer.
        brand:
          oneOf:
            - $ref: 'organization.yaml#/Organization'
            - $ref: 'brand.yaml#/Brand'
          description: >-
            The brand(s) associated with a product or service, or the brand(s)
            maintained by an organization or business person.
        sku:
          type: string
          description: >-
            The Stock Keeping Unit (SKU), i.e. a merchant-specific identifier
            for a product or service, or the product to which the offer refers.
        additionalProperty:
          $ref: 'propertyvalue.yaml#/PropertyValue'
          description: >-
            A property-value pair representing an additional characteristics of
            the entitity, e.g. a product feature or another characteristic for
            which there is no matching property in schema.org.<br/><br/>


            Note: Publishers should be aware that applications designed to use
            specific schema.org properties (e.g. http://schema.org/width,
            http://schema.org/color, http://schema.org/gtin13, ...) will
            typically expect such data to be provided using those properties,
            rather than using the generic property/value mechanism.
        reviews:
          $ref: 'review.yaml#/Review'
          description: Review of the item.
        aggregateRating:
          $ref: 'aggregaterating.yaml#/AggregateRating'
          description: >-
            The overall rating, based on a collection of reviews or ratings, of
            the item.
        isAccessoryOrSparePartFor:
          $ref: 'product.yaml#/Product'
          description: >-
            A pointer to another product (or multiple products) for which this
            product is an accessory or spare part.
        isConsumableFor:
          $ref: 'product.yaml#/Product'
          description: >-
            A pointer to another product (or multiple products) for which this
            product is a consumable.
        award:
          type: string
          description: An award won by or for this item.
        mpn:
          type: string
          description: >-
            The Manufacturer Part Number (MPN) of the product, or the product to
            which the offer refers.
        width:
          oneOf:
            - $ref: 'distance.yaml#/Distance'
            - $ref: 'quantitativevalue.yaml#/QuantitativeValue'
          description: The width of the item.
        productionDate:
          type: string
          format: date
          description: 'The date of production of the item, e.g. vehicle.'
        height:
          oneOf:
            - $ref: 'distance.yaml#/Distance'
            - $ref: 'quantitativevalue.yaml#/QuantitativeValue'
          description: The height of the item.
        weight:
          $ref: 'quantitativevalue.yaml#/QuantitativeValue'
          description: The weight of the product or person.
        productID:
          type: string
          description: >-
            The product identifier, such as ISBN. For example: <code>meta
            itemprop="productID" content="isbn:123-456-789"</code>.
        material:
          oneOf:
            - type: string
            - $ref: 'product.yaml#/Product'
            - $ref: 'url.yaml#/URL'
          description: >-
            A material that something is made from, e.g. leather, wool, cotton,
            paper.
        category:
          oneOf:
            - type: object
              description: >-
                Type: PhysicalActivityCategory This type is not published yet in
                schema.org.
            - type: string
            - $ref: 'thing.yaml#/Thing'
          description: >-
            A category for the item. Greater signs or slashes can be used to
            informally indicate a category hierarchy.
        audience:
          $ref: 'audience.yaml#/Audience'
          description: 'An intended audience, i.e. a group for whom something was created.'
        releaseDate:
          type: string
          format: date
          description: >-
            The release date of a product or product model. This can be used to
            distinguish the exact variant of a product.
        awards:
          type: string
          description: Awards won by or for this item.
        logo:
          oneOf:
            - $ref: 'imageobject.yaml#/ImageObject'
            - $ref: 'url.yaml#/URL'
          description: An associated logo.
        offers:
          $ref: 'offer.yaml#/Offer'
          description: >-
            An offer to provide this item&#x2014;for example, an offer to sell a
            product, rent the DVD of a movie, perform a service, or give away
            tickets to an event.
ProductModel:
  description: >-
    A datasheet or vendor specification of a product (in the sense of a
    prototypical description).
  allOf:
    - $ref: 'product.yaml#/Product'
    - type: object
      properties:
        isVariantOf:
          $ref: 'productmodel.yaml#/ProductModel'
          description: >-
            A pointer to a base product from which this product is a variant. It
            is safe to infer that the variant inherits all product features from
            the base model, unless defined locally. This is not transitive.
        predecessorOf:
          $ref: 'productmodel.yaml#/ProductModel'
          description: >-
            A pointer from a previous, often discontinued variant of the product
            to its newer variant.
        successorOf:
          $ref: 'productmodel.yaml#/ProductModel'
          description: >-
            A pointer from a newer variant of a product  to its previous, often
            discontinued predecessor.
ProfessionalService:
  $ref: 'localbusiness.yaml#/LocalBusiness'
ProfilePage:
  $ref: 'webpage.yaml#/WebPage'
ProgramMembership:
  description: >-
    Used to describe membership in a loyalty programs (e.g. "StarAliance"),
    traveler clubs (e.g. "AAA"), purchase clubs ("Safeway Club"), etc.
  allOf:
    - $ref: 'intangible.yaml#/Intangible'
    - type: object
      properties:
        hostingOrganization:
          $ref: 'organization.yaml#/Organization'
          description: >-
            The organization (airline, travelers' club, etc.) the membership is
            made with.
        member:
          oneOf:
            - $ref: 'person.yaml#/Person'
            - $ref: 'organization.yaml#/Organization'
          description: >-
            A member of an Organization or a ProgramMembership. Organizations
            can be members of organizations; ProgramMembership is typically for
            individuals.
        members:
          oneOf:
            - $ref: 'organization.yaml#/Organization'
            - $ref: 'person.yaml#/Person'
          description: A member of this organization.
        programName:
          type: string
          description: The program providing the membership.
        membershipNumber:
          type: string
          description: A unique identifier for the membership.
Property:
  allOf:
    - $ref: 'intangible.yaml#/Intangible'
    - type: object
      description: A property, used to indicate attributes and relationships of some Thing.
PropertyValue:
  description: >-
    A property-value pair, e.g. representing a feature of a product or place.
    Use the 'name' property for the name of the property. If there is an
    additional human-readable version of the value, put that into the
    'description' property.<br/><br/>


    Always use specific schema.org properties when a) they exist and b) you can
    populate them. Using PropertyValue as a substitute will typically not
    trigger the same effect as using the original, specific property.
  allOf:
    - $ref: 'structuredvalue.yaml#/StructuredValue'
    - type: object
      properties:
        unitCode:
          oneOf:
            - $ref: 'url.yaml#/URL'
            - type: string
          description: >-
            The unit of measurement given using the UN/CEFACT Common Code (3
            characters) or a URL. Other codes than the UN/CEFACT Common Code may
            be used with a prefix followed by a colon.
        value:
          oneOf:
            - type: boolean
            - type: number
            - type: string
            - $ref: 'structuredvalue.yaml#/StructuredValue'
          description: >
            The value of the quantitative value or property value
            node.<br/><br/>


            <ul>

            <li>For <a class="localLink"
            href="http://schema.org/QuantitativeValue">QuantitativeValue</a> and
            <a class="localLink"
            href="http://schema.org/MonetaryAmount">MonetaryAmount</a>, the
            recommended type for values is 'Number'.</li>

            <li>For <a class="localLink"
            href="http://schema.org/PropertyValue">PropertyValue</a>, it can be
            'Text;', 'Number', 'Boolean', or 'StructuredValue'.</li>

            </ul>
        minValue:
          type: number
          description: The lower value of some characteristic or property.
        maxValue:
          type: number
          description: The upper value of some characteristic or property.
        unitText:
          type: string
          description: >-
            A string or text indicating the unit of measurement. Useful if you
            cannot provide a standard unit code for

            <a href='unitCode'>unitCode</a>.
        propertyID:
          oneOf:
            - $ref: 'url.yaml#/URL'
            - type: string
          description: >-
            A commonly used identifier for the characteristic represented by the
            property, e.g. a manufacturer or a standard code for a property.
            propertyID can be

            (1) a prefixed string, mainly meant to be used with standards for
            product properties; (2) a site-specific, non-prefixed string (e.g.
            the primary key of the property or the vendor-specific id of the
            property), or (3)

            a URL indicating the type of the property, either pointing to an
            external vocabulary, or a Web resource that describes the property
            (e.g. a glossary entry).

            Standards bodies should promote a standard prefix for the
            identifiers of properties from their standards.
        measurementTechnique:
          oneOf:
            - type: string
            - $ref: 'url.yaml#/URL'
          description: >-
            A technique or technology used in a <a class="localLink"
            href="http://schema.org/Dataset">Dataset</a> (or <a
            class="localLink"
            href="http://schema.org/DataDownload">DataDownload</a>, <a
            class="localLink"
            href="http://schema.org/DataCatalog">DataCatalog</a>),

            corresponding to the method used for measuring the corresponding
            variable(s) (described using <a class="localLink"
            href="http://schema.org/variableMeasured">variableMeasured</a>).
            This is oriented towards scientific and scholarly dataset
            publication but may have broader applicability; it is not intended
            as a full representation of measurement, but rather as a high level
            summary for dataset discovery.<br/><br/>


            For example, if <a class="localLink"
            href="http://schema.org/variableMeasured">variableMeasured</a> is:
            molecule concentration, <a class="localLink"
            href="http://schema.org/measurementTechnique">measurementTechnique</a>
            could be: "mass spectrometry" or "nmr spectroscopy" or "colorimetry"
            or "immunofluorescence".<br/><br/>


            If the <a class="localLink"
            href="http://schema.org/variableMeasured">variableMeasured</a> is
            "depression rating", the <a class="localLink"
            href="http://schema.org/measurementTechnique">measurementTechnique</a>
            could be "Zung Scale" or "HAM-D" or "Beck Depression
            Inventory".<br/><br/>


            If there are several <a class="localLink"
            href="http://schema.org/variableMeasured">variableMeasured</a>
            properties recorded for some given data object, use a <a
            class="localLink"
            href="http://schema.org/PropertyValue">PropertyValue</a> for each <a
            class="localLink"
            href="http://schema.org/variableMeasured">variableMeasured</a> and
            attach the corresponding <a class="localLink"
            href="http://schema.org/measurementTechnique">measurementTechnique</a>.
        valueReference:
          oneOf:
            - $ref: 'qualitativevalue.yaml#/QualitativeValue'
            - $ref: 'structuredvalue.yaml#/StructuredValue'
            - $ref: 'enumeration.yaml#/Enumeration'
            - $ref: 'quantitativevalue.yaml#/QuantitativeValue'
            - $ref: 'propertyvalue.yaml#/PropertyValue'
          description: >-
            A pointer to a secondary value that provides additional information
            on the original value, e.g. a reference temperature.
PropertyValueSpecification:
  description: A Property value specification.
  allOf:
    - $ref: 'intangible.yaml#/Intangible'
    - type: object
      properties:
        valueMinLength:
          type: number
          description: >-
            Specifies the minimum allowed range for number of characters in a
            literal value.
        valuePattern:
          type: string
          description: >-
            Specifies a regular expression for testing literal values according
            to the HTML spec.
        valueMaxLength:
          type: number
          description: >-
            Specifies the allowed range for number of characters in a literal
            value.
        valueRequired:
          type: boolean
          description: >-
            Whether the property must be filled in to complete the action. 
            Default is false.
        minValue:
          type: number
          description: The lower value of some characteristic or property.
        readonlyValue:
          type: boolean
          description: >-
            Whether or not a property is mutable.  Default is false. Specifying
            this for a property that also has a value makes it act similar to a
            "hidden" input in an HTML form.
        maxValue:
          type: number
          description: The upper value of some characteristic or property.
        multipleValues:
          type: boolean
          description: >-
            Whether multiple values are allowed for the property.  Default is
            false.
        stepValue:
          type: number
          description: >-
            The stepValue attribute indicates the granularity that is expected
            (and required) of the value in a PropertyValueSpecification.
        valueName:
          type: string
          description: >-
            Indicates the name of the PropertyValueSpecification to be used in
            URL templates and form encoding in a manner analogous to HTML's
            input@name.
        defaultValue:
          oneOf:
            - type: string
            - $ref: 'thing.yaml#/Thing'
          description: >-
            The default value of the input.  For properties that expect a
            literal, the default is a literal value, for properties that expect
            an object, it's an ID reference to one of the current values.
PublicationEvent:
  description: >-
    A PublicationEvent corresponds indifferently to the event of publication for
    a CreativeWork of any type e.g. a broadcast event, an on-demand event, a
    book/journal publication via a variety of delivery media.
  allOf:
    - $ref: 'event.yaml#/Event'
    - type: object
      properties:
        free:
          type: boolean
          description: >-
            A flag to signal that the item, event, or place is accessible for
            free.
        publishedBy:
          oneOf:
            - $ref: 'organization.yaml#/Organization'
            - $ref: 'person.yaml#/Person'
          description: An agent associated with the publication event.
        isAccessibleForFree:
          type: boolean
          description: >-
            A flag to signal that the item, event, or place is accessible for
            free.
        publishedOn:
          $ref: 'broadcastservice.yaml#/BroadcastService'
          description: A broadcast service associated with the publication event.
PublicationIssue:
  description: >-
    A part of a successively published publication such as a periodical or
    publication volume, often numbered, usually containing a grouping of works
    such as articles.<br/><br/>


    <a
    href="http://blog.schema.org/2014/09/schemaorg-support-for-bibliographic_2.html">blog
    post</a>.
  allOf:
    - $ref: 'CreativeWork.yaml#/CreativeWork'
    - type: object
      properties:
        issueNumber:
          oneOf:
            - type: string
            - type: integer
          description: 'Identifies the issue of publication; for example, "iii" or "2".'
        pageStart:
          oneOf:
            - type: string
            - type: integer
          description: The page on which the work starts; for example "135" or "xiii".
        pageEnd:
          oneOf:
            - type: string
            - type: integer
          description: The page on which the work ends; for example "138" or "xvi".
        pagination:
          type: string
          description: >-
            Any description of pages that is not separated into pageStart and
            pageEnd; for example, "1-6, 9, 55" or "10-12, 46-49".
PublicationVolume:
  description: >
    A part of a successively published publication such as a periodical or
    multi-volume work, often numbered. It may represent a time span, such as a
    year.<br/><br/>


    <pre><code>  &lt;br/&gt;&lt;br/&gt;See also &lt;a
    href="http://blog.schema.org/2014/09/schemaorg-support-for-bibliographic_2.html"&gt;blog
    post&lt;/a&gt;.

    </code></pre>
  allOf:
    - $ref: 'creativework.yaml#/CreativeWork'
    - type: object
      properties:
        volumeNumber:
          oneOf:
            - type: integer
            - type: string
          description: >-
            Identifies the volume of publication or multi-part work; for
            example, "iii" or "2".
        pageStart:
          oneOf:
            - type: string
            - type: integer
          description: The page on which the work starts; for example "135" or "xiii".
        pageEnd:
          oneOf:
            - type: string
            - type: integer
          description: The page on which the work ends; for example "138" or "xvi".
        pagination:
          type: string
          description: >-
            Any description of pages that is not separated into pageStart and
            pageEnd; for example, "1-6, 9, 55" or "10-12, 46-49".
PublicSwimmingPool:
  $ref: 'sportsactivitylocation.yaml#/SportsActivityLocation'
QAPage:
  $ref: 'webpage.yaml#/WebPage'
QualitativeValue:
  description: >-
    A predefined value for a product characteristic, e.g. the power cord plug
    type 'US' or the garment sizes 'S', 'M', 'L', and 'XL'.
  allOf:
    - $ref: 'enumeration.yaml#/Enumeration'
    - type: object
      properties:
        greater:
          $ref: 'qualitativevalue.yaml#/QualitativeValue'
          description: >-
            This ordering relation for qualitative values indicates that the
            subject is greater than the object.
        lesserOrEqual:
          $ref: 'qualitativevalue.yaml#/QualitativeValue'
          description: >-
            This ordering relation for qualitative values indicates that the
            subject is lesser than or equal to the object.
        lesser:
          $ref: 'qualitativevalue.yaml#/QualitativeValue'
          description: >-
            This ordering relation for qualitative values indicates that the
            subject is lesser than the object.
        additionalProperty:
          $ref: 'propertyvalue.yaml#/PropertyValue'
          description: >-
            A property-value pair representing an additional characteristics of
            the entitity, e.g. a product feature or another characteristic for
            which there is no matching property in schema.org.<br/><br/>


            Note: Publishers should be aware that applications designed to use
            specific schema.org properties (e.g. http://schema.org/width,
            http://schema.org/color, http://schema.org/gtin13, ...) will
            typically expect such data to be provided using those properties,
            rather than using the generic property/value mechanism.
        equal:
          $ref: 'qualitativevalue.yaml#/QualitativeValue'
          description: >-
            This ordering relation for qualitative values indicates that the
            subject is equal to the object.
        greaterOrEqual:
          $ref: 'qualitativevalue.yaml#/QualitativeValue'
          description: >-
            This ordering relation for qualitative values indicates that the
            subject is greater than or equal to the object.
        valueReference:
          oneOf:
            - $ref: 'propertyvalue.yaml#/PropertyValue'
            - $ref: 'quantitativevalue.yaml#/QuantitativeValue'
            - $ref: 'qualitativevalue.yaml#/QualitativeValue'
            - $ref: 'enumeration.yaml#/Enumeration'
            - $ref: 'structuredvalue.yaml#/StructuredValue'
          description: >-
            A pointer to a secondary value that provides additional information
            on the original value, e.g. a reference temperature.
        nonEqual:
          $ref: 'qualitativevalue.yaml#/QualitativeValue'
          description: >-
            This ordering relation for qualitative values indicates that the
            subject is not equal to the object.
QuantitativeValue:
  description: A point value or interval for product characteristics and other purposes.
  allOf:
    - $ref: 'StructuredValue.yaml#/StructuredValue'
    - type: object
      properties:
        unitCode:
          oneOf:
            - $ref: 'URL.yaml#/URL'
            - type: string
          description: >-
            The unit of measurement given using the UN/CEFACT Common Code (3
            characters) or a URL. Other codes than the UN/CEFACT Common Code may
            be used with a prefix followed by a colon.
        minValue:
          type: number
          description: The lower value of some characteristic or property.
        valueReference:
          oneOf:
            - $ref: 'QuantitativeValue.yaml#/QuantitativeValue'
            - $ref: 'QualitativeValue.yaml#/QualitativeValue'
            - $ref: 'PropertyValue.yaml#/PropertyValue'
            - $ref: 'Enumeration.yaml#/Enumeration'
            - $ref: 'StructuredValue.yaml#/StructuredValue'
          description: >-
            A pointer to a secondary value that provides additional information
            on the original value, e.g. a reference temperature.
        value:
          oneOf:
            - type: boolean
            - type: string
            - type: number
            - $ref: 'StructuredValue.yaml#/StructuredValue'
          description: >
            The value of the quantitative value or property value
            node.<br/><br/>


            <ul>

            <li>For <a class="localLink"
            href="http://schema.org/QuantitativeValue">QuantitativeValue</a> and
            <a class="localLink"
            href="http://schema.org/MonetaryAmount">MonetaryAmount</a>, the
            recommended type for values is 'Number'.</li>

            <li>For <a class="localLink"
            href="http://schema.org/PropertyValue">PropertyValue</a>, it can be
            'Text;', 'Number', 'Boolean', or 'StructuredValue'.</li>

            </ul>
        additionalProperty:
          $ref: 'PropertyValue.yaml#/PropertyValue'
          description: >-
            A property-value pair representing an additional characteristics of
            the entitity, e.g. a product feature or another characteristic for
            which there is no matching property in schema.org.<br/><br/>


            Note: Publishers should be aware that applications designed to use
            specific schema.org properties (e.g. http://schema.org/width,
            http://schema.org/color, http://schema.org/gtin13, ...) will
            typically expect such data to be provided using those properties,
            rather than using the generic property/value mechanism.
        maxValue:
          type: number
          description: The upper value of some characteristic or property.
        unitText:
          type: string
          description: >-
            A string or text indicating the unit of measurement. Useful if you
            cannot provide a standard unit code for

            <a href='unitCode'>unitCode</a>.
Quantity:
  $ref: 'intangible.yaml#/Intangible'
Question:
  description: >-
    A specific question - e.g. from a user seeking answers online, or collected
    in a Frequently Asked Questions (FAQ) document.
  allOf:
    - $ref: 'creativework.yaml#/CreativeWork'
    - type: object
      properties:
        upvoteCount:
          type: integer
          description: >-
            The number of upvotes this question, answer or comment has received
            from the community.
        answerCount:
          type: integer
          description: The number of answers this question has received.
        acceptedAnswer:
          oneOf:
            - $ref: 'itemlist.yaml#/ItemList'
            - $ref: 'answer.yaml#/Answer'
          description: >-
            The answer(s) that has been accepted as best, typically on a
            Question/Answer site. Sites vary in their selection mechanisms, e.g.
            drawing on community opinion and/or the view of the Question author.
        suggestedAnswer:
          oneOf:
            - $ref: 'answer.yaml#/Answer'
            - $ref: 'itemlist.yaml#/ItemList'
          description: >-
            An answer (possibly one of several, possibly incorrect) to a
            Question, e.g. on a Question/Answer site.
        downvoteCount:
          type: integer
          description: >-
            The number of downvotes this question, answer or comment has
            received from the community.
QuoteAction:
  $ref: 'TradeAction.yaml#/TradeAction'
RadioChannel:
  $ref: 'broadcastchannel.yaml#/BroadcastChannel'
RadioClip:
  $ref: 'clip.yaml#/Clip'
RadioEpisode:
  $ref: 'Episode.yaml#/Episode'
RadioSeason:
  $ref: 'creativeworkseason.yaml#/CreativeWorkSeason'
RadioSeries:
  description: >-
    CreativeWorkSeries dedicated to radio broadcast and associated online
    delivery.
  allOf:
    - $ref: 'creativeworkseries.yaml#/CreativeWorkSeries'
    - type: object
      properties:
        seasons:
          $ref: 'creativeworkseason.yaml#/CreativeWorkSeason'
          description: A season in a media series.
        episodes:
          $ref: 'episode.yaml#/Episode'
          description: An episode of a TV/radio series or season.
        episode:
          $ref: 'episode.yaml#/Episode'
          description: 'An episode of a tv, radio or game media within a series or season.'
        trailer:
          $ref: 'videoobject.yaml#/VideoObject'
          description: 'The trailer of a movie or tv/radio series, season, episode, etc.'
        directors:
          $ref: 'person.yaml#/Person'
          description: >-
            A director of e.g. tv, radio, movie, video games etc. content.
            Directors can be associated with individual items or with a series,
            episode, clip.
        containsSeason:
          $ref: 'creativeworkseason.yaml#/CreativeWorkSeason'
          description: A season that is part of the media series.
        musicBy:
          oneOf:
            - $ref: 'person.yaml#/Person'
            - $ref: 'musicgroup.yaml#/MusicGroup'
          description: The composer of the soundtrack.
        numberOfSeasons:
          type: integer
          description: The number of seasons in this series.
        actors:
          $ref: 'person.yaml#/Person'
          description: >-
            An actor, e.g. in tv, radio, movie, video games etc. Actors can be
            associated with individual items or with a series, episode, clip.
        actor:
          $ref: 'person.yaml#/Person'
          description: >-
            An actor, e.g. in tv, radio, movie, video games etc., or in an
            event. Actors can be associated with individual items or with a
            series, episode, clip.
        director:
          $ref: 'person.yaml#/Person'
          description: >-
            A director of e.g. tv, radio, movie, video gaming etc. content, or
            of an event. Directors can be associated with individual items or
            with a series, episode, clip.
        season:
          $ref: 'creativeworkseason.yaml#/CreativeWorkSeason'
          description: A season in a media series.
        productionCompany:
          $ref: 'organization.yaml#/Organization'
          description: >-
            The production company or studio responsible for the item e.g.
            series, video game, episode etc.
        numberOfEpisodes:
          type: integer
          description: The number of episodes in this season or series.
RadioStation:
  $ref: 'localbusiness.yaml#/LocalBusiness'
Rating:
  description: 'A rating is an evaluation on a numeric scale, such as 1 to 5 stars.'
  allOf:
    - $ref: 'intangible.yaml#/Intangible'
    - type: object
      properties:
        ratingValue:
          oneOf:
            - type: string
            - type: number
          description: The rating for the content.
        author:
          oneOf:
            - $ref: 'organization.yaml#/Organization'
            - $ref: 'person.yaml#/Person'
          description: >-
            The author of this content or rating. Please note that author is
            special in that HTML 5 provides a special mechanism for indicating
            authorship via the rel tag. That is equivalent to this and may be
            used interchangeably.
        worstRating:
          oneOf:
            - type: string
            - type: number
          description: >-
            The lowest value allowed in this rating system. If worstRating is
            omitted, 1 is assumed.
        bestRating:
          oneOf:
            - type: string
            - type: number
          description: >-
            The highest value allowed in this rating system. If bestRating is
            omitted, 5 is assumed.
        reviewAspect:
          type: string
          description: >-
            This Review or Rating is relevant to this part or facet of the
            itemReviewed.
ReactAction:
  $ref: 'assessaction.yaml#/AssessAction'
ReadAction:
  $ref: 'consumeaction.yaml#/ConsumeAction'
RealEstateAgent:
  $ref: 'localbusiness.yaml#/LocalBusiness'
ReceiveAction:
  description: >
    The act of physically/electronically taking delivery of an object thathas
    been transferred from an origin to a destination. Reciprocal of
    SendAction.<br/><br/>


    Related actions:<br/><br/>


    <ul>

    <li><a class="localLink" href="http://schema.org/SendAction">SendAction</a>:
    The reciprocal of ReceiveAction.</li>

    <li><a class="localLink" href="http://schema.org/TakeAction">TakeAction</a>:
    Unlike TakeAction, ReceiveAction does not imply that the ownership has been
    transfered (e.g. I can receive a package, but it does not mean the package
    is now mine).</li>

    </ul>
  allOf:
    - $ref: 'transferaction.yaml#/TransferAction'
    - type: object
      properties:
        deliveryMethod:
          $ref: 'deliverymethod.yaml#/DeliveryMethod'
          description: A sub property of instrument. The method of delivery.
        sender:
          oneOf:
            - $ref: 'organization.yaml#/Organization'
            - $ref: 'person.yaml#/Person'
            - $ref: 'audience.yaml#/Audience'
          description: >-
            A sub property of participant. The participant who is at the sending
            end of the action.
Recipe:
  description: >-
    A recipe. For dietary restrictions covered by the recipe, a few common
    restrictions are enumerated via <a class="localLink"
    href="http://schema.org/suitableForDiet">suitableForDiet</a>. The <a
    class="localLink" href="http://schema.org/keywords">keywords</a> property
    can also be used to add more detail.
  allOf:
    - $ref: 'howto.yaml#/HowTo'
    - type: object
      properties:
        recipeCuisine:
          type: string
          description: 'The cuisine of the recipe (for example, French or Ethiopian).'
        suitableForDiet:
          $ref: 'restricteddiet.yaml#/RestrictedDiet'
          description: >-
            Indicates a dietary restriction or guideline for which this recipe
            or menu item is suitable, e.g. diabetic, halal etc.
        cookTime:
          $ref: 'duration.yaml#/Duration'
          description: >-
            The time it takes to actually cook the dish, in <a
            href="http://en.wikipedia.org/wiki/ISO_8601">ISO 8601 duration
            format</a>.
        recipeIngredient:
          type: string
          description: 'A single ingredient used in the recipe, e.g. sugar, flour or garlic.'
        recipeInstructions:
          oneOf:
            - $ref: 'creativework.yaml#/CreativeWork'
            - $ref: 'itemlist.yaml#/ItemList'
            - type: string
          description: >-
            A step in making the recipe, in the form of a single item (document,
            video, etc.) or an ordered list with HowToStep and/or HowToSection
            items.
        cookingMethod:
          type: string
          description: 'The method of cooking, such as Frying, Steaming, ...'
        ingredients:
          type: string
          description: 'A single ingredient used in the recipe, e.g. sugar, flour or garlic.'
        recipeYield:
          oneOf:
            - type: string
            - $ref: 'quantitativevalue.yaml#/QuantitativeValue'
          description: >-
            The quantity produced by the recipe (for example, number of people
            served, number of servings, etc).
        nutrition:
          $ref: 'nutritioninformation.yaml#/NutritionInformation'
          description: Nutrition information about the recipe or menu item.
        recipeCategory:
          type: string
          description: 'The category of the recipe—for example, appetizer, entree, etc.'
RecyclingCenter:
  $ref: 'localbusiness.yaml#/LocalBusiness'
RegisterAction:
  $ref: 'interactaction.yaml#/InteractAction'
RejectAction:
  $ref: 'allocateaction.yaml#/AllocateAction'
RentAction:
  description: >-
    The act of giving money in return for temporary use, but not ownership, of
    an object such as a vehicle or property. For example, an agent rents a
    property from a landlord in exchange for a periodic payment.
  allOf:
    - $ref: 'tradeaction.yaml#/TradeAction'
    - type: object
      properties:
        landlord:
          oneOf:
            - $ref: 'person.yaml#/Person'
            - $ref: 'organization.yaml#/Organization'
          description: >-
            A sub property of participant. The owner of the real estate
            property.
        realEstateAgent:
          $ref: 'realestateagent.yaml#/RealEstateAgent'
          description: >-
            A sub property of participant. The real estate agent involved in the
            action.
RentalCarReservation:
  description: >-
    A reservation for a rental car.<br/><br/>


    Note: This type is for information about actual reservations, e.g. in
    confirmation emails or HTML pages with individual confirmations of
    reservations.
  allOf:
    - $ref: 'reservation.yaml#/Reservation'
    - type: object
      properties:
        pickupTime:
          type: string
          format: date-time
          description: >-
            When a taxi will pickup a passenger or a rental car can be picked
            up.
        dropoffLocation:
          $ref: 'place.yaml#/Place'
          description: Where a rental car can be dropped off.
        dropoffTime:
          type: string
          format: date-time
          description: When a rental car can be dropped off.
        pickupLocation:
          $ref: 'place.yaml#/Place'
          description: >-
            Where a taxi will pick up a passenger or a rental car can be picked
            up.
ReplaceAction:
  description: The act of editing a recipient by replacing an old object with a new object.
  allOf:
    - $ref: 'updateaction.yaml#/UpdateAction'
    - type: object
      properties:
        replacer:
          $ref: 'thing.yaml#/Thing'
          description: A sub property of object. The object that replaces.
        replacee:
          $ref: 'thing.yaml#/Thing'
          description: A sub property of object. The object that is being replaced.
ReplyAction:
  description: >
    The act of responding to a question/message asked/sent by the object.
    Related to <a class="localLink"
    href="http://schema.org/AskAction">AskAction</a><br/><br/>


    Related actions:<br/><br/>


    <ul>

    <li><a class="localLink" href="http://schema.org/AskAction">AskAction</a>:
    Appears generally as an origin of a ReplyAction.</li>

    </ul>
  allOf:
    - $ref: 'communicateaction.yaml#/CommunicateAction'
    - type: object
      properties:
        resultComment:
          $ref: 'comment.yaml#/Comment'
          description: >-
            A sub property of result. The Comment created or sent as a result of
            this action.
Report:
  description: A Report generated by governmental or non-governmental organization.
  allOf:
    - $ref: 'article.yaml#/Article'
    - type: object
      properties:
        reportNumber:
          type: string
          description: >-
            The number or other unique designator assigned to a Report by the
            publishing organization.
Reservation:
  description: >-
    Describes a reservation for travel, dining or an event. Some reservations
    require tickets. <br/><br/>


    Note: This type is for information about actual reservations, e.g. in
    confirmation emails or HTML pages with individual confirmations of
    reservations. For offers of tickets, restaurant reservations, flights, or
    rental cars, use <a class="localLink"
    href="http://schema.org/Offer">Offer</a>.
  allOf:
    - $ref: 'intangible.yaml#/Intangible'
    - type: object
      properties:
        broker:
          oneOf:
            - $ref: 'person.yaml#/Person'
            - $ref: 'organization.yaml#/Organization'
          description: >-
            An entity that arranges for an exchange between a buyer and a
            seller.  In most cases a broker never acquires or releases ownership
            of a product or service involved in an exchange.  If it is not clear
            whether an entity is a broker, seller, or buyer, the latter two
            terms are preferred.
        bookingTime:
          type: string
          format: date-time
          description: The date and time the reservation was booked.
        reservationFor:
          $ref: 'thing.yaml#/Thing'
          description: 'The thing -- flight, event, restaurant,etc. being reserved.'
        programMembershipUsed:
          $ref: 'programmembership.yaml#/ProgramMembership'
          description: >-
            Any membership in a frequent flyer, hotel loyalty program, etc.
            being applied to the reservation.
        provider:
          oneOf:
            - $ref: 'person.yaml#/Person'
            - $ref: 'organization.yaml#/Organization'
          description: >-
            The service provider, service operator, or service performer; the
            goods producer. Another party (a seller) may offer those services or
            goods on behalf of the provider. A provider may also serve as the
            seller.
        totalPrice:
          oneOf:
            - type: number
            - type: string
            - $ref: 'pricespecification.yaml#/PriceSpecification'
          description: >-
            The total price for the reservation or ticket, including applicable
            taxes, shipping, etc.
        reservationStatus:
          $ref: 'reservationstatustype.yaml#/ReservationStatusType'
          description: The current status of the reservation.
        underName:
          oneOf:
            - $ref: 'person.yaml#/Person'
            - $ref: 'organization.yaml#/Organization'
          description: The person or organization the reservation or ticket is for.
        reservedTicket:
          $ref: 'ticket.yaml#/Ticket'
          description: A ticket associated with the reservation.
        bookingAgent:
          oneOf:
            - $ref: 'person.yaml#/Person'
            - $ref: 'organization.yaml#/Organization'
          description: >-
            'bookingAgent' is an out-dated term indicating a 'broker' that
            serves as a booking agent.
        modifiedTime:
          type: string
          format: date-time
          description: The date and time the reservation was modified.
        priceCurrency:
          type: string
          description: >-
            The currency of the price, or a price component when attached to <a
            class="localLink"
            href="http://schema.org/PriceSpecification">PriceSpecification</a>
            and its subtypes.<br/><br/>


            Use standard formats: <a
            href="http://en.wikipedia.org/wiki/ISO_4217">ISO 4217 currency
            format</a> e.g. "USD"; <a
            href="https://en.wikipedia.org/wiki/List_of_cryptocurrencies">Ticker
            symbol</a> for cryptocurrencies e.g. "BTC"; well known names for <a
            href="https://en.wikipedia.org/wiki/Local_exchange_trading_system">Local
            Exchange Tradings Systems</a> (LETS) and other currency types e.g.
            "Ithaca HOUR".
        reservationId:
          type: string
          description: A unique identifier for the reservation.
ReservationPackage:
  description: >-
    A group of multiple reservations with common values for all
    sub-reservations.
  allOf:
    - $ref: 'reservation.yaml#/Reservation'
    - type: object
      properties:
        subReservation:
          $ref: 'reservation.yaml#/Reservation'
          description: >-
            The individual reservations included in the package. Typically a
            repeated property.
ReservationStatusType:
  $ref: 'enumeration.yaml#/Enumeration'
ReserveAction:
  $ref: 'PlanAction.yaml#/PlanAction'
Reservoir:
  $ref: 'bodyofwater.yaml#/BodyOfWater'
Residence:
  $ref: 'place.yaml#/Place'
Resort:
  $ref: 'lodgingbusiness.yaml#/LodgingBusiness'
Restaurant:
  $ref: 'foodestablishment.yaml#/FoodEstablishment'
RestrictedDiet:
  $ref: 'Enumeration.yaml#/Enumeration'
ResumeAction:
  $ref: 'controlaction.yaml#/ControlAction'
ReturnAction:
  description: >-
    The act of returning to the origin that which was previously received
    (concrete objects) or taken (ownership).
  allOf:
    - $ref: 'transferaction.yaml#/TransferAction'
    - type: object
      properties:
        recipient:
          oneOf:
            - $ref: 'person.yaml#/Person'
            - $ref: 'audience.yaml#/Audience'
            - $ref: 'organization.yaml#/Organization'
            - $ref: 'contactpoint.yaml#/ContactPoint'
          description: >-
            A sub property of participant. The participant who is at the
            receiving end of the action.
Review:
  description: 'A review of an item - for example, of a restaurant, movie, or store.'
  allOf:
    - $ref: 'creativework.yaml#/CreativeWork'
    - type: object
      properties:
        reviewRating:
          $ref: 'rating.yaml#/Rating'
          description: >-
            The rating given in this review. Note that reviews can themselves be
            rated. The <code>reviewRating</code> applies to rating given by the
            review. The <a class="localLink"
            href="http://schema.org/aggregateRating">aggregateRating</a>
            property applies to the review itself, as a creative work.
        itemReviewed:
          $ref: 'thing.yaml#/Thing'
          description: The item that is being reviewed/rated.
        reviewBody:
          type: string
          description: The actual body of the review.
        reviewAspect:
          type: string
          description: >-
            This Review or Rating is relevant to this part or facet of the
            itemReviewed.
ReviewAction:
  description: >-
    The act of producing a balanced opinion about the object for an audience. An
    agent reviews an object with participants resulting in a review.
  allOf:
    - $ref: 'AssessAction.yaml#/AssessAction'
    - type: object
      properties:
        resultReview:
          $ref: 'Review.yaml#/Review'
          description: >-
            A sub property of result. The review that resulted in the performing
            of the action.
RiverBodyOfWater:
  $ref: 'bodyofwater.yaml#/BodyOfWater'
Role:
  description: >-
    Represents additional information about a relationship or property. For
    example a Role can be used to say that a 'member' role linking some
    SportsTeam to a player occurred during a particular time period. Or that a
    Person's 'actor' role in a Movie was for some particular characterName. Such
    properties can be attached to a Role entity, which is then associated with
    the main entities using ordinary properties like 'member' or
    'actor'.<br/><br/>


    See also <a href="http://blog.schema.org/2014/06/introducing-role.html">blog
    post</a>.
  allOf:
    - $ref: 'intangible.yaml#/Intangible'
    - type: object
      properties:
        endDate:
          oneOf:
            - type: string
              format: date
            - type: string
              format: date-time
          description: >-
            The end date and time of the item (in <a
            href="http://en.wikipedia.org/wiki/ISO_8601">ISO 8601 date
            format</a>).
        roleName:
          oneOf:
            - type: string
            - $ref: 'url.yaml#/URL'
          description: >-
            A role played, performed or filled by a person or organization. For
            example, the team of creators for a comic book might fill the roles
            named 'inker', 'penciller', and 'letterer'; or an athlete in a
            SportsTeam might play in the position named 'Quarterback'.
        namedPosition:
          oneOf:
            - $ref: 'url.yaml#/URL'
            - type: string
          description: >-
            A position played, performed or filled by a person or organization,
            as part of an organization. For example, an athlete in a SportsTeam
            might play in the position named 'Quarterback'.
        startDate:
          oneOf:
            - type: string
              format: date-time
            - type: string
              format: date
          description: >-
            The start date and time of the item (in <a
            href="http://en.wikipedia.org/wiki/ISO_8601">ISO 8601 date
            format</a>).
RoofingContractor:
  $ref: 'homeandconstructionbusiness.yaml#/HomeAndConstructionBusiness'
Room:
  $ref: 'accommodation.yaml#/Accommodation'
RsvpAction:
  description: >-
    The act of notifying an event organizer as to whether you expect to attend
    the event.
  allOf:
    - $ref: 'informaction.yaml#/InformAction'
    - type: object
      properties:
        rsvpResponse:
          $ref: 'rsvpresponsetype.yaml#/RsvpResponseType'
          description: 'The response (yes, no, maybe) to the RSVP.'
        comment:
          $ref: 'comment.yaml#/Comment'
          description: 'Comments, typically from users.'
        additionalNumberOfGuests:
          type: number
          description: >-
            If responding yes, the number of guests who will attend in addition
            to the invitee.
RsvpResponseType:
  $ref: 'enumeration.yaml#/Enumeration'
RVPark:
  $ref: 'civicstructure.yaml#/CivicStructure'
SaleEvent:
  $ref: 'event.yaml#/Event'
ScheduleAction:
  $ref: 'planaction.yaml#/PlanAction'
ScholarlyArticle:
  $ref: 'article.yaml#/Article'
School:
  $ref: 'educationalorganization.yaml#/EducationalOrganization'
ScreeningEvent:
  description: A screening of a movie or other video.
  allOf:
    - $ref: 'event.yaml#/Event'
    - type: object
      properties:
        subtitleLanguage:
          oneOf:
            - type: string
            - $ref: 'language.yaml#/Language'
          description: >-
            Languages in which subtitles/captions are available, in <a
            href="http://tools.ietf.org/html/bcp47">IETF BCP 47 standard
            format</a>.
        workPresented:
          $ref: 'movie.yaml#/Movie'
          description: The movie presented during this event.
        videoFormat:
          type: string
          description: >-
            The type of screening or video broadcast used (e.g. IMAX, 3D, SD,
            HD, etc.).
Sculpture:
  $ref: 'creativework.yaml#/CreativeWork'
SeaBodyOfWater:
  $ref: 'bodyofwater.yaml#/BodyOfWater'
SearchAction:
  description: >
    The act of searching for an object.<br/><br/>


    Related actions:<br/><br/>


    <ul>

    <li><a class="localLink" href="http://schema.org/FindAction">FindAction</a>:
    SearchAction generally leads to a FindAction, but not necessarily.</li>

    </ul>
  allOf:
    - $ref: 'Action.yaml#/Action'
    - type: object
      properties:
        query:
          type: string
          description: A sub property of instrument. The query used on this action.
SearchResultsPage:
  $ref: 'webpage.yaml#/WebPage'
Season:
  $ref: 'creativework.yaml#/CreativeWork'
Seat:
  description: 'Used to describe a seat, such as a reserved seat in an event reservation.'
  allOf:
    - $ref: 'intangible.yaml#/Intangible'
    - type: object
      properties:
        seatingType:
          oneOf:
            - $ref: 'qualitativevalue.yaml#/QualitativeValue'
            - type: string
          description: The type/class of the seat.
        seatSection:
          type: string
          description: The section location of the reserved seat (e.g. Orchestra).
        seatNumber:
          type: string
          description: 'The location of the reserved seat (e.g., 27).'
        seatRow:
          type: string
          description: 'The row location of the reserved seat (e.g., B).'
SelfStorage:
  $ref: 'localbusiness.yaml#/LocalBusiness'
SellAction:
  description: >-
    The act of taking money from a buyer in exchange for goods or services
    rendered. An agent sells an object, product, or service to a buyer for a
    price. Reciprocal of BuyAction.
  allOf:
    - $ref: 'tradeaction.yaml#/TradeAction'
    - type: object
      properties:
        buyer:
          $ref: 'person.yaml#/Person'
          description: >-
            A sub property of participant. The participant/person/organization
            that bought the object.
        warrantyPromise:
          $ref: 'warrantypromise.yaml#/WarrantyPromise'
          description: The warranty promise(s) included in the offer.
SendAction:
  description: >
    The act of physically/electronically dispatching an object for transfer from
    an origin to a destination.Related actions:<br/><br/>


    <ul>

    <li><a class="localLink"
    href="http://schema.org/ReceiveAction">ReceiveAction</a>: The reciprocal of
    SendAction.</li>

    <li><a class="localLink" href="http://schema.org/GiveAction">GiveAction</a>:
    Unlike GiveAction, SendAction does not imply the transfer of ownership (e.g.
    I can send you my laptop, but I'm not necessarily giving it to you).</li>

    </ul>
  allOf:
    - $ref: 'transferaction.yaml#/TransferAction'
    - type: object
      properties:
        deliveryMethod:
          $ref: 'deliverymethod.yaml#/DeliveryMethod'
          description: A sub property of instrument. The method of delivery.
        recipient:
          oneOf:
            - $ref: 'organization.yaml#/Organization'
            - $ref: 'audience.yaml#/Audience'
            - $ref: 'contactpoint.yaml#/ContactPoint'
            - $ref: 'person.yaml#/Person'
          description: >-
            A sub property of participant. The participant who is at the
            receiving end of the action.
Series:
  $ref: 'intangible.yaml#/Intangible'
Service:
  description: >-
    A service provided by an organization, e.g. delivery service, print
    services, etc.
  allOf:
    - $ref: 'intangible.yaml#/Intangible'
    - type: object
      properties:
        isSimilarTo:
          oneOf:
            - $ref: 'service.yaml#/Service'
            - $ref: 'product.yaml#/Product'
          description: >-
            A pointer to another, functionally similar product (or multiple
            products).
        broker:
          oneOf:
            - $ref: 'person.yaml#/Person'
            - $ref: 'organization.yaml#/Organization'
          description: >-
            An entity that arranges for an exchange between a buyer and a
            seller.  In most cases a broker never acquires or releases ownership
            of a product or service involved in an exchange.  If it is not clear
            whether an entity is a broker, seller, or buyer, the latter two
            terms are preferred.
        isRelatedTo:
          oneOf:
            - $ref: 'product.yaml#/Product'
            - $ref: 'service.yaml#/Service'
          description: >-
            A pointer to another, somehow related product (or multiple
            products).
        serviceArea:
          oneOf:
            - $ref: 'administrativearea.yaml#/AdministrativeArea'
            - $ref: 'geoshape.yaml#/GeoShape'
            - $ref: 'place.yaml#/Place'
          description: The geographic area where the service is provided.
        provider:
          oneOf:
            - $ref: 'person.yaml#/Person'
            - $ref: 'organization.yaml#/Organization'
          description: >-
            The service provider, service operator, or service performer; the
            goods producer. Another party (a seller) may offer those services or
            goods on behalf of the provider. A provider may also serve as the
            seller.
        hasOfferCatalog:
          $ref: 'offercatalog.yaml#/OfferCatalog'
          description: >-
            Indicates an OfferCatalog listing for this Organization, Person, or
            Service.
        serviceType:
          type: string
          description: >-
            The type of service being offered, e.g. veterans' benefits,
            emergency relief, etc.
        review:
          $ref: 'review.yaml#/Review'
          description: A review of the item.
        serviceOutput:
          $ref: 'thing.yaml#/Thing'
          description: >-
            The tangible thing generated by the service, e.g. a passport,
            permit, etc.
        availableChannel:
          $ref: 'servicechannel.yaml#/ServiceChannel'
          description: >-
            A means of accessing the service (e.g. a phone bank, a web site, a
            location, etc.).
        brand:
          oneOf:
            - $ref: 'organization.yaml#/Organization'
            - $ref: 'brand.yaml#/Brand'
          description: >-
            The brand(s) associated with a product or service, or the brand(s)
            maintained by an organization or business person.
        providerMobility:
          type: string
          description: >-
            Indicates the mobility of a provided service (e.g. 'static',
            'dynamic').
        areaServed:
          oneOf:
            - type: string
            - $ref: 'place.yaml#/Place'
            - $ref: 'geoshape.yaml#/GeoShape'
            - $ref: 'administrativearea.yaml#/AdministrativeArea'
          description: The geographic area where a service or offered item is provided.
        hoursAvailable:
          $ref: 'openinghoursspecification.yaml#/OpeningHoursSpecification'
          description: The hours during which this service or contact is available.
        aggregateRating:
          $ref: 'aggregaterating.yaml#/AggregateRating'
          description: >-
            The overall rating, based on a collection of reviews or ratings, of
            the item.
        produces:
          $ref: 'thing.yaml#/Thing'
          description: >-
            The tangible thing generated by the service, e.g. a passport,
            permit, etc.
        award:
          type: string
          description: An award won by or for this item.
        termsOfService:
          oneOf:
            - $ref: 'url.yaml#/URL'
            - type: string
          description: Human-readable terms of service documentation.
        category:
          oneOf:
            - type: object
              description: >-
                Type: PhysicalActivityCategory This type is not published yet in
                schema.org.
            - type: string
            - $ref: 'thing.yaml#/Thing'
          description: >-
            A category for the item. Greater signs or slashes can be used to
            informally indicate a category hierarchy.
        audience:
          $ref: 'audience.yaml#/Audience'
          description: 'An intended audience, i.e. a group for whom something was created.'
        logo:
          oneOf:
            - $ref: 'imageobject.yaml#/ImageObject'
            - $ref: 'url.yaml#/URL'
          description: An associated logo.
        offers:
          $ref: 'offer.yaml#/Offer'
          description: >-
            An offer to provide this item&#x2014;for example, an offer to sell a
            product, rent the DVD of a movie, perform a service, or give away
            tickets to an event.
        serviceAudience:
          $ref: 'audience.yaml#/Audience'
          description: The audience eligible for this service.
ServiceChannel:
  description: >-
    A means for accessing a service, e.g. a government office location, web
    site, or phone number.
  allOf:
    - $ref: 'intangible.yaml#/Intangible'
    - type: object
      properties:
        serviceSmsNumber:
          $ref: 'contactpoint.yaml#/ContactPoint'
          description: The number to access the service by text message.
        servicePhone:
          $ref: 'contactpoint.yaml#/ContactPoint'
          description: The phone number to use to access the service.
        processingTime:
          $ref: 'duration.yaml#/Duration'
          description: Estimated processing time for the service using this channel.
        availableLanguage:
          oneOf:
            - type: string
            - $ref: 'language.yaml#/Language'
          description: >-
            A language someone may use with or at the item, service or place.
            Please use one of the language codes from the <a
            href="http://tools.ietf.org/html/bcp47">IETF BCP 47 standard</a>.
            See also <a class="localLink"
            href="http://schema.org/inLanguage">inLanguage</a>
        servicePostalAddress:
          $ref: 'postaladdress.yaml#/PostalAddress'
          description: The address for accessing the service by mail.
        serviceLocation:
          $ref: 'place.yaml#/Place'
          description: >-
            The location (e.g. civic structure, local business, etc.) where a
            person can go to access the service.
        providesService:
          $ref: 'service.yaml#/Service'
          description: The service provided by this channel.
        serviceUrl:
          $ref: 'url.yaml#/URL'
          description: The website to access the service.
ShareAction:
  $ref: 'communicateaction.yaml#/CommunicateAction'
ShoeStore:
  $ref: 'store.yaml#/Store'
ShoppingCenter:
  $ref: 'localbusiness.yaml#/LocalBusiness'
SingleFamilyResidence:
  description: 'Residence type: Single-family home.'
  allOf:
    - $ref: 'house.yaml#/House'
    - type: object
      properties:
        occupancy:
          $ref: 'quantitativevalue.yaml#/QuantitativeValue'
          description: >-
            The allowed total occupancy for the accommodation in persons
            (including infants etc). For individual accommodations, this is not
            necessarily the legal maximum but defines the permitted usage as per
            the contractual agreement (e.g. a double room used by a single
            person).

            Typical unit code(s): C62 for person
        numberOfRooms:
          oneOf:
            - $ref: 'quantitativevalue.yaml#/QuantitativeValue'
            - type: number
          description: >-
            The number of rooms (excluding bathrooms and closets) of the
            accommodation or lodging business.

            Typical unit code(s): ROM for room or C62 for no unit. The type of
            room can be put in the unitText property of the QuantitativeValue.
SiteNavigationElement:
  $ref: 'webpageelement.yaml#/WebPageElement'
SkiResort:
  $ref: 'sportsactivitylocation.yaml#/SportsActivityLocation'
SocialEvent:
  $ref: 'event.yaml#/Event'
SocialMediaPosting:
  description: >-
    A post to a social media platform, including blog posts, tweets, Facebook
    posts, etc.
  allOf:
    - $ref: 'article.yaml#/Article'
    - type: object
      properties:
        sharedContent:
          $ref: 'creativework.yaml#/CreativeWork'
          description: >-
            A CreativeWork such as an image, video, or audio clip shared as part
            of this posting.
SoftwareApplication:
  description: A software application.
  allOf:
    - $ref: 'creativework.yaml#/CreativeWork'
    - type: object
      properties:
        softwareAddOn:
          $ref: 'softwareapplication.yaml#/SoftwareApplication'
          description: Additional content for a software application.
        fileSize:
          type: string
          description: >-
            Size of the application / package (e.g. 18MB). In the absence of a
            unit (MB, KB etc.), KB will be assumed.
        processorRequirements:
          type: string
          description: Processor architecture required to run the application (e.g. IA64).
        countriesSupported:
          type: string
          description: >-
            Countries for which the application is supported. You can also
            provide the two-letter ISO 3166-1 alpha-2 country code.
        device:
          type: string
          description: >-
            Device required to run the application. Used in cases where a
            specific make/model is required to run the application.
        supportingData:
          $ref: 'datafeed.yaml#/DataFeed'
          description: Supporting data for a SoftwareApplication.
        installUrl:
          $ref: 'url.yaml#/URL'
          description: >-
            URL at which the app may be installed, if different from the URL of
            the item.
        softwareVersion:
          type: string
          description: Version of the software instance.
        permissions:
          type: string
          description: >-
            Permission(s) required to run the app (for example, a mobile app may
            require full internet access or may run only on wifi).
        applicationCategory:
          oneOf:
            - $ref: 'url.yaml#/URL'
            - type: string
          description: 'Type of software application, e.g. ''Game, Multimedia''.'
        memoryRequirements:
          oneOf:
            - type: string
            - $ref: 'url.yaml#/URL'
          description: Minimum memory requirements.
        countriesNotSupported:
          type: string
          description: >-
            Countries for which the application is not supported. You can also
            provide the two-letter ISO 3166-1 alpha-2 country code.
        softwareHelp:
          $ref: 'creativework.yaml#/CreativeWork'
          description: Software application help.
        operatingSystem:
          type: string
          description: 'Operating systems supported (Windows 7, OSX 10.6, Android 1.6).'
        applicationSuite:
          type: string
          description: >-
            The name of the application suite to which the application belongs
            (e.g. Excel belongs to Office).
        availableOnDevice:
          type: string
          description: >-
            Device required to run the application. Used in cases where a
            specific make/model is required to run the application.
        releaseNotes:
          oneOf:
            - type: string
            - $ref: 'url.yaml#/URL'
          description: Description of what changed in this version.
        downloadUrl:
          $ref: 'url.yaml#/URL'
          description: 'If the file can be downloaded, URL to download the binary.'
        featureList:
          oneOf:
            - $ref: 'url.yaml#/URL'
            - type: string
          description: >-
            Features or modules provided by this application (and possibly
            required by other applications).
        softwareRequirements:
          oneOf:
            - $ref: 'url.yaml#/URL'
            - type: string
          description: >-
            Component dependency requirements for application. This includes
            runtime environments and shared libraries that are not included in
            the application distribution package, but required to run the
            application (Examples: DirectX, Java or .NET runtime).
        screenshot:
          oneOf:
            - $ref: 'imageobject.yaml#/ImageObject'
            - $ref: 'url.yaml#/URL'
          description: A link to a screenshot image of the app.
        requirements:
          oneOf:
            - $ref: 'url.yaml#/URL'
            - type: string
          description: >-
            Component dependency requirements for application. This includes
            runtime environments and shared libraries that are not included in
            the application distribution package, but required to run the
            application (Examples: DirectX, Java or .NET runtime).
        storageRequirements:
          oneOf:
            - type: string
            - $ref: 'url.yaml#/URL'
          description: Storage requirements (free space required).
        applicationSubCategory:
          oneOf:
            - $ref: 'url.yaml#/URL'
            - type: string
          description: 'Subcategory of the application, e.g. ''Arcade Game''.'
SoftwareSourceCode:
  description: >-
    Computer programming source code. Example: Full (compile ready) solutions,
    code snippet samples, scripts, templates.
  allOf:
    - $ref: 'creativework.yaml#/CreativeWork'
    - type: object
      properties:
        sampleType:
          type: string
          description: >-
            What type of code sample: full (compile ready) solution, code
            snippet, inline code, scripts, template.
        programmingLanguage:
          oneOf:
            - $ref: 'computerlanguage.yaml#/ComputerLanguage'
            - type: string
          description: The computer programming language.
        runtime:
          type: string
          description: >-
            Runtime platform or script interpreter dependencies (Example - Java
            v1, Python2.3, .Net Framework 3.0).
        targetProduct:
          $ref: 'softwareapplication.yaml#/SoftwareApplication'
          description: >-
            Target Operating System / Product to which the code applies.  If
            applies to several versions, just the product name can be used.
        runtimePlatform:
          type: string
          description: >-
            Runtime platform or script interpreter dependencies (Example - Java
            v1, Python2.3, .Net Framework 3.0).
        codeRepository:
          $ref: 'url.yaml#/URL'
          description: >-
            Link to the repository where the un-compiled, human readable code
            and related code is located (SVN, github, CodePlex).
        codeSampleType:
          type: string
          description: >-
            What type of code sample: full (compile ready) solution, code
            snippet, inline code, scripts, template.
SomeProducts:
  description: A placeholder for multiple similar products of the same kind.
  allOf:
    - $ref: 'product.yaml#/Product'
    - type: object
      properties:
        inventoryLevel:
          $ref: 'quantitativevalue.yaml#/QuantitativeValue'
          description: The current approximate inventory level for the item or items.
Specialty:
  $ref: 'enumeration.yaml#/Enumeration'
SportingGoodsStore:
  $ref: 'store.yaml#/Store'
SportsActivityLocation:
  $ref: 'localbusiness.yaml#/LocalBusiness'
SportsClub:
  $ref: 'sportsactivitylocation.yaml#/SportsActivityLocation'
SportsEvent:
  description: 'Event type: Sports event.'
  allOf:
    - $ref: 'event.yaml#/Event'
    - type: object
      properties:
        competitor:
          oneOf:
            - $ref: 'person.yaml#/Person'
            - $ref: 'sportsteam.yaml#/SportsTeam'
          description: A competitor in a sports event.
        homeTeam:
          oneOf:
            - $ref: 'person.yaml#/Person'
            - $ref: 'sportsteam.yaml#/SportsTeam'
          description: The home team in a sports event.
        awayTeam:
          oneOf:
            - $ref: 'person.yaml#/Person'
            - $ref: 'sportsteam.yaml#/SportsTeam'
          description: The away team in a sports event.
SportsOrganization:
  description: >-
    Represents the collection of all sports organizations, including sports
    teams, governing bodies, and sports associations.
  allOf:
    - $ref: 'organization.yaml#/Organization'
    - type: object
      properties:
        sport:
          oneOf:
            - $ref: 'url.yaml#/URL'
            - type: string
          description: A type of sport (e.g. Baseball).
SportsTeam:
  description: 'Organization: Sports team.'
  allOf:
    - $ref: 'sportsorganization.yaml#/SportsOrganization'
    - type: object
      properties:
        athlete:
          $ref: 'person.yaml#/Person'
          description: >-
            A person that acts as performing member of a sports team; a player
            as opposed to a coach.
        coach:
          $ref: 'person.yaml#/Person'
          description: A person that acts in a coaching role for a sports team.
SpreadsheetDigitalDocument:
  $ref: 'digitaldocument.yaml#/DigitalDocument'
StadiumOrArena:
  description: A stadium.
State:
  $ref: 'AdministrativeArea.yaml#/AdministrativeArea'
SteeringPositionValue:
  $ref: 'qualitativevalue.yaml#/QualitativeValue'
Store:
  $ref: 'localbusiness.yaml#/LocalBusiness'
StructuredValue:
  $ref: 'intangible.yaml#/Intangible'
Submission:
  allOf:
    - $ref: 'thing.yaml#/Thing'
    - type: object
      description: A submission object.
      properties:
        creator:
          $ref: 'person.yaml#/Person'
        dateCreated:
          type: string
          description: Creation date of object
          format: date
        dateModified:
          type: string
          description: Date of last modification to object
          format: date
        reviews:
          type: array
          description: Reviews of object
          items:
            $ref: 'review.yaml#/Review'
        scholarlyArticle:
          $ref: 'scholarly_article.yaml#/ScholarlyArticle'
        status:
          type: string
          description: Status of submission
        submissionType:
          type: string
          description: |
            Type of submission
            This should be determined/generated based on the type of submission.
          enum:
            - audio
            - article
            - book
            - chapter
            - ebook
            - issue
            - journal
            - media
            - other
            - video
            - volume
SubscribeAction:
  $ref: 'interactaction.yaml#/InteractAction'
SubwayStation:
  $ref: 'civicstructure.yaml#/CivicStructure'
Suite:
  description: >-
    A suite in a hotel or other public accommodation, denotes a class of luxury
    accommodations, the key feature of which is multiple rooms (Source:
    Wikipedia, the free encyclopedia, see <a
    href="http://en.wikipedia.org/wiki/Suite_(hotel)">http://en.wikipedia.org/wiki/Suite_(hotel)</a>).

    <br /><br />

    See also the <a href="/docs/hotels.html">dedicated document on the use of
    schema.org for marking up hotels and other forms of accommodations</a>.
  allOf:
    - $ref: 'accommodation.yaml#/Accommodation'
    - type: object
      properties:
        occupancy:
          $ref: 'quantitativevalue.yaml#/QuantitativeValue'
          description: >-
            The allowed total occupancy for the accommodation in persons
            (including infants etc). For individual accommodations, this is not
            necessarily the legal maximum but defines the permitted usage as per
            the contractual agreement (e.g. a double room used by a single
            person).

            Typical unit code(s): C62 for person
        bed:
          oneOf:
            - type: string
            - $ref: 'beddetails.yaml#/BedDetails'
            - type: object
              description: 'Type: BedType This type is not published yet in schema.org.'
          description: >-
            The type of bed or beds included in the accommodation. For the
            single case of just one bed of a certain type, you use bed directly
            with a text.
                  If you want to indicate the quantity of a certain kind of bed, use an instance of BedDetails. For more detailed information, use the amenityFeature property.
        numberOfRooms:
          oneOf:
            - $ref: 'quantitativevalue.yaml#/QuantitativeValue'
            - type: number
          description: >-
            The number of rooms (excluding bathrooms and closets) of the
            accommodation or lodging business.

            Typical unit code(s): ROM for room or C62 for no unit. The type of
            room can be put in the unitText property of the QuantitativeValue.
SuspendAction:
  $ref: 'controlaction.yaml#/ControlAction'
Synagogue:
  $ref: 'placeofworship.yaml#/PlaceOfWorship'
Table:
  $ref: 'webpageelement.yaml#/WebPageElement'
TakeAction:
  $ref: 'transferaction.yaml#/TransferAction'
TattooParlor:
  $ref: 'healthandbeautybusiness.yaml#/HealthAndBeautyBusiness'
Taxi:
  $ref: 'service.yaml#/Service'
TaxiReservation:
  description: >-
    A reservation for a taxi.<br/><br/>


    Note: This type is for information about actual reservations, e.g. in
    confirmation emails or HTML pages with individual confirmations of
    reservations. For offers of tickets, use <a class="localLink"
    href="http://schema.org/Offer">Offer</a>.
  allOf:
    - $ref: 'reservation.yaml#/Reservation'
    - type: object
      properties:
        pickupTime:
          type: string
          format: date-time
          description: >-
            When a taxi will pickup a passenger or a rental car can be picked
            up.
        partySize:
          oneOf:
            - type: integer
            - $ref: 'quantitativevalue.yaml#/QuantitativeValue'
          description: Number of people the reservation should accommodate.
        pickupLocation:
          $ref: 'place.yaml#/Place'
          description: >-
            Where a taxi will pick up a passenger or a rental car can be picked
            up.
TaxiService:
  $ref: 'service.yaml#/Service'
TaxiStand:
  $ref: 'civicstructure.yaml#/CivicStructure'
TechArticle:
  description: >-
    A technical article - Example: How-to (task) topics, step-by-step,
    procedural troubleshooting, specifications, etc.
  allOf:
    - $ref: 'article.yaml#/Article'
    - type: object
      properties:
        dependencies:
          type: string
          description: Prerequisites needed to fulfill steps in article.
        proficiencyLevel:
          type: string
          description: >-
            Proficiency needed for this content; expected values: 'Beginner',
            'Expert'.
TelevisionChannel:
  $ref: 'broadcastchannel.yaml#/BroadcastChannel'
TelevisionStation:
  $ref: 'localbusiness.yaml#/LocalBusiness'
TennisComplex:
  $ref: 'sportsactivitylocation.yaml#/SportsActivityLocation'
TextDigitalDocument:
  $ref: 'digitaldocument.yaml#/DigitalDocument'
TheaterEvent:
  $ref: 'event.yaml#/Event'
TheaterGroup:
  $ref: 'performinggroup.yaml#/PerformingGroup'
Thing:
  description: The most generic type of item.
Ticket:
  description: 'Used to describe a ticket to an event, a flight, a bus ride, etc.'
  allOf:
    - $ref: 'intangible.yaml#/Intangible'
    - type: object
      properties:
        issuedBy:
          $ref: 'organization.yaml#/Organization'
          description: The organization issuing the ticket or permit.
        underName:
          oneOf:
            - $ref: 'person.yaml#/Person'
            - $ref: 'organization.yaml#/Organization'
          description: The person or organization the reservation or ticket is for.
        totalPrice:
          oneOf:
            - $ref: 'pricespecification.yaml#/PriceSpecification'
            - type: number
            - type: string
          description: >-
            The total price for the reservation or ticket, including applicable
            taxes, shipping, etc.
        ticketedSeat:
          $ref: 'seat.yaml#/Seat'
          description: The seat associated with the ticket.
        dateIssued:
          type: string
          format: date-time
          description: The date the ticket was issued.
        ticketToken:
          oneOf:
            - type: string
            - $ref: 'url.yaml#/URL'
          description: >-
            Reference to an asset (e.g., Barcode, QR code image or PDF) usable
            for entrance.
        ticketNumber:
          type: string
          description: The unique identifier for the ticket.
        priceCurrency:
          type: string
          description: >-
            The currency of the price, or a price component when attached to <a
            class="localLink"
            href="http://schema.org/PriceSpecification">PriceSpecification</a>
            and its subtypes.<br/><br/>


            Use standard formats: <a
            href="http://en.wikipedia.org/wiki/ISO_4217">ISO 4217 currency
            format</a> e.g. "USD"; <a
            href="https://en.wikipedia.org/wiki/List_of_cryptocurrencies">Ticker
            symbol</a> for cryptocurrencies e.g. "BTC"; well known names for <a
            href="https://en.wikipedia.org/wiki/Local_exchange_trading_system">Local
            Exchange Tradings Systems</a> (LETS) and other currency types e.g.
            "Ithaca HOUR".
TieAction:
  $ref: 'achieveaction.yaml#/AchieveAction'
TipAction:
  description: >-
    The act of giving money voluntarily to a beneficiary in recognition of
    services rendered.
  allOf:
    - $ref: 'tradeaction.yaml#/TradeAction'
    - type: object
      properties:
        recipient:
          oneOf:
            - $ref: 'audience.yaml#/Audience'
            - $ref: 'person.yaml#/Person'
            - $ref: 'organization.yaml#/Organization'
            - $ref: 'contactpoint.yaml#/ContactPoint'
          description: >-
            A sub property of participant. The participant who is at the
            receiving end of the action.
TireShop:
  $ref: 'store.yaml#/Store'
TouristAttraction:
  description: >-
    A tourist attraction.  In principle any Thing can be a <a class="localLink"
    href="http://schema.org/TouristAttraction">TouristAttraction</a>, from a <a
    class="localLink" href="http://schema.org/Mountain">Mountain</a> and <a
    class="localLink"
    href="http://schema.org/LandmarksOrHistoricalBuildings">LandmarksOrHistoricalBuildings</a>
    to a <a class="localLink"
    href="http://schema.org/LocalBusiness">LocalBusiness</a>.  This Type can be
    used on its own to describe a general <a class="localLink"
    href="http://schema.org/TouristAttraction">TouristAttraction</a>, or be used
    as an <a class="localLink"
    href="http://schema.org/additionalType">additionalType</a> to add tourist
    attraction properties to any other type.  (See examples below)
  allOf:
    - $ref: 'place.yaml#/Place'
    - type: object
      properties:
        availableLanguage:
          oneOf:
            - type: string
            - $ref: 'language.yaml#/Language'
          description: >-
            A language someone may use with or at the item, service or place.
            Please use one of the language codes from the <a
            href="http://tools.ietf.org/html/bcp47">IETF BCP 47 standard</a>.
            See also <a class="localLink"
            href="http://schema.org/inLanguage">inLanguage</a>
        touristType:
          oneOf:
            - type: string
            - $ref: 'audience.yaml#/Audience'
          description: >-
            Attraction suitable for type(s) of tourist. eg. Children, visitors
            from a particular country, etc.
TouristInformationCenter:
  $ref: 'localbusiness.yaml#/LocalBusiness'
ToyStore:
  $ref: 'store.yaml#/Store'
TrackAction:
  description: >
    An agent tracks an object for updates.<br/><br/>


    Related actions:<br/><br/>


    <ul>

    <li><a class="localLink"
    href="http://schema.org/FollowAction">FollowAction</a>: Unlike FollowAction,
    TrackAction refers to the interest on the location of innanimates
    objects.</li>

    <li><a class="localLink"
    href="http://schema.org/SubscribeAction">SubscribeAction</a>: Unlike
    SubscribeAction, TrackAction refers to  the interest on the location of
    innanimate objects.</li>

    </ul>
  allOf:
    - $ref: 'FindAction.yaml#/FindAction'
    - type: object
      properties:
        deliveryMethod:
          $ref: 'DeliveryMethod.yaml#/DeliveryMethod'
          description: A sub property of instrument. The method of delivery.
TradeAction:
  description: >-
    The act of participating in an exchange of goods and services for monetary
    compensation. An agent trades an object, product or service with a
    participant in exchange for a one time or periodic payment.
  allOf:
    - $ref: 'Action.yaml#/Action'
    - type: object
      properties:
        priceSpecification:
          $ref: 'PriceSpecification.yaml#/PriceSpecification'
          description: >-
            One or more detailed price specifications, indicating the unit price
            and delivery or payment charges.
        price:
          oneOf:
            - type: string
            - type: number
          description: >
            The offer price of a product, or of a price component when attached
            to PriceSpecification and its subtypes.<br/><br/>


            Usage guidelines:<br/><br/>


            <ul>

            <li>Use the <a class="localLink"
            href="http://schema.org/priceCurrency">priceCurrency</a> property
            (with standard formats: <a
            href="http://en.wikipedia.org/wiki/ISO_4217">ISO 4217 currency
            format</a> e.g. "USD"; <a
            href="https://en.wikipedia.org/wiki/List_of_cryptocurrencies">Ticker
            symbol</a> for cryptocurrencies e.g. "BTC"; well known names for <a
            href="https://en.wikipedia.org/wiki/Local_exchange_trading_system">Local
            Exchange Tradings Systems</a> (LETS) and other currency types e.g.
            "Ithaca HOUR") instead of including <a
            href="http://en.wikipedia.org/wiki/Dollar_sign#Currencies_that_use_the_dollar_or_peso_sign">ambiguous
            symbols</a> such as '$' in the value.</li>

            <li>Use '.' (Unicode 'FULL STOP' (U+002E)) rather than ',' to
            indicate a decimal point. Avoid using these symbols as a readability
            separator.</li>

            <li>Note that both <a
            href="http://www.w3.org/TR/xhtml-rdfa-primer/#using-the-content-attribute">RDFa</a>
            and Microdata syntax allow the use of a "content=" attribute for
            publishing simple machine-readable values alongside more
            human-friendly formatting.</li>

            <li>Use values from 0123456789 (Unicode 'DIGIT ZERO' (U+0030) to
            'DIGIT NINE' (U+0039)) rather than superficially similiar Unicode
            symbols.</li>

            </ul>
TrainReservation:
  $ref: 'reservation.yaml#/Reservation'
TrainStation:
  $ref: 'civicstructure.yaml#/CivicStructure'
TrainTrip:
  description: A trip on a commercial train line.
  allOf:
    - $ref: 'trip.yaml#/Trip'
    - type: object
      properties:
        trainNumber:
          type: string
          description: The unique identifier for the train.
        departureStation:
          $ref: 'trainstation.yaml#/TrainStation'
          description: The station from which the train departs.
        arrivalPlatform:
          type: string
          description: The platform where the train arrives.
        trainName:
          type: string
          description: The name of the train (e.g. The Orient Express).
        arrivalStation:
          $ref: 'trainstation.yaml#/TrainStation'
          description: The station where the train trip ends.
        departurePlatform:
          type: string
          description: The platform from which the train departs.
TransferAction:
  description: >-
    The act of transferring/moving (abstract or concrete) animate or inanimate
    objects from one place to another.
  allOf:
    - $ref: 'action.yaml#/Action'
    - type: object
      properties:
        fromLocation:
          $ref: 'place.yaml#/Place'
          description: >-
            A sub property of location. The original location of the object or
            the agent before the action.
        toLocation:
          $ref: 'place.yaml#/Place'
          description: >-
            A sub property of location. The final location of the object or the
            agent after the action.
TravelAction:
  description: >-
    The act of traveling from an fromLocation to a destination by a specified
    mode of transport, optionally with participants.
  allOf:
    - $ref: 'moveaction.yaml#/MoveAction'
    - type: object
      properties:
        distance:
          $ref: 'distance.yaml#/Distance'
          description: 'The distance travelled, e.g. exercising or travelling.'
TravelAgency:
  $ref: 'localbusiness.yaml#/LocalBusiness'
Trip:
  description: A trip or journey. An itinerary of visits to one or more places.
  allOf:
    - $ref: 'intangible.yaml#/Intangible'
    - type: object
      properties:
        itinerary:
          oneOf:
            - $ref: 'place.yaml#/Place'
            - $ref: 'itemlist.yaml#/ItemList'
          description: >-
            Destination(s) ( <a class="localLink"
            href="http://schema.org/Place">Place</a> ) that make up a trip. For
            a trip where destination order is important use <a class="localLink"
            href="http://schema.org/ItemList">ItemList</a> to specify that order
            (see examples).
        departureTime:
          type: string
          format: date-time
          description: The expected departure time.
        isPartOf:
          oneOf:
            - $ref: 'creativework.yaml#/CreativeWork'
            - $ref: 'trip.yaml#/Trip'
          description: >-
            Indicates an item or CreativeWork that this item, or CreativeWork
            (in some sense), is part of.
        provider:
          oneOf:
            - $ref: 'organization.yaml#/Organization'
            - $ref: 'person.yaml#/Person'
          description: >-
            The service provider, service operator, or service performer; the
            goods producer. Another party (a seller) may offer those services or
            goods on behalf of the provider. A provider may also serve as the
            seller.
        arrivalTime:
          type: string
          format: date-time
          description: The expected arrival time.
        hasPart:
          oneOf:
            - $ref: 'trip.yaml#/Trip'
            - $ref: 'creativework.yaml#/CreativeWork'
          description: >-
            Indicates an item or CreativeWork that is part of this item, or
            CreativeWork (in some sense).
        offers:
          $ref: 'offer.yaml#/Offer'
          description: >-
            An offer to provide this item&#x2014;for example, an offer to sell a
            product, rent the DVD of a movie, perform a service, or give away
            tickets to an event.
TVClip:
  description: A short TV program or a segment/part of a TV program.
  allOf:
    - $ref: 'clip.yaml#/Clip'
    - type: object
      properties:
        partOfTVSeries:
          $ref: 'tvseries.yaml#/TVSeries'
          description: The TV series to which this episode or season belongs.
TVEpisode:
  description: A TV episode which can be part of a series or season.
  allOf:
    - $ref: 'episode.yaml#/Episode'
    - type: object
      properties:
        subtitleLanguage:
          oneOf:
            - type: string
            - $ref: 'language.yaml#/Language'
          description: >-
            Languages in which subtitles/captions are available, in <a
            href="http://tools.ietf.org/html/bcp47">IETF BCP 47 standard
            format</a>.
        partOfTVSeries:
          $ref: 'tvseries.yaml#/TVSeries'
          description: The TV series to which this episode or season belongs.
        countryOfOrigin:
          $ref: 'country.yaml#/Country'
          description: >-
            The country of the principal offices of the production company or
            individual responsible for the movie or program.
TVSeason:
  properties:
    partOfTVSeries:
      $ref: 'tvseries.yaml#/TVSeries'
      description: The TV series to which this episode or season belongs.
    countryOfOrigin:
      $ref: 'country.yaml#/Country'
      description: >-
        The country of the principal offices of the production company or
        individual responsible for the movie or program.
TVSeries:
  properties:
    seasons:
      $ref: 'creativeworkseason.yaml#/CreativeWorkSeason'
      description: A season in a media series.
    episodes:
      $ref: 'episode.yaml#/Episode'
      description: An episode of a TV/radio series or season.
    episode:
      $ref: 'episode.yaml#/Episode'
      description: 'An episode of a tv, radio or game media within a series or season.'
    trailer:
      $ref: 'videoobject.yaml#/VideoObject'
      description: 'The trailer of a movie or tv/radio series, season, episode, etc.'
    directors:
      $ref: 'person.yaml#/Person'
      description: >-
        A director of e.g. tv, radio, movie, video games etc. content. Directors
        can be associated with individual items or with a series, episode, clip.
    containsSeason:
      $ref: 'creativeworkseason.yaml#/CreativeWorkSeason'
      description: A season that is part of the media series.
    musicBy:
      oneOf:
        - $ref: 'musicgroup.yaml#/MusicGroup'
        - $ref: 'person.yaml#/Person'
      description: The composer of the soundtrack.
    numberOfSeasons:
      type: integer
      description: The number of seasons in this series.
    actors:
      $ref: 'person.yaml#/Person'
      description: >-
        An actor, e.g. in tv, radio, movie, video games etc. Actors can be
        associated with individual items or with a series, episode, clip.
    actor:
      $ref: 'person.yaml#/Person'
      description: >-
        An actor, e.g. in tv, radio, movie, video games etc., or in an event.
        Actors can be associated with individual items or with a series,
        episode, clip.
    director:
      $ref: 'person.yaml#/Person'
      description: >-
        A director of e.g. tv, radio, movie, video gaming etc. content, or of an
        event. Directors can be associated with individual items or with a
        series, episode, clip.
    countryOfOrigin:
      $ref: 'country.yaml#/Country'
      description: >-
        The country of the principal offices of the production company or
        individual responsible for the movie or program.
    season:
      $ref: 'creativeworkseason.yaml#/CreativeWorkSeason'
      description: A season in a media series.
    productionCompany:
      $ref: 'organization.yaml#/Organization'
      description: >-
        The production company or studio responsible for the item e.g. series,
        video game, episode etc.
    numberOfEpisodes:
      type: integer
      description: The number of episodes in this season or series.
TypeAndQuantityNode:
  description: >-
    A structured value indicating the quantity, unit of measurement, and
    business function of goods included in a bundle offer.
  allOf:
    - $ref: 'structuredvalue.yaml#/StructuredValue'
    - type: object
      properties:
        businessFunction:
          $ref: 'businessfunction.yaml#/BusinessFunction'
          description: >-
            The business function (e.g. sell, lease, repair, dispose) of the
            offer or component of a bundle (TypeAndQuantityNode). The default is
            http://purl.org/goodrelations/v1#Sell.
        unitCode:
          oneOf:
            - $ref: 'url.yaml#/URL'
            - type: string
          description: >-
            The unit of measurement given using the UN/CEFACT Common Code (3
            characters) or a URL. Other codes than the UN/CEFACT Common Code may
            be used with a prefix followed by a colon.
        unitText:
          type: string
          description: >-
            A string or text indicating the unit of measurement. Useful if you
            cannot provide a standard unit code for

            <a href='unitCode'>unitCode</a>.
        amountOfThisGood:
          type: number
          description: The quantity of the goods included in the offer.
        typeOfGood:
          oneOf:
            - $ref: 'product.yaml#/Product'
            - $ref: 'service.yaml#/Service'
          description: The product that this structured value is referring to.
UnitPriceSpecification:
  description: The price asked for a given offer by the respective organization or person.
  allOf:
    - $ref: 'PriceSpecification.yaml#/PriceSpecification'
    - type: object
      properties:
        billingIncrement:
          type: number
          description: >-
            This property specifies the minimal quantity and rounding increment
            that will be the basis for the billing. The unit of measurement is
            specified by the unitCode property.
        unitCode:
          oneOf:
            - $ref: 'URL.yaml#/URL'
            - type: string
          description: >-
            The unit of measurement given using the UN/CEFACT Common Code (3
            characters) or a URL. Other codes than the UN/CEFACT Common Code may
            be used with a prefix followed by a colon.
        referenceQuantity:
          $ref: 'QuantitativeValue.yaml#/QuantitativeValue'
          description: >-
            The reference quantity for which a certain price applies, e.g. 1 EUR
            per 4 kWh of electricity. This property is a replacement for
            unitOfMeasurement for the advanced cases where the price does not
            relate to a standard unit.
        unitText:
          type: string
          description: >-
            A string or text indicating the unit of measurement. Useful if you
            cannot provide a standard unit code for

            <a href='unitCode'>unitCode</a>.
        priceType:
          type: string
          description: >-
            A short text or acronym indicating multiple price specifications for
            the same offer, e.g. SRP for the suggested retail price or INVOICE
            for the invoice price, mostly used in the car industry.
UnRegisterAction:
  $ref: 'interactaction.yaml#/InteractAction'
UpdateAction:
  description: The act of managing by changing/editing the state of the object.
  allOf:
    - $ref: 'action.yaml#/Action'
    - type: object
      properties:
        collection:
          $ref: 'thing.yaml#/Thing'
          description: A sub property of object. The collection target of the action.
        targetCollection:
          $ref: 'thing.yaml#/Thing'
          description: A sub property of object. The collection target of the action.
URL:
  type: string
UseAction:
  $ref: 'consumeaction.yaml#/ConsumeAction'
UserBlocks:
  $ref: 'userinteraction.yaml#/UserInteraction'
UserCheckins:
  $ref: 'UserInteraction.yaml#/UserInteraction'
UserComments:
  description: >-
    UserInteraction and its subtypes is an old way of talking about users
    interacting with pages. It is generally better to use <a class="localLink"
    href="http://schema.org/Action">Action</a>-based vocabulary, alongside types
    such as <a class="localLink" href="http://schema.org/Comment">Comment</a>.
  allOf:
    - $ref: 'userinteraction.yaml#/UserInteraction'
    - type: object
      properties:
        commentText:
          type: string
          description: The text of the UserComment.
        discusses:
          $ref: 'creativework.yaml#/CreativeWork'
          description: Specifies the CreativeWork associated with the UserComment.
        creator:
          oneOf:
            - $ref: 'organization.yaml#/Organization'
            - $ref: 'person.yaml#/Person'
          description: >-
            The creator/author of this CreativeWork. This is the same as the
            Author property for CreativeWork.
        replyToUrl:
          $ref: 'url.yaml#/URL'
          description: The URL at which a reply may be posted to the specified UserComment.
        commentTime:
          oneOf:
            - type: string
              format: date-time
            - type: string
              format: date
          description: The time at which the UserComment was made.
UserDownloads:
  $ref: 'UserInteraction.yaml#/UserInteraction'
UserInteraction:
  $ref: 'event.yaml#/Event'
UserLikes:
  $ref: 'userinteraction.yaml#/UserInteraction'
UserPageVisits:
  $ref: 'userinteraction.yaml#/UserInteraction'
UserPlays:
  $ref: 'userinteraction.yaml#/UserInteraction'
UserPlusOnes:
  $ref: 'userinteraction.yaml#/UserInteraction'
UserTweets:
  $ref: 'userinteraction.yaml#/UserInteraction'
Vehicle:
  description: >-
    A vehicle is a device that is designed or used to transport people or cargo
    over land, water, air, or through space.
  allOf:
    - $ref: 'product.yaml#/Product'
    - type: object
      properties:
        steeringPosition:
          $ref: 'steeringpositionvalue.yaml#/SteeringPositionValue'
          description: >-
            The position of the steering wheel or similar device (mostly for
            cars).
        tongueWeight:
          $ref: 'quantitativevalue.yaml#/QuantitativeValue'
          description: >
            The permitted vertical load (TWR) of a trailer attached to the
            vehicle. Also referred to as Tongue Load Rating (TLR) or Vertical
            Load Rating (VLR)<br/><br/>


            Typical unit code(s): KGM for kilogram, LBR for pound<br/><br/>


            <ul>

            <li>Note 1: You can indicate additional information in the <a
            class="localLink" href="http://schema.org/name">name</a> of the <a
            class="localLink"
            href="http://schema.org/QuantitativeValue">QuantitativeValue</a>
            node.</li>

            <li>Note 2: You may also link to a <a class="localLink"
            href="http://schema.org/QualitativeValue">QualitativeValue</a> node
            that provides additional information using <a class="localLink"
            href="http://schema.org/valueReference">valueReference</a>.</li>

            <li>Note 3: Note that you can use <a class="localLink"
            href="http://schema.org/minValue">minValue</a> and <a
            class="localLink" href="http://schema.org/maxValue">maxValue</a> to
            indicate ranges.</li>

            </ul>
        meetsEmissionStandard:
          oneOf:
            - type: string
            - $ref: 'url.yaml#/URL'
            - $ref: 'qualitativevalue.yaml#/QualitativeValue'
          description: Indicates that the vehicle meets the respective emission standard.
        numberOfAxles:
          oneOf:
            - $ref: 'quantitativevalue.yaml#/QuantitativeValue'
            - type: number
          description: |-
            The number of axles.<br/><br/>

            Typical unit code(s): C62
        knownVehicleDamages:
          type: string
          description: >-
            A textual description of known damages, both repaired and
            unrepaired.
        modelDate:
          type: string
          format: date
          description: >-
            The release date of a vehicle model (often used to differentiate
            versions of the same make and model).
        vehicleTransmission:
          oneOf:
            - type: string
            - $ref: 'qualitativevalue.yaml#/QualitativeValue'
            - $ref: 'url.yaml#/URL'
          description: >-
            The type of component used for transmitting the power from a
            rotating power source to the wheels or other relevant component(s)
            ("gearbox" for cars).
        vehicleInteriorColor:
          type: string
          description: The color or color combination of the interior of the vehicle.
        trailerWeight:
          $ref: 'quantitativevalue.yaml#/QuantitativeValue'
          description: >-
            The permitted weight of a trailer attached to the vehicle.<br/><br/>


            Typical unit code(s): KGM for kilogram, LBR for pound

            * Note 1: You can indicate additional information in the <a
            class="localLink" href="http://schema.org/name">name</a> of the <a
            class="localLink"
            href="http://schema.org/QuantitativeValue">QuantitativeValue</a>
            node.

            * Note 2: You may also link to a <a class="localLink"
            href="http://schema.org/QualitativeValue">QualitativeValue</a> node
            that provides additional information using <a class="localLink"
            href="http://schema.org/valueReference">valueReference</a>.

            * Note 3: Note that you can use <a class="localLink"
            href="http://schema.org/minValue">minValue</a> and <a
            class="localLink" href="http://schema.org/maxValue">maxValue</a> to
            indicate ranges.
        payload:
          $ref: 'quantitativevalue.yaml#/QuantitativeValue'
          description: >
            The permitted weight of passengers and cargo, EXCLUDING the weight
            of the empty vehicle.<br/><br/>


            Typical unit code(s): KGM for kilogram, LBR for pound<br/><br/>


            <ul>

            <li>Note 1: Many databases specify the permitted TOTAL weight
            instead, which is the sum of <a class="localLink"
            href="http://schema.org/weight">weight</a> and <a class="localLink"
            href="http://schema.org/payload">payload</a></li>

            <li>Note 2: You can indicate additional information in the <a
            class="localLink" href="http://schema.org/name">name</a> of the <a
            class="localLink"
            href="http://schema.org/QuantitativeValue">QuantitativeValue</a>
            node.</li>

            <li>Note 3: You may also link to a <a class="localLink"
            href="http://schema.org/QualitativeValue">QualitativeValue</a> node
            that provides additional information using <a class="localLink"
            href="http://schema.org/valueReference">valueReference</a>.</li>

            <li>Note 4: Note that you can use <a class="localLink"
            href="http://schema.org/minValue">minValue</a> and <a
            class="localLink" href="http://schema.org/maxValue">maxValue</a> to
            indicate ranges.</li>

            </ul>
        speed:
          $ref: 'quantitativevalue.yaml#/QuantitativeValue'
          description: >-
            The speed range of the vehicle. If the vehicle is powered by an
            engine, the upper limit of the speed range (indicated by <a
            class="localLink" href="http://schema.org/maxValue">maxValue</a>
            should be the maximum speed achievable under regular
            conditions.<br/><br/>


            Typical unit code(s): KMH for km/h, HM for mile per hour (0.447 04
            m/s), KNT for knot<br/><br/>


            *Note 1: Use <a class="localLink"
            href="http://schema.org/minValue">minValue</a> and <a
            class="localLink" href="http://schema.org/maxValue">maxValue</a> to
            indicate the range. Typically, the minimal value is zero.

            * Note 2: There are many different ways of measuring the speed
            range. You can link to information about how the given value has
            been determined using the <a class="localLink"
            href="http://schema.org/valueReference">valueReference</a> property.
        vehicleSpecialUsage:
          oneOf:
            - type: object
              description: 'Type: CarUsageType This type is not published yet in schema.org.'
            - type: string
          description: >-
            Indicates whether the vehicle has been used for special purposes,
            like commercial rental, driving school, or as a taxi. The
            legislation in many countries requires this information to be
            revealed when offering a car for sale.
        numberOfAirbags:
          oneOf:
            - type: string
            - type: number
          description: The number or type of airbags in the vehicle.
        numberOfForwardGears:
          oneOf:
            - type: number
            - $ref: 'quantitativevalue.yaml#/QuantitativeValue'
          description: >-
            The total number of forward gears available for the transmission
            system of the vehicle.<br/><br/>


            Typical unit code(s): C62
        emissionsCO2:
          type: number
          description: >-
            The CO2 emissions in g/km. When used in combination with a
            QuantitativeValue, put "g/km" into the unitText property of that
            value, since there is no UN/CEFACT Common Code for "g/km".
        fuelCapacity:
          $ref: 'quantitativevalue.yaml#/QuantitativeValue'
          description: >-
            The capacity of the fuel tank or in the case of electric cars, the
            battery. If there are multiple components for storage, this should
            indicate the total of all storage of the same type.<br/><br/>


            Typical unit code(s): LTR for liters, GLL of US gallons, GLI for UK
            / imperial gallons, AMH for ampere-hours (for electrical vehicles).
        numberOfDoors:
          oneOf:
            - $ref: 'quantitativevalue.yaml#/QuantitativeValue'
            - type: number
          description: |-
            The number of doors.<br/><br/>

            Typical unit code(s): C62
        bodyType:
          oneOf:
            - $ref: 'qualitativevalue.yaml#/QualitativeValue'
            - $ref: 'url.yaml#/URL'
            - type: string
          description: >-
            Indicates the design and body style of the vehicle (e.g. station
            wagon, hatchback, etc.).
        numberOfPreviousOwners:
          oneOf:
            - $ref: 'quantitativevalue.yaml#/QuantitativeValue'
            - type: number
          description: >-
            The number of owners of the vehicle, including the current
            one.<br/><br/>


            Typical unit code(s): C62
        driveWheelConfiguration:
          oneOf:
            - $ref: 'drivewheelconfigurationvalue.yaml#/DriveWheelConfigurationValue'
            - type: string
          description: >-
            The drive wheel configuration, i.e. which roadwheels will receive
            torque from the vehicle's engine via the drivetrain.
        cargoVolume:
          $ref: 'quantitativevalue.yaml#/QuantitativeValue'
          description: >-
            The available volume for cargo or luggage. For automobiles, this is
            usually the trunk volume.<br/><br/>


            Typical unit code(s): LTR for liters, FTQ for cubic
            foot/feet<br/><br/>


            Note: You can use <a class="localLink"
            href="http://schema.org/minValue">minValue</a> and <a
            class="localLink" href="http://schema.org/maxValue">maxValue</a> to
            indicate ranges.
        vehicleIdentificationNumber:
          type: string
          description: >-
            The Vehicle Identification Number (VIN) is a unique serial number
            used by the automotive industry to identify individual motor
            vehicles.
        vehicleInteriorType:
          type: string
          description: >-
            The type or material of the interior of the vehicle (e.g. synthetic
            fabric, leather, wood, etc.). While most interior types are
            characterized by the material used, an interior type can also be
            based on vehicle usage or target audience.
        vehicleSeatingCapacity:
          oneOf:
            - $ref: 'quantitativevalue.yaml#/QuantitativeValue'
            - type: number
          description: >-
            The number of passengers that can be seated in the vehicle, both in
            terms of the physical space available, and in terms of limitations
            set by law.<br/><br/>


            Typical unit code(s): C62 for persons.
        vehicleEngine:
          $ref: 'enginespecification.yaml#/EngineSpecification'
          description: Information about the engine or engines of the vehicle.
        purchaseDate:
          type: string
          format: date
          description: The date the item e.g. vehicle was purchased by the current owner.
        fuelConsumption:
          $ref: 'quantitativevalue.yaml#/QuantitativeValue'
          description: >
            The amount of fuel consumed for traveling a particular distance or
            temporal duration with the given vehicle (e.g. liters per 100
            km).<br/><br/>


            <ul>

            <li>Note 1: There are unfortunately no standard unit codes for
            liters per 100 km.  Use <a class="localLink"
            href="http://schema.org/unitText">unitText</a> to indicate the unit
            of measurement, e.g. L/100 km.</li>

            <li>Note 2: There are two ways of indicating the fuel consumption,
            <a class="localLink"
            href="http://schema.org/fuelConsumption">fuelConsumption</a> (e.g. 8
            liters per 100 km) and <a class="localLink"
            href="http://schema.org/fuelEfficiency">fuelEfficiency</a> (e.g. 30
            miles per gallon). They are reciprocal.</li>

            <li>Note 3: Often, the absolute value is useful only when related to
            driving speed ("at 80 km/h") or usage pattern ("city traffic"). You
            can use <a class="localLink"
            href="http://schema.org/valueReference">valueReference</a> to link
            the value for the fuel consumption to another value.</li>

            </ul>
        mileageFromOdometer:
          $ref: 'quantitativevalue.yaml#/QuantitativeValue'
          description: >-
            The total distance travelled by the particular vehicle since its
            initial production, as read from its odometer.<br/><br/>


            Typical unit code(s): KMT for kilometers, SMI for statute miles
        fuelEfficiency:
          $ref: 'quantitativevalue.yaml#/QuantitativeValue'
          description: >
            The distance traveled per unit of fuel used; most commonly miles per
            gallon (mpg) or kilometers per liter (km/L).<br/><br/>


            <ul>

            <li>Note 1: There are unfortunately no standard unit codes for miles
            per gallon or kilometers per liter. Use <a class="localLink"
            href="http://schema.org/unitText">unitText</a> to indicate the unit
            of measurement, e.g. mpg or km/L.</li>

            <li>Note 2: There are two ways of indicating the fuel consumption,
            <a class="localLink"
            href="http://schema.org/fuelConsumption">fuelConsumption</a> (e.g. 8
            liters per 100 km) and <a class="localLink"
            href="http://schema.org/fuelEfficiency">fuelEfficiency</a> (e.g. 30
            miles per gallon). They are reciprocal.</li>

            <li>Note 3: Often, the absolute value is useful only when related to
            driving speed ("at 80 km/h") or usage pattern ("city traffic"). You
            can use <a class="localLink"
            href="http://schema.org/valueReference">valueReference</a> to link
            the value for the fuel economy to another value.</li>

            </ul>
        weightTotal:
          $ref: 'quantitativevalue.yaml#/QuantitativeValue'
          description: >
            The permitted total weight of the loaded vehicle, including
            passengers and cargo and the weight of the empty vehicle.<br/><br/>


            Typical unit code(s): KGM for kilogram, LBR for pound<br/><br/>


            <ul>

            <li>Note 1: You can indicate additional information in the <a
            class="localLink" href="http://schema.org/name">name</a> of the <a
            class="localLink"
            href="http://schema.org/QuantitativeValue">QuantitativeValue</a>
            node.</li>

            <li>Note 2: You may also link to a <a class="localLink"
            href="http://schema.org/QualitativeValue">QualitativeValue</a> node
            that provides additional information using <a class="localLink"
            href="http://schema.org/valueReference">valueReference</a>.</li>

            <li>Note 3: Note that you can use <a class="localLink"
            href="http://schema.org/minValue">minValue</a> and <a
            class="localLink" href="http://schema.org/maxValue">maxValue</a> to
            indicate ranges.</li>

            </ul>
        fuelType:
          oneOf:
            - $ref: 'qualitativevalue.yaml#/QualitativeValue'
            - $ref: 'url.yaml#/URL'
            - type: string
          description: >-
            The type of fuel suitable for the engine or engines of the vehicle.
            If the vehicle has only one engine, this property can be attached
            directly to the vehicle.
        seatingCapacity:
          oneOf:
            - type: number
            - $ref: 'quantitativevalue.yaml#/QuantitativeValue'
          description: >-
            The number of persons that can be seated (e.g. in a vehicle), both
            in terms of the physical space available, and in terms of
            limitations set by law.<br/><br/>


            Typical unit code(s): C62 for persons
        wheelbase:
          $ref: 'quantitativevalue.yaml#/QuantitativeValue'
          description: >-
            The distance between the centers of the front and rear
            wheels.<br/><br/>


            Typical unit code(s): CMT for centimeters, MTR for meters, INH for
            inches, FOT for foot/feet
        dateVehicleFirstRegistered:
          type: string
          format: date
          description: >-
            The date of the first registration of the vehicle with the
            respective public authorities.
        vehicleModelDate:
          type: string
          format: date
          description: >-
            The release date of a vehicle model (often used to differentiate
            versions of the same make and model).
        vehicleConfiguration:
          type: string
          description: >-
            A short text indicating the configuration of the vehicle, e.g. '5dr
            hatchback ST 2.5 MT 225 hp' or 'limited edition'.
        accelerationTime:
          $ref: 'quantitativevalue.yaml#/QuantitativeValue'
          description: >
            The time needed to accelerate the vehicle from a given start
            velocity to a given target velocity.<br/><br/>


            Typical unit code(s): SEC for seconds<br/><br/>


            <ul>

            <li>Note: There are unfortunately no standard unit codes for
            seconds/0..100 km/h or seconds/0..60 mph. Simply use "SEC" for
            seconds and indicate the velocities in the <a class="localLink"
            href="http://schema.org/name">name</a> of the <a class="localLink"
            href="http://schema.org/QuantitativeValue">QuantitativeValue</a>, or
            use <a class="localLink"
            href="http://schema.org/valueReference">valueReference</a> with a <a
            class="localLink"
            href="http://schema.org/QuantitativeValue">QuantitativeValue</a> of
            0..60 mph or 0..100 km/h to specify the reference speeds.</li>

            </ul>
        productionDate:
          type: string
          format: date
          description: 'The date of production of the item, e.g. vehicle.'
VideoGallery:
  $ref: 'collectionpage.yaml#/CollectionPage'
VideoGame:
  properties:
    directors:
      $ref: 'person.yaml#/Person'
      description: >-
        A director of e.g. tv, radio, movie, video games etc. content. Directors
        can be associated with individual items or with a series, episode, clip.
    playMode:
      $ref: 'gameplaymode.yaml#/GamePlayMode'
      description: >-
        Indicates whether this game is multi-player, co-op or single-player. 
        The game can be marked as multi-player, co-op and single-player at the
        same time.
    gamePlatform:
      oneOf:
        - $ref: 'url.yaml#/URL'
        - $ref: 'thing.yaml#/Thing'
        - type: string
      description: >-
        The electronic systems used to play <a
        href="http://en.wikipedia.org/wiki/Category:Video_game_platforms">video
        games</a>.
    gameServer:
      $ref: 'gameserver.yaml#/GameServer'
      description: The server on which  it is possible to play the game.
    musicBy:
      oneOf:
        - $ref: 'person.yaml#/Person'
        - $ref: 'musicgroup.yaml#/MusicGroup'
      description: The composer of the soundtrack.
    actors:
      $ref: 'person.yaml#/Person'
      description: >-
        An actor, e.g. in tv, radio, movie, video games etc. Actors can be
        associated with individual items or with a series, episode, clip.
    actor:
      $ref: 'person.yaml#/Person'
      description: >-
        An actor, e.g. in tv, radio, movie, video games etc., or in an event.
        Actors can be associated with individual items or with a series,
        episode, clip.
    director:
      $ref: 'person.yaml#/Person'
      description: >-
        A director of e.g. tv, radio, movie, video gaming etc. content, or of an
        event. Directors can be associated with individual items or with a
        series, episode, clip.
    trailer:
      $ref: 'videoobject.yaml#/VideoObject'
      description: 'The trailer of a movie or tv/radio series, season, episode, etc.'
    cheatCode:
      $ref: 'creativework.yaml#/CreativeWork'
      description: Cheat codes to the game.
    gameTip:
      $ref: 'creativework.yaml#/CreativeWork'
      description: 'Links to tips, tactics, etc.'
VideoGameClip:
  $ref: 'clip.yaml#/Clip'
VideoGameSeries:
  description: A video game series.
  allOf:
    - $ref: 'CreativeWorkSeries.yaml#/CreativeWorkSeries'
    - type: object
      properties:
        seasons:
          $ref: 'CreativeWorkSeason.yaml#/CreativeWorkSeason'
          description: A season in a media series.
        episodes:
          $ref: 'Episode.yaml#/Episode'
          description: An episode of a TV/radio series or season.
        episode:
          $ref: 'Episode.yaml#/Episode'
          description: 'An episode of a tv, radio or game media within a series or season.'
        directors:
          $ref: 'Person.yaml#/Person'
          description: >-
            A director of e.g. tv, radio, movie, video games etc. content.
            Directors can be associated with individual items or with a series,
            episode, clip.
        playMode:
          $ref: 'GamePlayMode.yaml#/GamePlayMode'
          description: >-
            Indicates whether this game is multi-player, co-op or
            single-player.  The game can be marked as multi-player, co-op and
            single-player at the same time.
        gamePlatform:
          oneOf:
            - $ref: 'Thing.yaml#/Thing'
            - type: string
            - $ref: 'URL.yaml#/URL'
          description: >-
            The electronic systems used to play <a
            href="http://en.wikipedia.org/wiki/Category:Video_game_platforms">video
            games</a>.
        containsSeason:
          $ref: 'CreativeWorkSeason.yaml#/CreativeWorkSeason'
          description: A season that is part of the media series.
        musicBy:
          oneOf:
            - $ref: 'Person.yaml#/Person'
            - $ref: 'MusicGroup.yaml#/MusicGroup'
          description: The composer of the soundtrack.
        quest:
          $ref: 'Thing.yaml#/Thing'
          description: >-
            The task that a player-controlled character, or group of characters
            may complete in order to gain a reward.
        numberOfSeasons:
          type: integer
          description: The number of seasons in this series.
        actors:
          $ref: 'Person.yaml#/Person'
          description: >-
            An actor, e.g. in tv, radio, movie, video games etc. Actors can be
            associated with individual items or with a series, episode, clip.
        actor:
          $ref: 'Person.yaml#/Person'
          description: >-
            An actor, e.g. in tv, radio, movie, video games etc., or in an
            event. Actors can be associated with individual items or with a
            series, episode, clip.
        director:
          $ref: 'Person.yaml#/Person'
          description: >-
            A director of e.g. tv, radio, movie, video gaming etc. content, or
            of an event. Directors can be associated with individual items or
            with a series, episode, clip.
        gameLocation:
          oneOf:
            - $ref: 'PostalAddress.yaml#/PostalAddress'
            - $ref: 'URL.yaml#/URL'
            - $ref: 'Place.yaml#/Place'
          description: Real or fictional location of the game (or part of game).
        characterAttribute:
          $ref: 'Thing.yaml#/Thing'
          description: >-
            A piece of data that represents a particular aspect of a fictional
            character (skill, power, character points, advantage, disadvantage).
        season:
          $ref: 'CreativeWorkSeason.yaml#/CreativeWorkSeason'
          description: A season in a media series.
        trailer:
          $ref: 'VideoObject.yaml#/VideoObject'
          description: 'The trailer of a movie or tv/radio series, season, episode, etc.'
        numberOfPlayers:
          $ref: 'QuantitativeValue.yaml#/QuantitativeValue'
          description: >-
            Indicate how many people can play this game (minimum, maximum, or
            range).
        cheatCode:
          $ref: 'CreativeWork.yaml#/CreativeWork'
          description: Cheat codes to the game.
        productionCompany:
          $ref: 'Organization.yaml#/Organization'
          description: >-
            The production company or studio responsible for the item e.g.
            series, video game, episode etc.
        gameItem:
          $ref: 'Thing.yaml#/Thing'
          description: >-
            An item is an object within the game world that can be collected by
            a player or, occasionally, a non-player character.
        numberOfEpisodes:
          type: integer
          description: The number of episodes in this season or series.
VideoObject:
  description: A video file.
  allOf:
    - $ref: 'mediaobject.yaml#/MediaObject'
    - type: object
      properties:
        transcript:
          type: string
          description: >-
            If this MediaObject is an AudioObject or VideoObject, the transcript
            of that object.
        caption:
          type: string
          description: The caption for this object.
        directors:
          $ref: 'person.yaml#/Person'
          description: >-
            A director of e.g. tv, radio, movie, video games etc. content.
            Directors can be associated with individual items or with a series,
            episode, clip.
        thumbnail:
          $ref: 'imageobject.yaml#/ImageObject'
          description: Thumbnail image for an image or video.
        musicBy:
          oneOf:
            - $ref: 'person.yaml#/Person'
            - $ref: 'musicgroup.yaml#/MusicGroup'
          description: The composer of the soundtrack.
        actors:
          $ref: 'person.yaml#/Person'
          description: >-
            An actor, e.g. in tv, radio, movie, video games etc. Actors can be
            associated with individual items or with a series, episode, clip.
        actor:
          $ref: 'person.yaml#/Person'
          description: >-
            An actor, e.g. in tv, radio, movie, video games etc., or in an
            event. Actors can be associated with individual items or with a
            series, episode, clip.
        director:
          $ref: 'person.yaml#/Person'
          description: >-
            A director of e.g. tv, radio, movie, video gaming etc. content, or
            of an event. Directors can be associated with individual items or
            with a series, episode, clip.
        videoQuality:
          type: string
          description: The quality of the video.
        videoFrameSize:
          type: string
          description: The frame size of the video.
ViewAction:
  $ref: 'consumeaction.yaml#/ConsumeAction'
VisualArtsEvent:
  $ref: 'event.yaml#/Event'
VisualArtwork:
  description: A work of art that is primarily visual in character.
  allOf:
    - $ref: 'creativework.yaml#/CreativeWork'
    - type: object
      properties:
        letterer:
          $ref: 'person.yaml#/Person'
          description: >-
            The individual who adds lettering, including speech balloons and
            sound effects, to artwork.
        surface:
          oneOf:
            - type: string
            - $ref: 'url.yaml#/URL'
          description: >-
            A material used as a surface in some artwork, e.g. Canvas, Paper,
            Wood, Board, etc.
        penciler:
          $ref: 'person.yaml#/Person'
          description: The individual who draws the primary narrative artwork.
        width:
          oneOf:
            - $ref: 'distance.yaml#/Distance'
            - $ref: 'quantitativevalue.yaml#/QuantitativeValue'
          description: The width of the item.
        artist:
          $ref: 'person.yaml#/Person'
          description: |-
            The primary artist for a work
                in a medium other than pencils or digital line art--for example, if the
                primary artwork is done in watercolors or digital paints.
        height:
          oneOf:
            - $ref: 'quantitativevalue.yaml#/QuantitativeValue'
            - $ref: 'distance.yaml#/Distance'
          description: The height of the item.
        depth:
          oneOf:
            - $ref: 'distance.yaml#/Distance'
            - $ref: 'quantitativevalue.yaml#/QuantitativeValue'
          description: The depth of the item.
        artEdition:
          oneOf:
            - type: integer
            - type: string
          description: >-
            The number of copies when multiple copies of a piece of artwork are
            produced - e.g. for a limited edition of 20 prints, 'artEdition'
            refers to the total number of copies (in this example "20").
        artform:
          oneOf:
            - $ref: 'url.yaml#/URL'
            - type: string
          description: >-
            e.g. Painting, Drawing, Sculpture, Print, Photograph, Assemblage,
            Collage, etc.
        artMedium:
          oneOf:
            - $ref: 'url.yaml#/URL'
            - type: string
          description: >-
            The material used. (e.g. Oil, Watercolour, Acrylic, Linoprint,
            Marble, Cyanotype, Digital, Lithograph, DryPoint, Intaglio, Pastel,
            Woodcut, Pencil, Mixed Media, etc.)
        inker:
          $ref: 'person.yaml#/Person'
          description: >-
            The individual who traces over the pencil drawings in ink after
            pencils are complete.
        colorist:
          $ref: 'person.yaml#/Person'
          description: The individual who adds color to inked drawings.
        artworkSurface:
          oneOf:
            - $ref: 'url.yaml#/URL'
            - type: string
          description: >-
            The supporting materials for the artwork, e.g. Canvas, Paper, Wood,
            Board, etc.
Volcano:
  $ref: 'landform.yaml#/Landform'
VoteAction:
  description: >-
    The act of expressing a preference from a fixed/finite/structured set of
    choices/options.
  allOf:
    - $ref: 'chooseaction.yaml#/ChooseAction'
    - type: object
      properties:
        candidate:
          $ref: 'person.yaml#/Person'
          description: A sub property of object. The candidate subject of this action.
WantAction:
  $ref: 'reactaction.yaml#/ReactAction'
WarrantyPromise:
  description: >-
    A structured value representing the duration and scope of services that will
    be provided to a customer free of charge in case of a defect or malfunction
    of a product.
  allOf:
    - $ref: 'structuredvalue.yaml#/StructuredValue'
    - type: object
      properties:
        warrantyScope:
          $ref: 'warrantyscope.yaml#/WarrantyScope'
          description: The scope of the warranty promise.
        durationOfWarranty:
          $ref: 'quantitativevalue.yaml#/QuantitativeValue'
          description: >-
            The duration of the warranty promise. Common unitCode values are ANN
            for year, MON for months, or DAY for days.
WarrantyScope:
  $ref: 'enumeration.yaml#/Enumeration'
WatchAction:
  $ref: 'consumeaction.yaml#/ConsumeAction'
Waterfall:
  $ref: 'bodyofwater.yaml#/BodyOfWater'
WearAction:
  $ref: 'UseAction.yaml#/UseAction'
WebApplication:
  description: Web applications.
  allOf:
    - $ref: 'softwareapplication.yaml#/SoftwareApplication'
    - type: object
      properties:
        browserRequirements:
          type: string
          description: >-
            Specifies browser requirements in human-readable text. For example,
            'requires HTML5 support'.
WebPage:
  description: >-
    A web page. Every web page is implicitly assumed to be declared to be of
    type WebPage, so the various properties about that webpage, such as
    <code>breadcrumb</code> may be used. We recommend explicit declaration if
    these properties are specified, but if they are found outside of an
    itemscope, they will be assumed to be about the page.
  allOf:
    - $ref: 'creativework.yaml#/CreativeWork'
    - type: object
      properties:
        mainContentOfPage:
          $ref: 'webpageelement.yaml#/WebPageElement'
          description: Indicates if this web page element is the main subject of the page.
        reviewedBy:
          oneOf:
            - $ref: 'organization.yaml#/Organization'
            - $ref: 'person.yaml#/Person'
          description: >-
            People or organizations that have reviewed the content on this web
            page for accuracy and/or completeness.
        significantLink:
          $ref: 'url.yaml#/URL'
          description: >-
            One of the more significant URLs on the page. Typically, these are
            the non-navigation links that are clicked on the most.
        breadcrumb:
          oneOf:
            - $ref: 'breadcrumblist.yaml#/BreadcrumbList'
            - type: string
          description: >-
            A set of links that can help a user understand and navigate a
            website hierarchy.
        speakable:
          oneOf:
            - type: object
              description: >-
                Type: SpeakableSpecification This type is not published yet in
                schema.org.
            - $ref: 'url.yaml#/URL'
          description: >-
            Indicates sections of a Web page that are particularly 'speakable'
            in the sense of being highlighted as being especially appropriate
            for text-to-speech conversion. Other sections of a page may also be
            usefully spoken in particular circumstances; the 'speakable'
            property serves to indicate the parts most likely to be generally
            useful for speech.<br/><br/>


            The <em>speakable</em> property can be repeated an arbitrary number
            of times, with three kinds of possible 'content-locator'
            values:<br/><br/>


            1.) <em>id-value</em> URL references - uses <em>id-value</em> of an
            element in the page being annotated. The simplest use of
            <em>speakable</em> has (potentially relative) URL values,
            referencing identified sections of the document concerned.<br/><br/>


            2.) CSS Selectors - addresses content in the annotated page, eg. via
            class attribute. Use the <a class="localLink"
            href="http://schema.org/cssSelector">cssSelector</a>
            property.<br/><br/>


            3.)  XPaths - addresses content via XPaths (assuming an XML view of
            the content). Use the <a class="localLink"
            href="http://schema.org/xpath">xpath</a> property.<br/><br/>


            For more sophisticated markup of speakable sections beyond simple ID
            references, either CSS selectors or XPath expressions to pick out
            document section(s) as speakable. For this

            we define a supporting type, <a class="localLink"
            href="http://schema.org/SpeakableSpecification">SpeakableSpecification</a> 
            which is defined to be a possible value of the <em>speakable</em>
            property.
        significantLinks:
          $ref: 'url.yaml#/URL'
          description: >-
            The most significant URLs on the page. Typically, these are the
            non-navigation links that are clicked on the most.
        specialty:
          $ref: 'specialty.yaml#/Specialty'
          description: >-
            One of the domain specialities to which this web page's content
            applies.
        relatedLink:
          $ref: 'url.yaml#/URL'
          description: >-
            A link related to this web page, for example to other related web
            pages.
        primaryImageOfPage:
          $ref: 'imageobject.yaml#/ImageObject'
          description: Indicates the main image on the page.
        lastReviewed:
          type: string
          format: date
          description: >-
            Date on which the content on this web page was last reviewed for
            accuracy and/or completeness.
WebPageElement:
  description: 'A web page element, like a table or an image.'
  allOf:
    - $ref: 'creativework.yaml#/CreativeWork'
    - type: object
      properties:
        cssSelector:
          type: object
          description: >-
            A CSS selector, e.g. of a <a class="localLink"
            href="http://schema.org/SpeakableSpecification">SpeakableSpecification</a>
            or <a class="localLink"
            href="http://schema.org/WebPageElement">WebPageElement</a>. In the
            latter case, multiple matches within a page can constitute a single
            conceptual "Web page element".
        xpath:
          type: object
          description: >-
            An XPath, e.g. of a <a class="localLink"
            href="http://schema.org/SpeakableSpecification">SpeakableSpecification</a>
            or <a class="localLink"
            href="http://schema.org/WebPageElement">WebPageElement</a>. In the
            latter case, multiple matches within a page can constitute a single
            conceptual "Web page element".
WebSite:
  description: >-
    A WebSite is a set of related web pages and other items typically served
    from a single web domain and accessible via URLs.
  allOf:
    - $ref: 'creativework.yaml#/CreativeWork'
    - type: object
      properties:
        issn:
          type: string
          description: >-
            The International Standard Serial Number (ISSN) that identifies this
            serial publication. You can repeat this property to identify
            different formats of, or the linking ISSN (ISSN-L) for, this serial
            publication.
WholesaleStore:
  $ref: 'store.yaml#/Store'
WinAction:
  description: The act of achieving victory in a competitive activity.
  allOf:
    - $ref: 'achieveaction.yaml#/AchieveAction'
    - type: object
      properties:
        loser:
          $ref: 'person.yaml#/Person'
          description: A sub property of participant. The loser of the action.
Winery:
  $ref: 'FoodEstablishment.yaml#/FoodEstablishment'
WPAdBlock:
  $ref: 'WebPageElement.yaml#/WebPageElement'
WPFooter:
  $ref: 'webpageelement.yaml#/WebPageElement'
WPHeader:
  $ref: 'webpageelement.yaml#/WebPageElement'
WPSideBar:
  $ref: 'webpageelement.yaml#/WebPageElement'
WriteAction:
  description: The act of authoring written creative content.
  allOf:
    - $ref: 'createaction.yaml#/CreateAction'
    - type: object
      properties:
        language:
          $ref: 'language.yaml#/Language'
          description: A sub property of instrument. The language used on this action.
        inLanguage:
          oneOf:
            - $ref: 'language.yaml#/Language'
            - type: string
          description: >-
            The language of the content or performance or used in an action.
            Please use one of the language codes from the <a
            href="http://tools.ietf.org/html/bcp47">IETF BCP 47 standard</a>.
            See also <a class="localLink"
            href="http://schema.org/availableLanguage">availableLanguage</a>.
Zoo:
  $ref: 'civicstructure.yaml#/CivicStructure'
