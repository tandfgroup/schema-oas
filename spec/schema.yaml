# this file is auto-generated. do not change.
Action:
  allOf:
    - $ref: 'thing.yaml#/Thing'
    - type: object
      description: An action performed by a direct agent and indirect participants upon a direct object. Optionally happens at a location with the help of an inanimate instrument. The execution of the action may produce a result. Specific action sub-type documentation specifies the exact expectation of each argument/role.
      properties:
        actionStatus: # Indicates the current disposition of the Action.
          $ref: 'action_status_type.yaml#/ActionStatusType'
        agent: # The direct performer or driver of the action (animate or inanimate).
          $ref: 'person.yaml#/Person'
ActionStatusType:
  allOf:
    - $ref: 'enumeration.yaml#/Enumeration'
    - type: object
      description: The status of an Action.
AggregateRating:
  type: object
  description: The average rating based on multiple ratings or reviews.
  properties:
    itemReviewed:
      type: integer
      description: The item that is being reviewed/rated.
    ratingCount:
      type: integer
      description: The count of total number of ratings.
    reviewCount:
      type: integer
      description: The count of total number of reviews.
Article:
  allOf:
    - $ref: 'creative_work.yaml#/CreativeWork'
    - type: object
      description: An article, such as a news article or piece of investigative report. Newspapers and magazines have articles of many different types and this is intended to cover them all.
      properties:
        articleBody:
          type: string
          description: The actual body of the article.
        articleSection:
          type: string
          description: Articles may belong to one or more 'sections' in a magazine or newspaper, such as Sports, Lifestyle, etc.
ContactPoint:
  allOf:
    - $ref: 'structured_value.yaml#/StructuredValue'
    - type: object
      description: A contact point—for example, a Customer Complaints department.
      properties:
        contactType:
          type: string
          description: A person or organization can have different contact points, for different purposes. For example, a sales contact point, a PR contact point and so on. This property is used to specify the kind of contact point.
        email:
          type: string
          description: Email address.
        faxNumber:
          type: string
          description: The fax number.
        telephone:
          type: string
          description: The telephone number.
CreativeWork:
  allOf:
    - $ref: 'thing.yaml#/Thing'
    - type: object
      description: The most generic kind of creative work, including books, movies, photographs, software programs, etc.
      properties:
        accessMode:
          type: string
          description: The human sensory perceptual system or cognitive faculty through which a person may process or perceive information. Expected values include; auditory, tactile, textual, visual, colorDependent, chartOnVisual, chemOnVisual, diagramOnVisual, mathOnVisual, musicOnVisual, textOnVisual.
        accessModeSufficient:
          type: string
          description: A list of single or combined accessModes that are sufficient to understand all the intellectual content of a resource. Expected values include; auditory, tactile, textual, visual.
        accessibilityAPI:
          type: string
          description: Indicates that the resource is compatible with the referenced accessibility API (WebSchemas wiki lists possible values).
        accessibilityControl:
          type: string
          description: Identifies input methods that are sufficient to fully control the described resource (WebSchemas wiki lists possible values).
        accessibilityFeature:
          type: string
          description: Content features of the resource, such as accessible media, alternatives and supported enhancements for accessibility (WebSchemas wiki lists possible values).
        accessibilityHazard:
          type: string
          description: A characteristic of the described resource that is physiologically dangerous to some users. Related to WCAG 2.0 guideline 2.3 (WebSchemas wiki lists possible values).
        accessibilitySummary:
          type: string
          description: A human-readable summary of specific accessibility features or deficiencies, consistent with the other accessibility metadata but expressing subtleties such as "short descriptions are present but long descriptions will be needed for non-visual users" or "short descriptions are present and no long descriptions are needed."
        accountablePerson:
          $ref: 'person.yaml#/Person'
          description: Specifies the Person that is legally accountable for the CreativeWork.
        aggregateRating:
          $ref: 'aggregate_rating.yaml#/AggregateRating'
          description: The overall rating, based on a collection of reviews or ratings, of the item.
        alternativeHeadline:
          type: string
          description: A secondary title of the CreativeWork.
        associatedMedia:
          $ref: 'media_object.yaml#/MediaObject'
          description: A media object that encodes this CreativeWork. This property is a synonym for encoding.
        audience:
          $ref: 'audience.yaml#/Audience'
          description: An intended audience, i.e. a group for whom something was created. Supersedes serviceAudience.
        audio:
          $ref: 'audio_object.yaml#/AudioObject'
          description: An embedded audio object.
        author:
          oneOf:
            - $ref: 'organization.yaml#/Organization'
            - $ref: 'person.yaml#/Person'
          description: The author of this content or rating. Please note that author is special in that HTML 5 provides a special mechanism for indicating authorship via the rel tag. That is equivalent to this and may be used interchangeably.
        award:
          type: string
          description: An award won by or for this item. Supersedes awards.
        character:
          $ref: 'person.yaml#/Person'
          description: Fictional person connected with a creative work.
        citation:
          oneOf:
            - type: string
            - $ref: 'creative_work.yaml#/CreativeWork'
          description: A citation or reference to another creative work, such as another publication, web page, scholarly article, etc.
        comment:
          $ref: 'comment.yaml#/Comment'
          description: Comments, typically from users.
        commentCount:
          type: integer
          description: The number of comments this CreativeWork (e.g. Article, Question or Answer) has received. This is most applicable to works published in Web sites with commenting system; additional comments may exist elsewhere.
        contentLocation:
          $ref: 'place.yaml#/Place'
          description: The location depicted or described in the content. For example, the location in a photograph or painting.
        contentRating:
          oneOf:
            - type: string
            - $ref: 'rating.yaml#/Rating'
          description: Official rating of a piece of content—for example,'MPAA PG-13'.
        contentReferenceTime:
          $ref: 'date_time.yaml#/DateTime'
          description: The specific time described by a creative work, for works (e.g. articles, video objects etc.) that emphasise a particular moment within an Event.
        contributor:
          oneOf:
            - $ref: 'organization.yaml#/Organization'
            - $ref: 'person.yaml#/Person'
          description: A secondary contributor to the CreativeWork or Event.
        copyrightHolder:
          oneOf:
            - $ref: 'organization.yaml#/Organization'
            - $ref: 'person.yaml#/Person'
          description: The party holding the legal copyright to the CreativeWork.
        copyrightYear:
          type: number
          description: The year during which the claimed copyright for the CreativeWork was first asserted.
        correction:
          oneOf:
            - type: string
            - $ref: 'correction_comment.yaml#/CorrectionComment'
          description: Indicates a correction to a CreativeWork, either via a CorrectionComment, textually or in another document.
        creator:
          oneOf:
            - $ref: 'organization.yaml#/Organization'
            - $ref: 'person.yaml#/Person'
          description: The creator/author of this CreativeWork. This is the same as the Author property for CreativeWork.
        dateCreated:
          oneOf:
            - type: string
            - $ref: 'date.yaml#/Date'
            - $ref: 'date_time.yaml#/DateTime'
          description: The date on which the CreativeWork was created or the item was added to a DataFeed.
        dateModified:
          oneOf:
            - type: string
            - $ref: 'date.yaml#/Date'
            - $ref: 'date_time.yaml#/DateTime'
          description: The date on which the CreativeWork was most recently modified or when the item's entry was modified within a DataFeed.
        datePublished:
          oneOf:
            - type: string
            - $ref: 'date.yaml#/Date'
          description: Date of first broadcast/publication.
        discussionUrl:
          type: string
          description: A link to the page containing the comments of the CreativeWork.
        editor:
          $ref: 'person.yaml#/Person'
          description: Specifies the Person who edited the CreativeWork.
        educationalAlignment:
          $ref: 'alignment_object.yaml#/AlignmentObject'
          description: An alignment to an established educational framework.
        educationalUse:
          type: string
          description: The purpose of a work in the context of education; for example, 'assignment', 'group work'.
        encoding:
          $ref: 'media_object.yaml#/MediaObject'
          description: A media object that encodes this CreativeWork. This property is a synonym for associatedMedia. Supersedes encodings.
        encodingFormat:
          type: string
          description: Media type typically expressed using a MIME format (see IANA site and MDN reference) e.g. application/zip for a SoftwareApplication binary, audio/mpeg for .mp3 etc.). In cases where a CreativeWork has several media type representations, encoding can be used to indicate each MediaObject alongside particular encodingFormat information. Unregistered or niche encoding and file formats can be indicated instead via the most appropriate URL, e.g. defining Web page or a Wikipedia/Wikidata entry. Supersedes fileFormat.
        exampleOfWork:
          $ref: 'creative_work.yaml#/CreativeWork'
          description: A creative work that this work is an example/instance/realization/derivation of. Inverse property; workExample.
        expires:
          $ref: 'date.yaml#/Date'
          description: Date the content expires and is no longer useful or available. For example a VideoObject or NewsArticle whose availability or relevance is time-limited, or a ClaimReview fact check whose publisher wants to indicate that it may no longer be relevant (or helpful to highlight) after some date.
        funder:
          oneOf:
            - $ref: 'organization.yaml#/Organization'
            - $ref: 'person.yaml#/Person'
          description: A person or organization that supports (sponsors) something through some kind of financial contribution.
        genre:
          type: string
          description: Genre of the creative work, broadcast channel or group.
        hasPart:
          oneOf:
            - $ref: 'creative_work.yaml#/CreativeWork'
            - $ref: 'trip.yaml#/Trip'
          description: Indicates an item or CreativeWork that is part of this item, or CreativeWork (in some sense). Inverse property; isPartOf.
        headline:
          type: string
          description: Headline of the article.
        inLanguage:
          oneOf:
            - type: string
            - $ref: 'language.yaml#/Language'
          description: The language of the content or performance or used in an action. Please use one of the language codes from the IETF BCP 47 standard. See also availableLanguage. Supersedes language.
        interactionStatistic:
          $ref: 'interaction_counter.yaml#/InteractionCounter'
          description: The number of interactions for the CreativeWork using the WebSite or SoftwareApplication. The most specific child type of InteractionCounter should be used. Supersedes interactionCount.
        interactivityType:
          type: string
          description: The predominant mode of learning supported by the learning resource. Acceptable values are 'active', 'expositive', or 'mixed'.
        isAccessibleForFree:
          type: boolean
          description: A flag to signal that the item, event, or place is accessible for free. Supersedes free.
        isBasedOn:
          oneOf:
            - type: string
            - $ref: 'creative_work.yaml#/CreativeWork'
            - $ref: 'product.yaml#/Product'
          description: A resource that was used in the creation of this resource. This term can be repeated for multiple sources. For example, http://example.com/great-multiplication-intro.html. Supersedes isBasedOnUrl.
        isFamilyFriendly:
          type: boolean
          description: Indicates whether this content is family friendly.
        isPartOf:
          oneOf:
            - $ref: 'creative_work.yaml#/CreativeWork'
            - $ref: 'trip.yaml#/Trip'
          description: Indicates an item or CreativeWork that this item, or CreativeWork (in some sense), is part of. Inverse property; hasPart.
        keywords:
          type: string
          description: Keywords or tags used to describe this content. Multiple entries in a keywords list are typically delimited by commas.
        learningResourceType:
          type: string
          description: The predominant type or kind characterizing the learning resource. For example, 'presentation', 'handout'.
        license:
          oneOf:
            - type: string
            - $ref: 'creative_work.yaml#/CreativeWork'
          description: A license document that applies to this content, typically indicated by URL.
        locationCreated:
          $ref: 'place.yaml#/Place'
          description: The location where the CreativeWork was created, which may not be the same as the location depicted in the CreativeWork.
        mainEntity:
          $ref: 'thing.yaml#/Thing'
          description: Indicates the primary entity described in some page or other CreativeWork. Inverse property; mainEntityOfPage.
        material:
          oneOf:
            - type: string
            - $ref: 'product.yaml#/Product'
          description: A material that something is made from, e.g. leather, wool, cotton, paper.
        mentions:
          $ref: 'thing.yaml#/Thing'
          description: Indicates that the CreativeWork contains a reference to, but is not necessarily about a concept.
        offers:
          $ref: 'offer.yaml#/Offer'
          description: An offer to provide this item—for example, an offer to sell a product, rent the DVD of a movie, perform a service, or give away tickets to an event.
        position:
          oneOf:
            - type: string
            - type: integer
          description: The position of an item in a series or sequence of items.
        producer:
          oneOf:
            - $ref: 'organization.yaml#/Organization'
            - $ref: 'person.yaml#/Person'
          description: The person or organization who produced the work (e.g. music album, movie, tv/radio series etc.).
        provider:
          oneOf:
            - $ref: 'organization.yaml#/Organization'
            - $ref: 'person.yaml#/Person'
          description: The service provider, service operator, or service performer; the goods producer. Another party (a seller) may offer those services or goods on behalf of the provider. A provider may also serve as the seller. Supersedes carrier.
        publication:
          $ref: 'publication_event.yaml#/PublicationEvent'
          description: A publication event associated with the item.
        publisher:
          oneOf:
            - $ref: 'organization.yaml#/Organization'
            - $ref: 'person.yaml#/Person'
          description: The publisher of the creative work.
        publisherImprint:
          $ref: 'organization.yaml#/Organization'
          description: The publishing division which published the comic.
        publishingPrinciples:
          oneOf:
            - type: string
            - $ref: 'creative_work.yaml#/CreativeWork'
          description: The publishingPrinciples property indicates (typically via URL) a document describing the editorial principles of an Organization (or individual e.g. a Person writing a blog) that relate to their activities as a publisher, e.g. ethics or diversity policies. When applied to a CreativeWork (e.g. NewsArticle) the principles are those of the party primarily responsible for the creation of the CreativeWork. While such policies are most typically expressed in natural language, sometimes related information (e.g. indicating a funder) can be expressed using schema.org terminology.
        recordedAt:
          $ref: 'event.yaml#/Event'
          description: The Event where the CreativeWork was recorded. The CreativeWork may capture all or part of the event. Inverse property; recordedIn.
        releasedEvent:
          $ref: 'publication_event.yaml#/PublicationEvent'
          description: The place and time the release was issued, expressed as a PublicationEvent.
        review:
          $ref: 'review.yaml#/Review'
          description: A review of the item. Supersedes reviews.
        schemaVersion:
          type: string
          description: Indicates (by URL or string) a particular version of a schema used in some CreativeWork. For example, a document could declare a schemaVersion using an URL such as http://schema.org/version/2.0/ if precise indication of schema version was required by some application.
        sdDatePublished:
          $ref: 'date.yaml#/Date'
          description: Indicates the date on which the current structured data was generated / published. Typically used alongside sdPublisher
        sdLicense:
          oneOf:
            - type: string
            - $ref: 'creative_work.yaml#/CreativeWork'
          description: A license document that applies to this structured data, typically indicated by URL.
        sdPublisher:
          oneOf:
            - $ref: 'organization.yaml#/Organization'
            - $ref: 'person.yaml#/Person'
          description: Indicates the party responsible for generating and publishing the current structured data markup, typically in cases where the structured data is derived automatically from existing published content but published on a different site. For example, student projects and open data initiatives often re-publish existing content with more explicitly structured metadata. The sdPublisher property helps make such practices more explicit.
        sourceOrganization:
          $ref: 'organization.yaml#/Organization'
          description: The Organization on whose behalf the creator was working.
        spatialCoverage:
          $ref: 'place.yaml#/Place'
          description: The spatialCoverage of a CreativeWork indicates the place(s) which are the focus of the content. It is a subproperty of contentLocation intended primarily for more technical and detailed materials. For example with a Dataset, it indicates areas that the dataset describes; a dataset of New York weather would have spatialCoverage which was the place; the state of New York. Supersedes spatial.
        sponsor:
          oneOf:
            - type: string
            - $ref: 'organization.yaml#/Organization'
            - $ref: 'person.yaml#/Person'
          description: A person or organization that supports a thing through a pledge, promise, or financial contribution. e.g. a sponsor of a Medical Study or a corporate sponsor of an event.
        temporalCoverage:
          oneOf:
            - type: string
            - $ref: 'date_time.yaml#/DateTime'
          description: The temporalCoverage of a CreativeWork indicates the period that the content applies to, i.e. that it describes, either as a DateTime or as a textual string indicating a time period in ISO 8601 time interval format. In the case of a Dataset it will typically indicate the relevant time period in a precise notation (e.g. for a 2011 census dataset, the year 2011 would be written "2011/2012"). Other forms of content e.g. ScholarlyArticle, Book, TVSeries or TVEpisode may indicate their temporalCoverage in broader terms - textually or via well-known URL. Written works such as books may sometimes have precise temporal coverage too, e.g. a work set in 1939 - 1945 can be indicated in ISO 8601 interval format format via "1939/1945". Supersedes datasetTimeInterval, temporal.
        text:
          type: string
          description: The textual content of this CreativeWork.
        thumbnailUrl:
          type: string
          description: A thumbnail image relevant to the Thing.
        timeRequired:
          $ref: 'duration.yaml#/Duration'
          description: Approximate or typical time it takes to work with or through this learning resource for the typical intended target audience, e.g. 'P30M', 'P1H25M'.
        translationOfWork:
          $ref: 'creative_work.yaml#/CreativeWork'
          description: The work that this work has been translated from. e.g. 物种起源 is a translationOf “On the Origin of Species” Inverse property; workTranslation.
        translator:
          oneOf:
            - $ref: 'organization.yaml#/Organization'
            - $ref: 'person.yaml#/Person'
          description: Organization or person who adapts a creative work to different languages, regional differences and technical requirements of a target market, or that translates during some event.
        typicalAgeRange:
          type: string
          description: The typical expected age range, e.g. '7-9', '11-'.
        version:
          oneOf:
            - type: string
            - type: number
          description: The version of the CreativeWork embodied by a specified resource.
        video:
          $ref: 'video_object.yaml#/VideoObject'
          description: An embedded video object.
        workExample:
          $ref: 'creative_work.yaml#/CreativeWork'
          description: Example/instance/realization/derivation of the concept of this creative work. eg. The paperback edition, first edition, or eBook. Inverse property; exampleOfWork.
        workTranslation:
          $ref: 'creative_work.yaml#/CreativeWork'
          description: A work that is a translation of the content of this work. e.g. 西遊記 has an English workTranslation "Journey to the West",a German workTranslation "Monkeys Pilgerfahrt" and a Vietnamese translation Tây du ký bình khảo. Inverse property; translationOfWork.
Distance:
  allOf:
    - $ref: 'quantity.yaml#/Quantity'
    - type: object
      description: Properties that take Distances as values are of the form '<Number> <Length unit of measure>'. E.g., '7 ft'.
Duration:
  allOf:
    - $ref: 'quantity.yaml#/Quantity'
    - type: object
      description: Quantity; Duration (use ISO 8601 duration format).
Enumeration:
  allOf:
    - $ref: 'intangible.yaml#/Intangible'
    - type: object
      description: Lists or enumerations—for example, a list of cuisines or music genres, etc.
Error:
  allOf:
    - $ref: 'thing.yaml#/Thing'
    - type: object
      description: For failed actions, more information on the cause of the failure.
ImageObject:
  allOf:
    - $ref: 'media_object.yaml#/MediaObject'
    - type: object
      description: An image file.
      properties:
        caption:
          type: string
          description: The caption for this object.
        exifData:
          oneOf:
            - type: string
            - $ref: 'property_value.yaml#/PropertyValue'
          description: exif data for this object.
        representativeOfPage:
          type: boolean
          description: Indicates whether this image is representative of the content of the page.
        thumbnail:
          $ref: 'image_object.yaml#/ImageObject'
          description: Thumbnail image for an image or video.
Intangible:
  allOf:
    - $ref: 'thing.yaml#/Thing'
    - type: object
      description: A utility class that serves as the umbrella for a number of 'intangible' things such as quantities, structured values, etc.
MediaObject:
  allOf:
    - $ref: 'creative_work.yaml#/CreativeWork'
    - type: object
      description: A media object, such as an image, video, or audio object embedded in a web page or a downloadable dataset i.e. DataDownload. Note that a creative work may have many media objects associated with it on the same web page. For example, a page about a single song (MusicRecording) may have a music video (VideoObject), and a high and low bandwidth audio stream (2 AudioObject's).
      properties:
        associatedArticle:
          $ref: 'news_article.yaml#/NewsArticle'
          description: A NewsArticle associated with the Media Object.
        bitrate:
          type: string
          description: The bitrate of the media object.
        contentSize:
          type: string
          description: File size in (mega/kilo) bytes.
        contentUrl:
          type: string
          description: Actual bytes of the media object, for example the image file or video file.
        # duration:
        #   $ref: 'duration.yaml#/Duration'
        #   description: The duration of the item (movie, audio recording, event, etc.) in ISO 8601 date format.
        embedUrl:
          type: string
          description: A URL pointing to a player for a specific video. In general, this is the information in the src element of an embed tag and should not be the same as the content of the loc tag.
        encodesCreativeWork:
          $ref: 'creative_work.yaml#/CreativeWork'
          description: The CreativeWork encoded by this media object.
        encodingFormat:
          type: string
          description: >
            Media type typically expressed using a MIME format (see IANA site and MDN reference) e.g. application/zip for a SoftwareApplication binary, audio/mpeg for .mp3 etc.).
            In cases where a CreativeWork has several media type representations, encoding can be used to indicate each MediaObject alongside particular encodingFormat information.
            Unregistered or niche encoding and file formats can be indicated instead via the most appropriate URL, e.g. defining Web page or a Wikipedia/Wikidata entry. Supersedes fileFormat.
        height:
          oneOf:
            - $ref: 'distance.yaml#/Distance'
            - $ref: 'quantitative_value.yaml#/QuantitativeValue'
          description: The height of the item.
        playerType:
          type: string
          description: Player type required—for example, Flash or Silverlight.
        productionCompany:
          $ref: 'organization.yaml#/Organization'
          description: The production company or studio responsible for the item e.g. series, video game, episode etc.
        regionsAllowed:
          $ref: 'place.yaml#/Place'
          description: The regions where the media is allowed. If not specified, then it's assumed to be allowed everywhere. Specify the countries in ISO 3166 format.
        # requiresSubscription:
        #   oneOf:
        #     - type: boolean
        #     - $ref: 'media_subscription.yaml#/MediaSubscription'
        #   description: Indicates if use of the media require a subscription (either paid or free). Allowed values are true or false (note that an earlier version had 'yes', 'no').
        uploadDate:
          oneOf:
            - type: string
            - $ref: 'date.yaml#/Date'
          description: Date when this media object was uploaded to this site.
        width:
          oneOf:
            - $ref: 'distance.yaml#/Distance'
            - $ref: 'quantitativeValue.yaml#/QuantitativeValue'
          description: The width of the item.
NewsArticle:
  allOf:
    - $ref: 'article.yaml#/Article'
    - type: object
      description: >
        A NewsArticle is an article whose content reports news, or provides background context and supporting materials for understanding the news.
        A more detailed overview of schema.org News markup is also available.
      properties:
        dateline:
          type: string
          description: >
            A dateline is a brief piece of text included in news articles that describes where and when the story was written or filed though the date is often omitted. Sometimes only a placename is provided.

            Structured representations of dateline-related information can also be expressed more explicitly using locationCreated (which represents where a work was created e.g. where a news report was written). For location depicted or described in the content, use contentLocation.

            Dateline summaries are oriented more towards human readers than towards automated processing, and can vary substantially. Some examples; "BEIRUT, Lebanon, June 2.", "Paris, France", "December 19, 2017 11:43AM Reporting from Washington", "Beijing/Moscow", "QUEZON CITY, Philippines".
        printColumn:
          type: string
          description: The number of the column in which the NewsArticle appears in the print edition.
        printEdition:
          type: string
          description: The edition of the print product in which the NewsArticle appears.
        printPage:
          type: string
          description: If this NewsArticle appears in print, this field indicates the name of the page on which the article is found. Please note that this field is intended for the exact page name (e.g. A5, B18).
        printSection:
          type: string
          description: If this NewsArticle appears in print, this field indicates the print section in which the article appeared.
Organization:
  allOf:
    - $ref: 'thing.yaml#/Thing'
    - type: object
      description: An organization such as a school, NGO, corporation, club, etc.
      properties:
        address:
          oneOf:
            - type: string
            - $ref: 'postal_address.yaml#/PostalAddress'
          description: Physical address of the item.
        contactPoint: # A contact point for a person or organization. Supersedes 'contactPoints'.
          $ref: 'contact_point.yaml#/ContactPoint'
        department: # A relationship between an organization and a department of that organization, also described as an organization (allowing different urls, logos, opening hours).
          $ref: 'organization.yaml#/Organization'
        email:
          type: string
          description: Email address.
        employee: # Someone working for this organization. Supersedes employees.
          $ref: 'person.yaml#/Person'
Person:
  allOf:
    - $ref: 'thing.yaml#/Thing'
    - type: object
      description: A person (alive, dead, undead, or fictional).
      properties:
        additionalName:
          type: string
          description: An additional name for a Person, can be used for a middle name.
        address:
          oneOf:
            - type: string
            - $ref: 'postal_address.yaml#/PostalAddress'
          description: Physical address of the item.
        affiliation: # An organization that this person is affiliated with. For example, a school/university, a club, or a team.
          $ref: 'organization.yaml#/Organization'
        email:
          type: string
          description: Email address.
        familyName:
          type: string
          description: Family name. In the U.S., the last name of an Person. This can be used along with givenName instead of the name property.
        givenName:
          type: string
          description: Given name. In the U.S., the first name of a Person. This can be used along with familyName instead of the name property.
Place:
  allOf:
    - $ref: 'thing.yaml#/Thing'
    - type: object
      description: Entities that have a somewhat fixed, physical extension.
      properties:
        additionalProperty:
          type: string
          description: >
            A property-value pair representing an additional characteristics of the entitity, e.g. a product feature or another characteristic for which there is no matching property in schema.org.
            Note; Publishers should be aware that applications designed to use specific schema.org properties (e.g. http://schema.org/width, http://schema.org/color, http://schema.org/gtin13, ...) will typically expect such data to be provided using those properties, rather than using the generic property/value mechanism.
        address:
          oneOf:
            - type: string
            - $ref: 'postal_address.yaml#/PostalAddress'
          description: Physical address of the item.
        aggregateRating:
          $ref: 'aggregate_rating.yaml#/AggregateRating'
          description: The overall rating, based on a collection of reviews or ratings, of the item.
        amenityFeature:
          $ref: 'location_feature_specification.yaml#/LocationFeatureSpecification'
          description: An amenity feature (e.g. a characteristic or service) of the Accommodation. This generic property does not make a statement about whether the feature is included in an offer for the main accommodation or available at extra costs.
        branchCode:
          type: string
          description: >
            A short textual code (also called "store code") that uniquely identifies a place of business. The code is typically assigned by the parentOrganization and used in structured URLs.
            For example, in the URL http://www.starbucks.co.uk/store-locator/etc/detail/3047 the code "3047" is a branchCode for a particular branch.
        containedInPlace:
          $ref: 'place.yaml#/Place'
          description: The basic containment relation between a place and one that contains it. Supersedes containedIn. Inverse property; containsPlace.
        containsPlace:
          $ref: 'place.yaml#/Place'
          description: The basic containment relation between a place and another that it contains. Inverse property; containedInPlace.
        event:
          $ref: 'event.yaml#/Event'
          description: Upcoming or past event associated with this place, organization, or action. Supersedes events.
        faxNumber:
          type: string
          description: The fax number.
        geo:
          oneOf:
            - $ref: 'geo_coordinates.yaml#/GeoCoordinates'
            - $ref: 'geo_Shape.yaml#/GeoShape'
          description: The geo coordinates of the place.
        globalLocationNumber:
          type: string
          description: The Global Location Number (GLN, sometimes also referred to as International Location Number or ILN) of the respective organization, person, or place. The GLN is a 13-digit number used to identify parties and physical locations.
        hasMap:
          oneOf:
            - type: string
            - $ref: 'map.yaml#/Map'
          description: A URL to a map of the place. Supersedes map, maps.
        isAccessibleForFree:
          type: boolean
          description: A flag to signal that the item, event, or place is accessible for free. Supersedes free.
        isicV4:
          type: string
          description: The International Standard of Industrial Classification of All Economic Activities (ISIC), Revision 4 code for a particular organization, business person, or place.
        logo:
          oneOf:
            - type: string
            - $ref: 'image_object.yaml#/ImageObject'
          description: An associated logo.
        maximumAttendeeCapacity:
          type: integer
          description: The total number of individuals that may attend an event or venue.
        openingHoursSpecification:
          $ref: 'opening_hours_specification.yaml#/OpeningHoursSpecification'
          description: The opening hours of a certain place.
        photo:
          oneOf:
            - $ref: 'image_object.yaml#/ImageObject'
            - $ref: 'photograph.yaml#/Photograph'
          description: A photograph of this place. Supersedes photos.
        publicAccess:
          type: boolean
          description: A flag to signal that the Place is open to public visitors. If this property is omitted there is no assumed default boolean value
        review:
          $ref: 'review.yaml#/Review'
          description: A review of the item. Supersedes reviews.
        smokingAllowed:
          type: boolean
          description: Indicates whether it is allowed to smoke in the place, e.g. in the restaurant, hotel or hotel room.
        specialOpeningHoursSpecification:
          $ref: 'opening_hours_specification.yaml#/OpeningHoursSpecification'
          description: The special opening hours of a certain place. Use this to explicitly override general opening hours brought in scope by openingHoursSpecification or openingHours.
        telephone:
          type: string
          description: The telephone number.
PostalAddress:
  allOf:
    - $ref: 'contact_point.yaml#/ContactPoint'
    - type: object
      description: The mailing address.
      properties:
        addressCountry:
          type: string
          description: The country. For example, USA. You can also provide the two-letter ISO 3166-1 alpha-2 country code.
        addressLocality:
          type: string
          description: The locality. For example, Mountain View.
        addressRegion:
          type: string
          description: The region. For example, CA.
        postOfficeBoxNumber:
          type: string
          description: The post office box number for PO box addresses.
        postalCode:
          type: string
          description: The postal code. For example, 94043.
        streetAddress:
          type: string
          description: The street address. For example, 1600 Amphitheatre Pkwy.
Property:
  allOf:
    - $ref: 'intangible.yaml#/Intangible'
    - type: object
      description: A property, used to indicate attributes and relationships of some Thing.
PropertyValue:
  allOf:
    - $ref: 'structured_value.yaml#/StructuredValue'
    - type: object
      description: A property-value pair, e.g. representing a feature of a product or place. Use the 'name' property for the name of the property. If there is an additional human-readable version of the value, put that into the 'description' property.
QualitativeValue:
  allOf:
    - $ref: 'enumeration.yaml#/Enumeration'
    - type: object
      description: A predefined value for a product characteristic, e.g. the power cord plug type 'US' or the garment sizes 'S', 'M', 'L', and 'XL'.
      properties:
        additionalProperty:
          type: string
          description: >
            A property-value pair representing an additional characteristics of the entitity, e.g. a product feature or another characteristic for which there is no matching property in schema.org.
            Note; Publishers should be aware that applications designed to use specific schema.org properties (e.g. http://schema.org/width, http://schema.org/color, http://schema.org/gtin13, ...) will typically expect such data to be provided using those properties, rather than using the generic property/value mechanism.
        equal:
          $ref: 'qualitative_value.yaml#/QualitativeValue'
          description: This ordering relation for qualitative values indicates that the subject is equal to the object.
        greater:
          $ref: 'qualitative_value.yaml#/QualitativeValue'
          description: This ordering relation for qualitative values indicates that the subject is greater than the object.
        greaterOrEqual:
          $ref: 'qualitative_value.yaml#/QualitativeValue'
          description: This ordering relation for qualitative values indicates that the subject is greater than or equal to the object.
        lesser:
          $ref: 'qualitative_value.yaml#/QualitativeValue'
          description: This ordering relation for qualitative values indicates that the subject is lesser than the object.
        lesserOrEqual:
          $ref: 'qualitative_value.yaml#/QualitativeValue'
          description: This ordering relation for qualitative values indicates that the subject is lesser than or equal to the object.
        nonEqual:
          $ref: 'qualitative_value.yaml#/QualitativeValue'
          description: This ordering relation for qualitative values indicates that the subject is not equal to the object.
        valueReference:
          oneOf:
            - $ref: 'enumeration.yaml#/Enumeration'
            - $ref: 'qualitative_value.yaml#/QualitativeValue'
            - $ref: 'quantitative_value.yaml#/QuantitativeValue'
            - $ref: 'structured_value.yaml#/StructuredValue'
          description: A pointer to a secondary value that provides additional information on the original value, e.g. a reference temperature.
QuantitativeValue:
  allOf:
    - $ref: 'structured_value.yaml#/StructuredValue'
    - type: object
      description: A point value or interval for product characteristics and other purposes.
      properties:
        additionalProperty:
          type: string
          description: >
            A property-value pair representing an additional characteristics of the entitity, e.g. a product feature or another characteristic for which there is no matching property in schema.org.
            Note; Publishers should be aware that applications designed to use specific schema.org properties (e.g. http://schema.org/width, http://schema.org/color, http://schema.org/gtin13, ...) will typically expect such data to be provided using those properties, rather than using the generic property/value mechanism.
        maxValue:
          type: string
          description: The upper value of some characteristic or property.
        minValue:
          type: string
          description: The lower value of some characteristic or property.
        unitCode:
          type: string
          description: The unit of measurement given using the UN/CEFACT Common Code (3 characters) or a URL. Other codes than the UN/CEFACT Common Code may be used with a prefix followed by a colon.
        unitText:
          type: string
          description: A string or text indicating the unit of measurement. Useful if you cannot provide a standard unit code for unitCode.
        value:
          oneOf:
            - type: string
            - type: number
            - $ref: 'structured_value.yaml#/StructuredValue'
          description: >
            The value of the quantitative value or property value node.
            * For QuantitativeValue and MonetaryAmount, the recommended type for values is 'Number'.
            * For PropertyValue, it can be 'Text;', 'Number', 'Boolean', or 'StructuredValue'.
        valueReference:
          oneOf:
            - $ref: 'enumeration.yaml#/Enumeration'
            - $ref: 'qualitative_value.yaml#/QualitativeValue'
            - $ref: 'quantitative_value.yaml#/QuantitativeValue'
            - $ref: 'structured_value.yaml#/StructuredValue'
          description: A pointer to a secondary value that provides additional information on the original value, e.g. a reference temperature.
Quantity:
  allOf:
    - $ref: 'intangible.yaml#/Intangible'
    - type: object
      description: Quantities such as distance, time, mass, weight, etc. Particular instances of say Mass are entities like '3 Kg' or '4 milligrams'.
Review:
  allOf:
    - $ref: 'creative_work.yaml#/CreativeWork'
    - type: object
      description: A review of an item - for example, of a restaurant, movie, or store.
      properties:
        author:
          $ref: 'person.yaml#/Person'
ScholarlyArticle:
  allOf:
    - $ref: 'article.yaml#/Article'
    - type: object
      description: A scholarly article.
StructuredValue:
  allOf:
    - $ref: 'thing.yaml#/Thing'
    - type: object
      description: Structured values are used when the value of a property has a more complex structure than simply being a textual value or a reference to another thing.
Submission:
  allOf:
    - $ref: 'thing.yaml#/Thing'
    - type: object
      description: A submission object.
      properties:
        creator:
          $ref: 'person.yaml#/Person'
        dateCreated:
          type: string
          description: Creation date of object
          format: date
        dateModified:
          type: string
          description: Date of last modification to object
          format: date
        reviews:
          type: array
          description: Reviews of object
          items:
            $ref: 'review.yaml#/Review'
        scholarlyArticle:
          $ref: 'scholarly_article.yaml#/ScholarlyArticle'
        status:
          type: string
          description: Status of submission
        submissionType:
          type: string
          description: |
            Type of submission
            This should be determined/generated based on the type of submission.
          enum:
            - audio
            - article
            - book
            - chapter
            - ebook
            - issue
            - journal
            - media
            - other
            - video
            - volume
Thing:
  type: object
  description: The most generic type of item.
  properties:
    _id:
      type: string
      description: Hexstring unique identifier. Generated automatically for new instances.
    additionalType:
      type: string
      description: An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. In RDFa syntax, it is better to use the native RDFa syntax - the 'typeof' attribute - for multiple types. Schema.org tools may have only weaker understanding of extra types, in particular those defined externally.
    alternateName:
      type: string
      description: An alias for the item.
    description:
      type: string
      description: A description of the item.
    disambiguatingDescription:
      type: string
      description: A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation.
    identifier:
      oneOf:
        - type: string
        - $ref: 'property_value.yaml#/PropertyValue'
      description: The identifier property represents any kind of identifier for any kind of Thing, such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links.
    image:
      oneOf:
        - type: string
        - $ref: 'image_object.yaml#/ImageObject'
      description: An image of the item. This can be a URL or a fully described ImageObject.
    mainEntityOfPage:
      oneOf:
        - type: string
        - $ref: 'creative_work.yaml#/CreativeWork'
      description: Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See background notes for details. Inverse property; mainEntity.
    potentialAction:
      $ref: 'action.yaml#/Action'
    name:
      type: string
      description: The name of the item.
    sameAs:
      type: string
      description: URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website.
    subjectOf:
      oneOf:
        - $ref: 'creative_work.yaml#/CreativeWork'
        - $ref: 'event.yaml#/Event'
      description: A CreativeWork or Event about this Thing. Inverse property; about.
    url:
      type: string
      description: URL of the item.
